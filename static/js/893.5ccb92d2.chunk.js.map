{"version":3,"file":"static/js/893.5ccb92d2.chunk.js","mappings":";kHASA,IAAIA,EAAuBC,EAAQ,MAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPN,CAQF,CAEA,SAASG,IACP,OAAOV,CACT,CAHAA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBpC,EAChBC,kBAAmBF,GAKrB,OAFAiB,EAAeqB,UAAYrB,EAEpBA,CACT,wBC/CEd,EAAOC,QAAUL,EAAQ,IAARA,kCCNnBI,EAAOC,QAFoB,kJCR3B,SAASmC,EAAQC,EAAGC,GAClB,IAAIC,EAAIC,OAAOC,KAAKJ,GACpB,GAAIG,OAAOE,sBAAuB,CAChC,IAAIC,EAAIH,OAAOE,sBAAsBL,GACrCC,IAAMK,EAAIA,EAAEC,QAAO,SAAUN,GAC3B,OAAOE,OAAOK,yBAAyBR,EAAGC,GAAGQ,UAC/C,KAAKP,EAAEQ,KAAKC,MAAMT,EAAGI,EACvB,CACA,OAAOJ,CACT,CACe,SAASU,EAAeZ,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIY,UAAUC,OAAQb,IAAK,CACzC,IAAIC,EAAI,MAAQW,UAAUZ,GAAKY,UAAUZ,GAAK,CAAC,EAC/CA,EAAI,EAAIF,EAAQI,OAAOD,IAAI,GAAIa,SAAQ,SAAUd,IAC/C,OAAeD,EAAGC,EAAGC,EAAED,GACzB,IAAKE,OAAOa,0BAA4Bb,OAAOc,iBAAiBjB,EAAGG,OAAOa,0BAA0Bd,IAAMH,EAAQI,OAAOD,IAAIa,SAAQ,SAAUd,GAC7IE,OAAOe,eAAelB,EAAGC,EAAGE,OAAOK,yBAAyBN,EAAGD,GACjE,GACF,CACA,OAAOD,CACT,yKCZO,SAASmB,EAAcC,EAAWC,EAASC,GAChD,IAAMC,EAAKC,SAASL,cAAcE,GAOlC,OANID,IACFG,EAAGH,UAAYA,GAEbE,GACFA,EAAWG,YAAYF,GAElBA,CACR,CAOM,SAASG,EAAeC,EAAIC,GAMjC,OALAD,EAAGE,EAAID,EAAGC,EACVF,EAAGG,EAAIF,EAAGE,OACIC,IAAVH,EAAGI,KACLL,EAAGK,GAAKJ,EAAGI,IAENL,CACR,CAKM,SAASM,EAAWC,GACzBA,EAAEL,EAAIM,KAAKC,MAAMF,EAAEL,GACnBK,EAAEJ,EAAIK,KAAKC,MAAMF,EAAEJ,EACpB,CASM,SAASO,EAAmBV,EAAIC,GACrC,IAAMC,EAAIM,KAAKG,IAAIX,EAAGE,EAAID,EAAGC,GACvBC,EAAIK,KAAKG,IAAIX,EAAGG,EAAIF,EAAGE,GAC7B,OAAOK,KAAKI,KAAMV,EAAIA,EAAMC,EAAIA,EACjC,CASM,SAASU,EAAYb,EAAIC,GAC9B,OAAOD,EAAGE,IAAMD,EAAGC,GAAKF,EAAGG,IAAMF,EAAGE,CACrC,CAUM,SAASW,EAAMC,EAAKC,EAAKC,GAC9B,OAAOT,KAAKQ,IAAIR,KAAKS,IAAIF,EAAKC,GAAMC,EACrC,CAUM,SAASC,EAAkBhB,EAAGC,EAAGgB,GACtC,IAAIC,EAAY,eAAH,OAAkBlB,EAAE,cAAKC,GAAK,EAAE,SAM7C,YAJcC,IAAVe,IACFC,GAAa,YAAJ,OAAgBD,EAAM,YAAGA,EAAM,QAGnCC,CACR,CAUM,SAASC,EAAazB,EAAIM,EAAGC,EAAGgB,GACrCvB,EAAG0B,MAAMC,UAAYL,EAAkBhB,EAAGC,EAAGgB,EAC9C,CAYM,SAASK,EAAmB5B,EAAI6B,EAAMC,EAAUC,GAIrD/B,EAAG0B,MAAMM,WAAaH,EAAI,UACnBA,EAAK,YAAGC,EAAS,cAAKC,GAfN,4BAgBnB,MACL,CASM,SAASE,EAAejC,EAAIkC,EAAGC,GACpCnC,EAAG0B,MAAMU,MAAsB,kBAANF,EAAR,UAA6BA,EAAE,MAAMA,EACtDlC,EAAG0B,MAAMW,OAAuB,kBAANF,EAAR,UAA6BA,EAAE,MAAMA,CACxD,CA8BM,IAAMG,EACL,OADKA,EAEF,UAFEA,EAGH,SAHGA,EAIJ,QA0DF,SAASC,IACd,SAAUC,UAAUC,SAAUD,UAAUC,OAAOC,MAAM,UACtD,CCtOD,IAAIC,GAAkB,EAEtB,IAEEC,OAAOC,iBAAiB,OAAQ,KAAMjE,OAAOe,eAAe,CAAC,EAAG,UAAW,CACzEmD,IAAK,WACHH,GAAkB,CACnB,IAEQ,CAAX,MAAOlE,IAAI,CAGb,IAQMsE,EAAN,WACEC,SAAAA,KAAcC,EAAAA,EAAAA,GAAAA,KAAAA,GAKZC,KAAKC,MAAQ,EACd,CA+FA,OA7FDC,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,MAAAC,MAQAC,SAAIC,EAAQC,EAAMC,EAAUC,GAC1BT,KAAKU,gBAAgBJ,EAAQC,EAAMC,EAAUC,EAC9C,GAED,CAAAN,IAAAA,SAAAC,MAQAO,SAAOL,EAAQC,EAAMC,EAAUC,GAC7BT,KAAKU,gBAAgBJ,EAAQC,EAAMC,EAAUC,GAAS,EACvD,GAED,CAAAN,IAAAA,YAAAC,MAGAQ,WAAY,WACVZ,KAAKC,MAAM3D,SAASuE,SAAAA,GAClBC,EAAKJ,gBACHG,EAASP,OACTO,EAASN,KACTM,EAASL,SACTK,EAASJ,SACT,GACA,MAGJT,KAAKC,MAAQ,EACd,GAED,CAAAE,IAAAA,kBAAAC,MAWAM,SAAgBJ,EAAQC,EAAMC,EAAUC,EAASM,EAAQC,GAAU,WACjE,GAAKV,EAAL,CAIA,IAAMW,EAAaF,EAAS,sBAAwB,mBACtCR,EAAKW,MAAM,KACnB5E,SAAS6E,SAAAA,GACb,GAAIA,EAAO,CAGJH,IACCD,EAEFK,EAAKnB,MAAQmB,EAAKnB,MAAMnE,QAAQ+E,SAAAA,GAC9B,OAAOA,EAASN,OAASY,GACpBN,EAASL,WAAaA,GACtBK,EAASP,SAAWA,CAC1B,IAGDc,EAAKnB,MAAMhE,KAAK,CACdqE,OAAAA,EACAC,KAAMY,EACNX,SAAAA,EACAC,QAAAA,KAON,IAAMY,IAAe5B,GAAkB,CAAEgB,QAAUA,IAAW,GAE9DH,EAAOW,GACLE,EACAX,EACAa,EAEH,IApCF,CAsCF,OAtGH,GCXO,SAASC,EAAgBC,EAASC,GACvC,GAAID,EAAQE,kBAAmB,CAC7B,IAAMC,EAAkBH,EAAQE,kBAAkBF,EAASC,GAC3D,GAAIE,EACF,OAAOA,CAEV,CAED,MAAO,CACLtE,EAAGL,SAAS4E,gBAAgBC,YAM5BvE,EAAGqC,OAAOmC,YAEb,CAqCM,SAASC,EAAmBnD,EAAM4C,EAASQ,EAAcC,EAAUC,GACxE,IAAIC,EAAe,EAEnB,GAAIX,EAAQY,UACVD,EAAeX,EAAQY,UAAUJ,EAAcC,EAAUC,GAAOtD,QAC3D,GAAI4C,EAAQa,QACjBF,EAAeX,EAAQa,QAAQzD,OAC1B,CACL,IAAM0D,EAAiB,UAAY1D,EAAK,GAAG2D,cAAgB3D,EAAK4D,MAAM,GAElEhB,EAAQc,KAEVH,EAAeX,EAAQc,GAE1B,CAED,OAAOG,OAAON,IAAiB,CAChC,CASM,SAASO,EAAelB,EAASQ,EAAcC,EAAUC,GAC9D,MAAO,CACL7E,EAAG2E,EAAa3E,EACZ0E,EAAmB,OAAQP,EAASQ,EAAcC,EAAUC,GAC5DH,EAAmB,QAASP,EAASQ,EAAcC,EAAUC,GACjE5E,EAAG0E,EAAa1E,EACZyE,EAAmB,MAAOP,EAASQ,EAAcC,EAAUC,GAC3DH,EAAmB,SAAUP,EAASQ,EAAcC,EAAUC,GAErE,CC5FD,IAGMS,EAAN,WAIE5C,SAAAA,EAAY6C,IAAO5C,EAAAA,EAAAA,GAAAA,KAAAA,GACjBC,KAAK2C,MAAQA,EACb3C,KAAK4C,cAAgB,EACrB5C,KAAK6C,OAA8B,CAAEzF,EAAG,EAAGC,EAAG,GAC9C2C,KAAK7B,IAA2B,CAAEf,EAAG,EAAGC,EAAG,GAC3C2C,KAAK9B,IAA2B,CAAEd,EAAG,EAAGC,EAAG,EAC5C,CAwEA,OAtED6C,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,SAAAC,MAKA0C,SAAOF,GACL5C,KAAK4C,cAAgBA,EAEhB5C,KAAK2C,MAAMzD,OAGdc,KAAK+C,YAAY,KACjB/C,KAAK+C,YAAY,KACjB/C,KAAK2C,MAAMnB,KAAKwB,SAAS,aAAc,CAAEL,MAAO3C,KAAK2C,SAJrD3C,KAAKiD,OAMR,GAED,CAAA9C,IAAAA,cAAAC,MAKA2C,SAAYG,GACV,IAAQ1B,EAASxB,KAAK2C,MAAdnB,KACF2B,EAASnD,KAAK2C,MAAe,MAATO,EAAe,QAAU,UAAYlD,KAAK4C,cAE9DR,EAAUN,EADa,MAAToB,EAAe,OAAS,MAG1C1B,EAAKD,QACLC,EAAKO,aACL/B,KAAK2C,MAAMS,KACXpD,KAAK2C,MAAMV,OAGPoB,EAAcrD,KAAK2C,MAAMU,YAAYH,GAI3ClD,KAAK6C,OAAOK,GAAQxF,KAAKC,OAAO0F,EAAcF,GAAU,GAAKf,EAG7DpC,KAAK7B,IAAI+E,GAASC,EAASE,EACvB3F,KAAKC,MAAM0F,EAAcF,GAAUf,EACnCpC,KAAK6C,OAAOK,GAGhBlD,KAAK9B,IAAIgF,GAASC,EAASE,EACvBjB,EACApC,KAAK6C,OAAOK,EACjB,GA7Da,CAAA/C,IAAAA,QAAAC,MAgEd6C,WACEjD,KAAK6C,OAAOzF,EAAI,EAChB4C,KAAK6C,OAAOxF,EAAI,EAChB2C,KAAK7B,IAAIf,EAAI,EACb4C,KAAK7B,IAAId,EAAI,EACb2C,KAAK9B,IAAId,EAAI,EACb4C,KAAK9B,IAAIb,EAAI,CACd,GAED,CAAA8C,IAAAA,aAAAC,MAOAkD,SAAWJ,EAAMK,GACf,OAAOvF,EAAMuF,EAAWvD,KAAK7B,IAAI+E,GAAOlD,KAAK9B,IAAIgF,GAClD,OAlFH,GCGMM,EAAN,WAOE1D,SAAAA,EAAYyB,EAASS,EAAUC,EAAOT,IAAMzB,EAAAA,EAAAA,GAAAA,KAAAA,GAC1CC,KAAKwB,KAAOA,EACZxB,KAAKuB,QAAUA,EACfvB,KAAKgC,SAAWA,EAChBhC,KAAKiC,MAAQA,EAEbjC,KAAKqD,YAAc,KAEnBrD,KAAKyD,YAAc,KACnBzD,KAAK0D,IAAM,EACX1D,KAAK2D,KAAO,EACZ3D,KAAK4D,MAAQ,EACb5D,KAAK6D,QAAU,EACf7D,KAAK8D,UAAY,EACjB9D,KAAK7B,IAAM,EACX6B,KAAK9B,IAAM,CACZ,CA8HA,OA5HDgC,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,SAAAC,MASA0C,SAAOiB,EAAUC,EAAWX,GAE1B,IAAMI,EAAc,CAAErG,EAAG2G,EAAU1G,EAAG2G,GACtChE,KAAKyD,YAAcA,EACnBzD,KAAKqD,YAAcA,EAEnB,IAAMY,EAASZ,EAAYjG,EAAIqG,EAAYrG,EACrC8G,EAASb,EAAYhG,EAAIoG,EAAYpG,EAE3C2C,KAAK0D,IAAMhG,KAAKQ,IAAI,EAAG+F,EAASC,EAASD,EAASC,GAClDlE,KAAK2D,KAAOjG,KAAKQ,IAAI,EAAG+F,EAASC,EAASD,EAASC,GAInDlE,KAAK4D,MAAQlG,KAAKQ,IAAI,EAAGgG,GAEzBlE,KAAK6D,QAAU7D,KAAKmE,cACpBnE,KAAK8D,UAAY9D,KAAKoE,gBACtBpE,KAAK7B,IAAMT,KAAKS,IACd6B,KAAK6D,QACL7D,KAAK8D,UACL9D,KAAKqE,WAGPrE,KAAK9B,IAAMR,KAAKQ,IACd8B,KAAK0D,IACL1D,KAAK6D,QACL7D,KAAK8D,WAGH9D,KAAKwB,MACPxB,KAAKwB,KAAKwB,SAAS,mBAAoB,CAAEsB,WAAYtE,KAAMuE,UAAWvE,KAAKgC,UAE9E,GAED,CAAA7B,IAAAA,wBAAAC,MAOAoE,SAAsBC,GACpB,IAAMC,EACJD,EAAe,YAEXE,EAAc3E,KAAKuB,QAAQmD,GAEjC,GAAKC,EAIL,MAA2B,oBAAhBA,EACFA,EAAY3E,MAGD,SAAhB2E,EACK3E,KAAK2D,KAGM,QAAhBgB,EACK3E,KAAK0D,IAGPlB,OAAOmC,EACf,GAED,CAAAxE,IAAAA,gBAAAC,MASAgE,WACE,IAAIxB,EAAgB5C,KAAKwE,sBAAsB,aAE/C,OAAI5B,IAKJA,EAAgBlF,KAAKQ,IAAI,EAAc,EAAX8B,KAAK0D,KAE7B1D,KAAKyD,aAAeb,EAAgB5C,KAAKyD,YAAYrG,EArIrC,MAsIlBwF,EAtIkB,IAsIgB5C,KAAKyD,YAAYrG,GAG9CwF,EACR,GAED,CAAAzC,IAAAA,cAAAC,MAMA+D,WACE,OAAOnE,KAAKwE,sBAAsB,YAAcxE,KAAK0D,GACtD,GAED,CAAAvD,IAAAA,UAAAC,MAQAiE,WAGE,OAAOrE,KAAKwE,sBAAsB,QAAU9G,KAAKS,IAAI,EAAc,EAAX6B,KAAK0D,IAC9D,OArJH,GCuBMkB,EAAN,WAME9E,SAAAA,EAAYsD,EAAMnB,EAAOT,IAAMzB,EAAAA,EAAAA,GAAAA,KAAAA,GAC7BC,KAAKoD,KAAOA,EACZpD,KAAKiC,MAAQA,EACbjC,KAAKwB,KAAOA,EACZxB,KAAK6E,SAAY5C,IAAUT,EAAKsD,UAChC9E,KAAK+E,kBAAoB,EAEzB/E,KAAKqD,YAAc,CAAEjG,EAAG,EAAGC,EAAG,GAE9B2C,KAAKgF,IAAM,CAAE5H,EAAG,EAAGC,EAAG,GAEtB2C,KAAKiF,aAAgBjF,KAAK6E,WAAarD,EAAK0D,OAAOC,OAEnDnF,KAAKsE,WAAa,IAAId,EAAUhC,EAAKD,QAAS6B,EAAMnB,EAAOT,GAE3DxB,KAAKwB,KAAKwB,SAAS,cAAe,CAChCL,MAAO3C,KACPoD,KAAMpD,KAAKoD,KACXnB,MAAAA,IAGFjC,KAAKoF,QAAUpF,KAAKwB,KAAK6D,cAAcC,kBAAkBtF,MACzDA,KAAKuF,UAAY7I,EAAc,kBAAmB,OAElDsD,KAAKwF,cAAgB,KAErBxF,KAAK4C,cAAgB,EAErB5C,KAAKd,MAAQc,KAAKoF,QAAQlG,MAE1Bc,KAAKb,OAASa,KAAKoF,QAAQjG,OAC3Ba,KAAKyF,eAAgB,EACrBzF,KAAK0F,OAAS,IAAIhD,EAAU1C,MAE5BA,KAAK2F,oBAAsB,EAC3B3F,KAAK4F,qBAAuB,EAE5B5F,KAAKwB,KAAKwB,SAAS,YAAa,CAAEL,MAAO3C,MAC1C,CAuaA,OAraDE,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,cAAAC,MAKAyF,SAAYhB,GACNA,IAAa7E,KAAK6E,SAEpB7E,KAAK8F,YACKjB,GAAY7E,KAAK6E,UAE3B7E,KAAK+F,YAER,GAED,CAAA5F,IAAAA,SAAAC,MAKA4F,SAAOR,GACLxF,KAAKwF,cAAgBA,EAErBxF,KAAKuF,UAAU/G,MAAMyH,gBAAkB,MAGlCjG,KAAKoD,OAIVpD,KAAKkG,gBAELlG,KAAKmG,OACLnG,KAAKoG,oBACLpG,KAAKqG,cAELrG,KAAKwF,cAAcxI,YAAYgD,KAAKuF,WAEpCvF,KAAKsG,sBAELtG,KAAKwB,KAAKwB,SAAS,eAAgB,CAAEL,MAAO3C,OAE5CA,KAAKuG,sBAELvG,KAAKwB,KAAKwB,SAAS,kBAAmB,CAAEL,MAAO3C,OAE3CA,KAAK6E,UACP7E,KAAK8F,WAER,IAAA3F,IAAAA,OAAAC,MAED+F,WACEnG,KAAKoF,QAAQe,MAAK,GAClBnG,KAAKwB,KAAKwB,SAAS,YAAa,CAAEL,MAAO3C,MAC1C,GAED,CAAAG,IAAAA,cAAAC,MAMAiG,WACE,IAAQ7E,EAASxB,KAATwB,MAIJxB,KAAKyF,eACDjE,EAAK0D,OAAOC,SACb3D,EAAKgF,WAAWC,cACdzG,KAAK6E,SAAN,KAIJ7E,KAAKwB,KAAKwB,SAAS,cAAe,CAAEL,MAAO3C,OAAQ0G,mBAIvD1G,KAAKyF,eAAgB,EAErBzF,KAAKoF,QAAQY,SAEbhG,KAAKwB,KAAKwB,SAAS,qBAAsB,CAAEL,MAAO3C,QACnD,GAED,CAAAG,IAAAA,WAAAC,MAMA0F,WACE9F,KAAK6E,UAAW,EAChB7E,KAAKqG,cACLrG,KAAKoF,QAAQU,WACb9F,KAAKwB,KAAKwB,SAAS,gBAAiB,CAAEL,MAAO3C,MAC9C,GAED,CAAAG,IAAAA,aAAAC,MAKA2F,WACE/F,KAAK6E,UAAW,EAChB7E,KAAKoF,QAAQW,aAET/F,KAAK4C,gBAAkB5C,KAAKsE,WAAWT,SAEzC7D,KAAKkG,gBAIPlG,KAAK+E,kBAAoB,EACzB/E,KAAKsG,sBACLtG,KAAKuG,sBACLvG,KAAKoG,oBAELpG,KAAKwB,KAAKwB,SAAS,kBAAmB,CAAEL,MAAO3C,MAChD,GAED,CAAAG,IAAAA,UAAAC,MAIAuG,WACE3G,KAAKoF,QAAQwB,UAAW,EACxB5G,KAAKoF,QAAQzE,SACbX,KAAKuF,UAAU5E,SACfX,KAAKwB,KAAKwB,SAAS,eAAgB,CAAEL,MAAO3C,MAC7C,IAAAG,IAAAA,SAAAC,MAEDyG,WACM7G,KAAK4C,gBAAkB5C,KAAKsE,WAAWT,SAAY7D,KAAK6E,UAY1D7E,KAAKkG,gBACLlG,KAAK0F,OAAO5C,OAAO9C,KAAK4C,eACxB5C,KAAK8G,MAAM9G,KAAKgF,IAAI5H,EAAG4C,KAAKgF,IAAI3H,KAThC2C,KAAKkG,gBACLlG,KAAK+E,kBAAoB,EACzB/E,KAAKsG,sBACLtG,KAAKuG,sBACLvG,KAAKoG,oBAOR,GAGD,CAAAjG,IAAAA,oBAAAC,MAMAgG,SAAkBW,GAGhB,IAAMC,EAAkBhH,KAAK+E,mBAAqB/E,KAAKsE,WAAWT,QAElE,GAAKmD,EAAL,CAIA,IAAM9H,EAAQxB,KAAKC,MAAMqC,KAAKd,MAAQ8H,IAAoBhH,KAAKwB,KAAKO,aAAa3E,EAC3E+B,EAASzB,KAAKC,MAAMqC,KAAKb,OAAS6H,IAAoBhH,KAAKwB,KAAKO,aAAa1E,GAE9E2C,KAAKiH,YAAY/H,EAAOC,IAAY4H,IAGzC/G,KAAKoF,QAAQ8B,iBAAiBhI,EAAOC,EARpC,CASF,GAED,CAAAgB,IAAAA,cAAAC,MAIA6G,SAAY/H,EAAOC,GACjB,OAAID,IAAUc,KAAK2F,oBACZxG,IAAWa,KAAK4F,uBACrB5F,KAAK2F,mBAAqBzG,EAC1Bc,KAAK4F,oBAAsBzG,GACpB,EAIV,GAED,CAAAgB,IAAAA,wBAAAC,MACA+G,WAAwB,MACtB,iBAAOnH,KAAKoF,QAAQgC,mBAApB,aAAOC,EAA0B1M,OAClC,GAED,CAAAwF,IAAAA,SAAAC,MASAkH,SAAOC,EAAeC,EAAaC,EAAoBC,GAAc,WAC3DlG,EAASxB,KAATwB,KACR,GAAKxB,KAAK2H,eACHnG,EAAKgF,WAAWC,YADvB,CAKAjF,EAAKwB,SAAS,eAAgB,CAC5BuE,cAAAA,EAAeC,YAAAA,EAAaC,mBAAAA,IAI9BjG,EAAKoG,WAAWC,aAMhB,IAAMC,EAAgB9H,KAAK4C,cAEtB8E,IACHH,EAAgBvJ,EAAMuJ,EAAevH,KAAKsE,WAAWpG,IAAK8B,KAAKsE,WAAWnG,MAO5E6B,KAAK+H,aAAaR,GAClBvH,KAAKgF,IAAI5H,EAAI4C,KAAKgI,yBAAyB,IAAKR,EAAaM,GAC7D9H,KAAKgF,IAAI3H,EAAI2C,KAAKgI,yBAAyB,IAAKR,EAAaM,GAC7DtK,EAAWwC,KAAKgF,KAEhB,IAAMiD,EAAmB,WACvBC,EAAKC,eAAeZ,GACpBW,EAAK3B,uBAGFkB,EAGHjG,EAAKoG,WAAWQ,gBAAgB,CAC9BC,OAAO,EACPxO,KAAM,SACNyG,OAAQN,KAAKuF,UACb9G,UAAWuB,KAAKsI,sBAChBC,WAAYN,EACZrJ,SAAU6I,EACVe,OAAQhH,EAAKD,QAAQiH,SATvBP,GAlCD,CA8CF,GAED,CAAA9H,IAAAA,aAAAC,MAGAqI,SAAWjB,GACTxH,KAAKsH,OACHtH,KAAK4C,gBAAkB5C,KAAKsE,WAAWT,QACnC7D,KAAKsE,WAAWR,UAAY9D,KAAKsE,WAAWT,QAChD2D,EACAxH,KAAKwB,KAAKD,QAAQmH,sBAErB,GAED,CAAAvI,IAAAA,eAAAC,MAMA2H,SAAanF,GACX5C,KAAK4C,cAAgBA,EACrB5C,KAAK0F,OAAO5C,OAAO9C,KAAK4C,cACzB,GAED,CAAAzC,IAAAA,2BAAAC,MAaA4H,SAAyB9E,EAAMyF,EAAOb,GAEpC,GAAyB,IADA9H,KAAK0F,OAAOvH,IAAI+E,GAAQlD,KAAK0F,OAAOxH,IAAIgF,GAE/D,OAAOlD,KAAK0F,OAAO7C,OAAOK,GAGvByF,IACHA,EAAQ3I,KAAKwB,KAAKoH,0BAGfd,IACHA,EAAgB9H,KAAKsE,WAAWT,SAGlC,IAAMgF,EAAa7I,KAAK4C,cAAgBkF,EACxC,OAAO9H,KAAK0F,OAAOpC,WACjBJ,GACClD,KAAKgF,IAAI9B,GAAQyF,EAAMzF,IAAS2F,EAAaF,EAAMzF,GAEvD,GAED,CAAA/C,IAAAA,QAAAC,MAMA0G,SAAMgC,EAAMC,GACV/I,KAAKgF,IAAI5H,EAAI4C,KAAK0F,OAAOpC,WAAW,IAAKwF,GACzC9I,KAAKgF,IAAI3H,EAAI2C,KAAK0F,OAAOpC,WAAW,IAAKyF,GACzC/I,KAAKuG,qBACN,GAED,CAAApG,IAAAA,aAAAC,MAIA4I,WACE,OAAOC,QAAQjJ,KAAKd,QAAWc,KAAK4C,cAAgB5C,KAAKsE,WAAWZ,GACrE,GAED,CAAAvD,IAAAA,aAAAC,MAIAuH,WACE,OAAOsB,QAAQjJ,KAAKd,QAAUc,KAAKoF,QAAQuC,YAC5C,GAED,CAAAxH,IAAAA,sBAAAC,MAIAmG,WACEvG,KAAKkJ,oBAAoBlJ,KAAKgF,IAAI5H,EAAG4C,KAAKgF,IAAI3H,EAAG2C,KAAK4C,eAClD5C,OAASA,KAAKwB,KAAK2H,WACrBnJ,KAAKwB,KAAKwB,SAAS,gBAAiB,CAAEL,MAAO3C,MAEhD,IAAAG,IAAAA,sBAAAC,MAEDkG,WACEtG,KAAK4C,cAAgB5C,KAAKsE,WAAWT,QAGrC7D,KAAK0F,OAAO5C,OAAO9C,KAAK4C,eACxB3F,EAAe+C,KAAKgF,IAAKhF,KAAK0F,OAAO7C,QACrC7C,KAAKwB,KAAKwB,SAAS,iBAAkB,CAAEL,MAAO3C,MAC/C,GAED,CAAAG,IAAAA,sBAAAC,MAQA8I,SAAoB9L,EAAGC,EAAG+L,GACxBA,GAAQpJ,KAAK+E,mBAAqB/E,KAAKsE,WAAWT,QAClDtF,EAAayB,KAAKuF,UAAWnI,EAAGC,EAAG+L,EACpC,IAAAjJ,IAAAA,gBAAAC,MAED8F,WACE,IAAQ1E,EAASxB,KAATwB,KAERvE,EACE+C,KAAKqD,YACLZ,EAAejB,EAAKD,QAASC,EAAKO,aAAc/B,KAAKoD,KAAMpD,KAAKiC,QAGlEjC,KAAKsE,WAAWxB,OAAO9C,KAAKd,MAAOc,KAAKb,OAAQa,KAAKqD,aAErD7B,EAAKwB,SAAS,gBAAiB,CAC7BL,MAAO3C,MAEV,GAED,CAAAG,IAAAA,sBAAAC,MACAkI,WACE,IAAMjK,EAAQ2B,KAAK4C,eAAiB5C,KAAK+E,mBAAqB/E,KAAKsE,WAAWT,SAC9E,OAAOzF,EAAkB4B,KAAKgF,IAAI5H,EAAG4C,KAAKgF,IAAI3H,EAAGgB,EAClD,GAED,CAAA8B,IAAAA,iBAAAC,MAeA+H,SAAekB,GACTA,IAAkBrJ,KAAK+E,oBAI3B/E,KAAK+E,kBAAoBsE,EACzBrJ,KAAKoG,oBAELpG,KAAKwB,KAAKwB,SAAS,qBACpB,OAndH,GCVA,IAGMsG,EAAN,WAIExJ,SAAAA,EAAYyJ,IAAUxJ,EAAAA,EAAAA,GAAAA,KAAAA,GACpBC,KAAKuJ,SAAWA,EAChBvJ,KAAKwB,KAAO+H,EAAS/H,KAErBxB,KAAKwJ,SAAW,CAAEpM,EAAG,EAAGC,EAAG,EAC5B,CA6TA,OA7TA6C,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,QAAAC,MAEDqJ,WACMzJ,KAAKwB,KAAK2H,WACZlM,EAAe+C,KAAKwJ,SAAUxJ,KAAKwB,KAAK2H,UAAUnE,KAEpDhF,KAAKwB,KAAKoG,WAAW8B,SACtB,IAAAvJ,IAAAA,SAAAC,MAEDuJ,WACE,MAAiC3J,KAAKuJ,SAA9BrM,EAAF,EAAEA,GAAI0M,EAAN,EAAMA,OAAQC,EAAAA,EAAAA,SACZV,EAAcnJ,KAAKwB,KAAnB2H,UAER,GAAiB,MAAbU,GACG7J,KAAKwB,KAAKD,QAAQuI,qBACjBX,GAAaA,EAAUvG,eAAiBuG,EAAU7E,WAAWZ,MAC7D1D,KAAKuJ,SAASQ,aAAc,CAElC,IAAMhB,EAAOI,EAAUnE,IAAI3H,GAAKH,EAAGG,EAAIuM,EAAOvM,GAC9C,IAAK2C,KAAKwB,KAAKwB,SAAS,eAAgB,CAAE+F,KAAAA,IAAQrC,iBAAkB,CAClE1G,KAAKgK,oBAAoB,IAAKjB,EAlDP,IAmDvB,IAAMkB,EAAY,EAAIvM,KAAKG,IAAImC,KAAKkK,sBAAsBf,EAAUnE,IAAI3H,IACxE2C,KAAKwB,KAAK2I,eAAeF,GACzBd,EAAU5C,qBACX,CACF,KAAM,CACqBvG,KAAKoK,qBAAqB,OAElDpK,KAAKoK,qBAAqB,KAEtBjB,IACF3L,EAAW2L,EAAUnE,KACrBmE,EAAU5C,uBAGf,CACF,IAAApG,IAAAA,MAAAC,MAEDiK,WACE,IAAQC,EAAatK,KAAKuJ,SAAlBe,SACR,EAAkCtK,KAAKwB,KAA/BgF,EAAF,EAAEA,WAAY2C,EAAAA,EAAAA,UAChBoB,EAAY,EAKhB,GAHAvK,KAAKwB,KAAKoG,WAAW8B,UAGjBlD,EAAWC,YAAa,CAE1B,IAMM+D,GANsBhE,EAAWpJ,EAAIoJ,EAAWiE,iBAMKzK,KAAKwB,KAAKO,aAAa3E,EAU7EkN,EAASlN,GAvFS,IAuFoBoN,EAA8B,GACjEF,EAASlN,EAAI,IAAOoN,GAA+B,IAEzDD,EAAY,EACZD,EAASlN,EAAIM,KAAKQ,IAAIoM,EAASlN,EAAG,KACxBkN,EAASlN,EA5FE,IA4F0BoN,EAA8B,GACvEF,EAASlN,GAAK,IAAOoN,EAA8B,MAEzDD,GAAa,EACbD,EAASlN,EAAIM,KAAKS,IAAImM,EAASlN,EAAG,IAGpCoJ,EAAWkE,YAAYH,GAAW,EAAMD,EAASlN,EAClD,CAGI+L,GAAaA,EAAUvG,cAAgBuG,EAAU7E,WAAWnG,KAC1D6B,KAAKuJ,SAASQ,aACnB/J,KAAKuJ,SAASjF,WAAWqG,gBAAe,IAMxC3K,KAAK4K,yBAAyB,KAC9B5K,KAAK4K,yBAAyB,KAEjC,GAED,CAAAzK,IAAAA,2BAAAC,MAIAwK,SAAyB1H,GAAM,WACrBoH,EAAatK,KAAKuJ,SAAlBe,SACAnB,EAAcnJ,KAAKwB,KAAnB2H,UAER,GAAKA,EAAL,CAIA,IAAQnE,EAAgBmE,EAAhBnE,IAAKU,EAAWyD,EAAXzD,OACPmF,EAAS7F,EAAI9B,GACb4H,EAAoB9K,KAAKwB,KAAKyI,UAAY,GAAc,MAAT/G,EAO/C6H,EAAoBF,EAlI9B,SAAiBG,EAAiBC,GAChC,OAAOD,EAAkBC,GAAoB,EAAIA,EAClD,CAgIsCC,CAAQZ,EAASpH,GAH3B,MAKzB,GAAI4H,EAAkB,CACpB,IAAMK,EAAanL,KAAKkK,sBAAsBW,GACxCO,EAAsBpL,KAAKkK,sBAAsBa,GAIvD,GAAKI,EAAa,GAAKC,GArJF,IAsJbD,EAAa,GAAKC,EAtJL,GAwJnB,YADApL,KAAKwB,KAAK6J,OAGb,CAGD,IAAMC,EAAuB5F,EAAOpC,WAAWJ,EAAM6H,GAIrD,GAAIF,IAAWS,EAAf,CAKA,IAAMC,EAAgBD,IAAyBP,EAAqB,EAAI,IAElES,EAAmBxL,KAAKwB,KAAKyI,UAC7BwB,EAAeH,EAAuBT,EAE5C7K,KAAKwB,KAAKoG,WAAW8D,YAAY,CAC/B7R,KAAM,aAAeqJ,EACrBmF,OAAO,EACPoB,MAAOoB,EACPR,IAAKiB,EACLhB,SAAUA,EAASpH,GACnBqI,aAAAA,EACAI,SAAWC,SAAAA,GAET,GAAId,GAAoBe,EAAKrK,KAAKyI,UAAY,EAAG,CAE/C,IAAM6B,EAAyB,GAAKR,EAAuBM,GAAOH,EAKlEI,EAAKrK,KAAK2I,eAAenM,EACvBwN,GAAoB,EAAIA,GAAoBM,EAC5C,EACA,GAEH,CAED9G,EAAI9B,GAAQxF,KAAKqO,MAAMH,GACvBzC,EAAU5C,qBACX,GAjCF,CAjCA,CAoEF,GAED,CAAApG,IAAAA,uBAAAC,MAUAgK,SAAqBlH,GACnB,MAA+ClD,KAAKuJ,SAA5CrM,EAAF,EAAEA,GAAI2M,EAAN,EAAMA,SAAUD,EAAhB,EAAgBA,OAAQG,EAAAA,EAAAA,aAC9B,EAAkC/J,KAAKwB,KAA/B2H,EAAF,EAAEA,UAAW3C,EAAAA,EAAAA,WACbwF,EAAS9O,EAAGgG,GAAQ0G,EAAO1G,GAC3B+I,EAAiBzF,EAAWpJ,EAAI4O,EAEtC,IAAKA,IAAU7C,EACb,OAAO,EAIT,GAAa,MAATjG,IAAiBiG,EAAUH,eAAiBe,EAE9C,OADAvD,EAAW0F,OAAOD,GAAgB,IAC3B,EAGT,IAAQvG,EAAWyD,EAAXzD,OACFyG,EAAShD,EAAUnE,IAAI9B,GAAQ8I,EAErC,GAAIhM,KAAKwB,KAAKD,QAAQ6K,gBACF,MAAbvC,GACS,MAAT3G,IACC6G,EAAc,CACpB,IAAMsC,EAAuB7F,EAAWiE,gBAGlC6B,EAAsB9F,EAAWpJ,EAAIiP,EAErCE,EAAgBP,EAAQ,EACxBQ,GAAiBD,EAEvB,GAAIJ,EAASzG,EAAOxH,IAAIgF,IAASqJ,EAAe,CAQ9C,GAF6B7G,EAAOxH,IAAIgF,IAASlD,KAAKwJ,SAAStG,GAI7D,OADAsD,EAAW0F,OAAOD,GAAgB,IAC3B,EAEPjM,KAAKgK,oBAAoB9G,EAAMiJ,EAGlC,MAAM,GAAIA,EAASzG,EAAOvH,IAAI+E,IAASsJ,EAAe,CAMrD,GAF6BxM,KAAKwJ,SAAStG,IAASwC,EAAOvH,IAAI+E,GAI7D,OADAsD,EAAW0F,OAAOD,GAAgB,IAC3B,EAEPjM,KAAKgK,oBAAoB9G,EAAMiJ,EAGlC,MAEC,GAA4B,IAAxBG,EAA2B,CAE7B,GAAIA,EAAsB,EAExB,OADA9F,EAAW0F,OAAOxO,KAAKS,IAAI8N,EAAgBI,IAAuB,IAC3D,EACF,GAAIC,EAAsB,EAG/B,OADA9F,EAAW0F,OAAOxO,KAAKQ,IAAI+N,EAAgBI,IAAuB,IAC3D,CAEV,MAECrM,KAAKgK,oBAAoB9G,EAAMiJ,EAGpC,KACc,MAATjJ,IAEGsD,EAAWC,aAAef,EAAOxH,IAAIb,IAAMqI,EAAOvH,IAAId,IAI3D2C,KAAKgK,oBAAoB9G,EAAMiJ,GAInC,OAAO,CACR,GAKD,CAAAhM,IAAAA,wBAAAC,MAWA8J,SAAsBnB,GAAM,QAC1B,OAAQA,GAAgD,QAA5C,EAAI,QAAJ,EAAI/I,KAAKwB,KAAK2H,iBAAV,eAAqBzD,OAAO7C,OAAOxF,SAAK,aAAO2C,KAAKwB,KAAKO,aAAa1E,EAAI,EAC3F,GAED,CAAA8C,IAAAA,sBAAAC,MAUA4J,SAAoB9G,EAAMuJ,EAAcC,GACtC,IAAQvD,EAAcnJ,KAAKwB,KAAnB2H,UAER,GAAKA,EAAL,CAIA,IAAQnE,EAAgBmE,EAAhBnE,IAGR,GAHwBmE,EAAXzD,OACepC,WAAWJ,EAAMuJ,KAExBA,GAAgBC,EAAgB,CACnD,IAAMV,EAAQtO,KAAKC,MAAM8O,EAAezH,EAAI9B,IAC5C8B,EAAI9B,IAAS8I,GAASU,GAxVH,IAyVpB,MACC1H,EAAI9B,GAAQuJ,CATb,CAWF,OAtUH,GCVA,SAASE,EAAoBlP,EAAGP,EAAIC,GAGlC,OAFAM,EAAEL,GAAKF,EAAGE,EAAID,EAAGC,GAAK,EACtBK,EAAEJ,GAAKH,EAAGG,EAAIF,EAAGE,GAAK,EACfI,CACR,KAEKmP,EAAN,WAIE9M,SAAAA,EAAYyJ,IAAUxJ,EAAAA,EAAAA,GAAAA,KAAAA,GACpBC,KAAKuJ,SAAWA,EAKhBvJ,KAAK6M,UAAY,CAAEzP,EAAG,EAAGC,EAAG,GAK5B2C,KAAK8M,gBAAkB,CAAE1P,EAAG,EAAGC,EAAG,GAKlC2C,KAAK+M,WAAa,CAAE3P,EAAG,EAAGC,EAAG,GAE7B2C,KAAKgN,sBAAuB,EAE5BhN,KAAKiN,gBAAkB,CACxB,CAqNA,OArNA/M,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,QAAAC,MAEDqJ,WACE,IAAQN,EAAcnJ,KAAKuJ,SAAS/H,KAA5B2H,UACJA,IACFnJ,KAAKiN,gBAAkB9D,EAAUvG,cACjC3F,EAAe+C,KAAK6M,UAAW1D,EAAUnE,MAG3ChF,KAAKuJ,SAAS/H,KAAKoG,WAAWC,aAC9B7H,KAAKgN,sBAAuB,CAC7B,IAAA7M,IAAAA,SAAAC,MAEDuJ,WACE,MAA2C3J,KAAKuJ,SAAxCrM,EAAF,EAAEA,GAAIgQ,EAAN,EAAMA,QAAS/P,EAAf,EAAeA,GAAIgQ,EAAnB,EAAmBA,QAAS3L,EAAAA,EAAAA,KAC1B2H,EAAc3H,EAAd2H,UAER,GAAKA,EAAL,CAIA,IAAMiE,EAAejE,EAAU7E,WAAWpG,IACpCmP,EAAelE,EAAU7E,WAAWnG,IAE1C,GAAKgL,EAAUxB,eAAgBnG,EAAKgF,WAAWC,YAA/C,CAIAkG,EAAoB3M,KAAK8M,gBAAiBI,EAASC,GACnDR,EAAoB3M,KAAK+M,WAAY7P,EAAIC,GAEzC,IAAIyF,EAAiB,EAAIhF,EAAmBsP,EAASC,GACjCvP,EAAmBV,EAAIC,GACvB6C,KAAKiN,gBAOzB,GAJIrK,EAAgBuG,EAAU7E,WAAWT,QAAWsF,EAAU7E,WAAWT,QAAU,KACjF7D,KAAKgN,sBAAuB,GAG1BpK,EAAgBwK,EAClB,GAAI5L,EAAKD,QAAQ+L,eACTtN,KAAKgN,sBACNhN,KAAKiN,iBAAmB9D,EAAU7E,WAAWT,QAAS,CAE3D,IAAMoG,EAAY,GAAMmD,EAAexK,IAAkBwK,EAAe,KACnE5L,EAAKwB,SAAS,aAAc,CAAEiH,UAAAA,IAAavD,kBAC9ClF,EAAK2I,eAAeF,EAEvB,MAECrH,EAAgBwK,EA7FI,KA6FYA,EAAexK,QAExCA,EAAgByK,IAEzBzK,EAAgByK,EAlGM,KAkGUzK,EAAgByK,IAGlDlE,EAAUnE,IAAI5H,EAAI4C,KAAKuN,0BAA0B,IAAK3K,GACtDuG,EAAUnE,IAAI3H,EAAI2C,KAAKuN,0BAA0B,IAAK3K,GAEtDuG,EAAUpB,aAAanF,GACvBuG,EAAU5C,qBApCT,CAPA,CA4CF,IAAApG,IAAAA,MAAAC,MAEDiK,WACE,IAAQ7I,EAASxB,KAAKuJ,SAAd/H,KACA2H,EAAc3H,EAAd2H,YACFA,GAAaA,EAAUvG,cAAgBuG,EAAU7E,WAAWT,WAC1D7D,KAAKgN,sBACNxL,EAAKD,QAAQ+L,aAClB9L,EAAK6J,QAELrL,KAAK2K,gBAER,GAED,CAAAxK,IAAAA,4BAAAC,MAMAmN,SAA0BrK,EAAMN,GAC9B,IAAMiG,EAAajG,EAAgB5C,KAAKiN,gBACxC,OAAOjN,KAAK+M,WAAW7J,IACXlD,KAAK8M,gBAAgB5J,GAAQlD,KAAK6M,UAAU3J,IAAS2F,CAClE,GAED,CAAA1I,IAAAA,iBAAAC,MAQAuK,SAAe6C,GACb,IAAQhM,EAASxB,KAAKuJ,SAAd/H,KACA2H,EAAc3H,EAAd2H,UAER,GAAI,OAACA,QAAD,IAACA,GAAAA,EAAWxB,aAAhB,CAI0B,IAAtB3H,KAAK+M,WAAW3P,IAClBoQ,GAAgB,GAGlB,IAGIC,EAHE3F,EAAgBqB,EAAUvG,cAI5B8K,GAA2B,EAE3B5F,EAAgBqB,EAAU7E,WAAWT,QACvC4J,EAAuBtE,EAAU7E,WAAWT,QAEnCiE,EAAgBqB,EAAU7E,WAAWnG,IAC9CsP,EAAuBtE,EAAU7E,WAAWnG,KAG5CuP,GAA2B,EAC3BD,EAAuB3F,GAGzB,IAAM0D,EAAmBhK,EAAKyI,UACxBa,EAAmBtJ,EAAKyI,UAAY,EAEpC0D,EAAa1Q,EAAe,CAAEG,EAAG,EAAGC,EAAG,GAAK8L,EAAUnE,KACxD4I,EAAiB3Q,EAAe,CAAEG,EAAG,EAAGC,EAAG,GAAKsQ,GAEhDH,IACFxN,KAAK+M,WAAW3P,EAAI,EACpB4C,KAAK+M,WAAW1P,EAAI,EACpB2C,KAAK8M,gBAAgB1P,EAAI,EACzB4C,KAAK8M,gBAAgBzP,EAAI,EACzB2C,KAAKiN,gBAAkBnF,EACvB7K,EAAe+C,KAAK6M,UAAWc,IAG7BD,IACFE,EAAiB,CACfxQ,EAAG4C,KAAKuN,0BAA0B,IAAKE,GACvCpQ,EAAG2C,KAAKuN,0BAA0B,IAAKE,KAK3CtE,EAAUpB,aAAa0F,GAEvBG,EAAiB,CACfxQ,EAAG+L,EAAUzD,OAAOpC,WAAW,IAAKsK,EAAexQ,GACnDC,EAAG8L,EAAUzD,OAAOpC,WAAW,IAAKsK,EAAevQ,IAIrD8L,EAAUpB,aAAaD,GAEvB,IAAM+F,GAAkB9P,EAAY6P,EAAgBD,GAEpD,IAAKE,IAAmBH,IAA6B5C,EAMnD,OAJA3B,EAAUhB,eAAesF,QACzBtE,EAAU5C,sBAMZ/E,EAAKoG,WAAWC,aAEhBrG,EAAKoG,WAAW8D,YAAY,CAC1BrD,OAAO,EACPoB,MAAO,EACPY,IAAK,IACLC,SAAU,EACViB,aAAc,EACduC,iBAAkB,GAClBnC,SAAWoC,SAAAA,GAGT,GAFAA,GAAO,IAEHF,GAAkBH,EAA0B,CAM9C,GALIG,IACF1E,EAAUnE,IAAI5H,EAAIuQ,EAAWvQ,GAAKwQ,EAAexQ,EAAIuQ,EAAWvQ,GAAK2Q,EACrE5E,EAAUnE,IAAI3H,EAAIsQ,EAAWtQ,GAAKuQ,EAAevQ,EAAIsQ,EAAWtQ,GAAK0Q,GAGnEL,EAA0B,CAC5B,IAAMM,EAAelG,GACN2F,EAAuB3F,GAAiBiG,EACvD5E,EAAUpB,aAAaiG,EACxB,CAED7E,EAAU5C,qBACX,CAGGuE,GAAoBtJ,EAAKyI,UAAY,GAIvCzI,EAAK2I,eAAenM,EAClBwN,GAAoB,EAAIA,GAAoBuC,EAAK,EAAG,KAI1DxF,WAAY,WAEVY,EAAUhB,eAAesF,GACzBtE,EAAU5C,qBACX,GA5GF,CA8GF,OA9OH,GCPA,SAAS0H,EAAoBC,GAC3B,QAAsCA,EAAM5N,OAAQ6N,QAAQ,mBAC7D,CAED,IAGMC,EAAN,WAIEtO,SAAAA,EAAYyJ,IAAUxJ,EAAAA,EAAAA,GAAAA,KAAAA,GACpBC,KAAKuJ,SAAWA,CACjB,CAuFA,OArFDrJ,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,QAAAC,MAIAiO,SAAM1F,EAAO2F,GACX,IAAMC,EAA8CD,EAAchO,OAAQkO,UACpEC,EAAeF,EAAgBG,SAAS,aACxCC,EAAoBJ,EAAgBG,SAAS,eACtBH,EAAgBG,SAAS,mBAElDD,EACFzO,KAAK4O,oBAAoB,aAAcjG,EAAO2F,GACrCK,GACT3O,KAAK4O,oBAAoB,UAAWjG,EAAO2F,EAE9C,GAED,CAAAnO,IAAAA,MAAAC,MAIAyO,SAAIlG,EAAO2F,GACLL,EAAoBK,IACtBtO,KAAK4O,oBAAoB,MAAOjG,EAAO2F,EAE1C,GAED,CAAAnO,IAAAA,YAAAC,MAIA0O,SAAUnG,EAAO2F,GACXL,EAAoBK,IACtBtO,KAAK4O,oBAAoB,YAAajG,EAAO2F,EAEhD,GAED,CAAAnO,IAAAA,sBAAAC,MAMAwO,SAAoBG,EAAYpG,EAAO2F,GAAe,MAC5C9M,EAASxB,KAAKuJ,SAAd/H,KACA2H,EAAc3H,EAAd2H,UACF6F,EAA+DD,EAAa,SAC5EpK,EAAcnD,EAAKD,QAAQyN,GAEjC,IAAIxN,EAAKwB,SAASgM,EAAgB,CAAErG,MAAAA,EAAO2F,cAAAA,IAAiB5H,iBAI5D,GAA2B,oBAAhB/B,EAKX,OAAQA,GACN,IAAK,QACL,IAAK,OACHnD,EAAKmD,KACL,MACF,IAAK,OACM,OAATwE,QAAS,IAATA,GAAAA,EAAWV,WAAWE,GACtB,MACF,IAAK,gBAGU,OAATQ,QAAS,IAATA,GAAAA,EAAWxB,cACRwB,EAAU7E,WAAWR,YAAcqF,EAAU7E,WAAWT,QAC7DsF,EAAUV,WAAWE,GACZnH,EAAKD,QAAQ0N,yBACtBzN,EAAK6J,QAEP,MACF,IAAK,kBACH,UAAArL,KAAKuJ,SAAS/H,KAAK7G,eAAnB,SAA4B6T,UAAUU,OAAO,yBAvB/CvK,EAAYwK,KAAK3N,EAAMmH,EAAO2F,EA+BjC,OA7FH,GCCMc,EAAN,WAIEtP,SAAAA,EAAY0B,GAAM,YAAAzB,EAAAA,EAAAA,GAAAA,KAAAA,GAChBC,KAAKwB,KAAOA,EAGZxB,KAAK6J,SAAW,KAKhB7J,KAAK9C,GAAK,CAAEE,EAAG,EAAGC,EAAG,GAErB2C,KAAK7C,GAAK,CAAEC,EAAG,EAAGC,EAAG,GAErB2C,KAAK4J,OAAS,CAAExM,EAAG,EAAGC,EAAG,GAEzB2C,KAAKqP,OAAS,CAAEjS,EAAG,EAAGC,EAAG,GAEzB2C,KAAKkN,QAAU,CAAE9P,EAAG,EAAGC,EAAG,GAE1B2C,KAAKmN,QAAU,CAAE/P,EAAG,EAAGC,EAAG,GAE1B2C,KAAKsK,SAAW,CAAElN,EAAG,EAAGC,EAAG,GAK3B2C,KAAKsP,aAAe,CAAElS,EAAG,EAAGC,EAAG,GAI/B2C,KAAKuP,YAAc,CAAEnS,EAAG,EAAGC,EAAG,GAE9B2C,KAAKwP,iBAAmB,EAIxBxP,KAAKyP,iBAAmB,GAExBzP,KAAK0P,mBAAqB,iBAAkBhQ,OAE5CM,KAAK2P,uBAA0BjQ,OAAOkQ,aACtC5P,KAAK6P,cAAgB7P,KAAK0P,oBACA1P,KAAK2P,sBAAwBrQ,UAAUwQ,eAAiB,EAElF9P,KAAKwP,iBAAmB,EAExBxP,KAAK+P,cAAgB,EAErB/P,KAAKgQ,qBAAsB,EAC3BhQ,KAAK+J,cAAe,EACpB/J,KAAKiQ,YAAa,EAClBjQ,KAAKkQ,WAAY,EAEjBlQ,KAAKmQ,IAAM,KAIXnQ,KAAKoQ,UAAY,KAEZpQ,KAAK6P,gBAERrO,EAAKD,QAAQ6K,gBAAiB,GAGhCpM,KAAKqQ,KAAO,IAAI/G,EAAYtJ,MAC5BA,KAAKsE,WAAa,IAAIsI,EAAY5M,MAClCA,KAAKsQ,WAAa,IAAIlC,EAAWpO,MAEjCwB,EAAK+O,GAAG,cAAc,WACpB/O,EAAKgP,OAAOnQ,IACVmB,EAAKiP,WACL,QAC2BC,EAAKC,SAASC,KAAKF,IAG5CA,EAAKf,qBACPe,EAAKG,YAAY,UAAW,OAAQ,KAAM,UACjCH,EAAKhB,oBACdgB,EAAKG,YAAY,QAAS,QAAS,MAAO,UAUtCrP,EAAKiP,aACPjP,EAAKiP,WAAWK,YAAc,WAAO,EACrCtP,EAAKiP,WAAWM,WAAa,WAAO,IAGtCL,EAAKG,YAAY,QAAS,OAAQ,QAGvC,CAoeA,OAleD3Q,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,cAAAC,MAOAyQ,SAAYG,EAAMC,EAAMC,EAAIC,GAC1B,IAAQ3P,EAASxB,KAATwB,KACAgP,EAAWhP,EAAXgP,OAEFY,EAAcD,EAASH,EAAOG,EAAS,GAE7CX,EAAOnQ,IACLmB,EAAKiP,WACLO,EAAOC,EACoBjR,KAAKqR,cAAcT,KAAK5Q,OAErDwQ,EAAOnQ,IAAIX,OAAQsR,EAAO,OAAmChR,KAAKsR,cAAcV,KAAK5Q,OACrFwQ,EAAOnQ,IAAIX,OAAQsR,EAAOE,EAA+BlR,KAAKuR,YAAYX,KAAK5Q,OAC3EoR,GACFZ,EAAOnQ,IACLmB,EAAKiP,WACLW,EAC2BpR,KAAKuR,YAAYX,KAAK5Q,MAGtD,GAED,CAAAG,IAAAA,gBAAAC,MAGAiR,SAAc9V,GAOZ,IAAMiW,EAA4B,cAAXjW,EAAEgF,MAA0C,UAAlBhF,EAAEkW,YAKnD,KAAID,GAAkBjW,EAAEmW,OAAS,GAAjC,CAIA,IAAQlQ,EAASxB,KAATwB,KAGHA,EAAK0D,OAAOC,OAKb3D,EAAKwB,SAAS,cAAe,CAAEsL,cAAe/S,IAAKmL,mBAInD8K,IACFhQ,EAAKmQ,gBAIL3R,KAAK4R,8BAA8BrW,EAAG,SAGxCiG,EAAKoG,WAAW8B,UAEhB1J,KAAK6R,cAActW,EAAG,QAEQ,IAA1ByE,KAAKwP,mBACPxP,KAAK6J,SAAW,KAGhB5M,EAAe+C,KAAKkN,QAASlN,KAAK9C,KAGhC8C,KAAKwP,iBAAmB,GAE1BxP,KAAK8R,iBACL9R,KAAK+J,cAAe,GAEpB/J,KAAK+J,cAAe,GAhCpBxO,EAAEwW,gBANH,CAwCF,GAED,CAAA5R,IAAAA,gBAAAC,MAGAkR,SAAc/V,GACZyE,KAAK4R,8BAA8BrW,EAAG,QAEjCyE,KAAKwP,mBAIVxP,KAAK6R,cAActW,EAAG,QAElByE,KAAKwB,KAAKwB,SAAS,cAAe,CAAEsL,cAAe/S,IAAKmL,mBAI9B,IAA1B1G,KAAKwP,kBAA2BxP,KAAKiQ,WA4B9BjQ,KAAKwP,iBAAmB,IAAMxP,KAAKkQ,YAC5ClQ,KAAKgS,cAELhS,KAAKkQ,WAAY,EAGjBlQ,KAAKiS,qBAELjS,KAAKsE,WAAWmF,QAEhBzJ,KAAKkS,eACLlS,KAAKmS,mBAtCAnS,KAAK6J,UACR7J,KAAKoS,0BAIHpS,KAAK6J,WAAa7J,KAAKiQ,aACrBjQ,KAAKkQ,YACPlQ,KAAKkQ,WAAY,EACjBlQ,KAAKsE,WAAW+F,OAGlBrK,KAAKiQ,YAAa,EAClBjQ,KAAK8R,iBAGL9R,KAAKiS,qBACLjS,KAAK+P,cAAgBsC,KAAKtE,MAE1B/N,KAAKgQ,qBAAsB,EAC3B/S,EAAe+C,KAAKuP,YAAavP,KAAK9C,IACtC8C,KAAKsK,SAASlN,EAAI,EAClB4C,KAAKsK,SAASjN,EAAI,EAClB2C,KAAKqQ,KAAK5G,QAEVzJ,KAAKkS,eACLlS,KAAKmS,oBAeV,GAED,CAAAhS,IAAAA,cAAAC,MAGA4R,WACMhS,KAAKiQ,aACPjQ,KAAKiQ,YAAa,EAIbjQ,KAAKgQ,qBACRhQ,KAAKsS,iBAAgB,GAGvBtS,KAAKqQ,KAAKhG,MACVrK,KAAK6J,SAAW,KAEnB,GAED,CAAA1J,IAAAA,cAAAC,MAGAmR,SAAYhW,GACLyE,KAAKwP,mBAIVxP,KAAK6R,cAActW,EAAG,MAElByE,KAAKwB,KAAKwB,SAAS,YAAa,CAAEsL,cAAe/S,IAAKmL,mBAI5B,IAA1B1G,KAAKwP,mBACPxP,KAAKkS,eAEDlS,KAAKiQ,WACPjQ,KAAKgS,cACKhS,KAAKkQ,WAAclQ,KAAK+J,cAElC/J,KAAKuS,WAAWhX,IAIhByE,KAAKwP,iBAAmB,GAAKxP,KAAKkQ,YACpClQ,KAAKkQ,WAAY,EACjBlQ,KAAKsE,WAAW+F,MAEc,IAA1BrK,KAAKwP,mBAEPxP,KAAK6J,SAAW,KAChB7J,KAAKiS,wBAGV,GAED,CAAA9R,IAAAA,iBAAAC,MAGA+R,YACMnS,KAAKiQ,YAAcjQ,KAAKkQ,aAC1BlQ,KAAKsS,kBAEDtS,KAAKiQ,WAEFlS,EAAYiC,KAAK9C,GAAI8C,KAAK4J,SAC7B5J,KAAKqQ,KAAK1G,SAGP5L,EAAYiC,KAAK9C,GAAI8C,KAAK4J,SACvB7L,EAAYiC,KAAK7C,GAAI6C,KAAKqP,SAChCrP,KAAKsE,WAAWqF,SAIpB3J,KAAKwS,oBACLxS,KAAKmQ,IAAMsC,sBAAsBzS,KAAKmS,eAAevB,KAAK5Q,OAE7D,GAED,CAAAG,IAAAA,kBAAAC,MAMAkS,SAAgBvL,GACd,IAAM2L,EAAOL,KAAKtE,MACZnP,EAAW8T,EAAO1S,KAAK+P,cAEzBnR,EAAW,KAAOmI,IAKtB/G,KAAKsK,SAASlN,EAAI4C,KAAK2S,aAAa,IAAK/T,GACzCoB,KAAKsK,SAASjN,EAAI2C,KAAK2S,aAAa,IAAK/T,GAEzCoB,KAAK+P,cAAgB2C,EACrBzV,EAAe+C,KAAKuP,YAAavP,KAAK9C,IACtC8C,KAAKgQ,qBAAsB,EAC5B,GAED,CAAA7P,IAAAA,aAAAC,MAIAmS,SAAWhX,GAAG,WACJiL,EAAexG,KAAKwB,KAApBgF,WAGR,GAAIA,EAAWC,YAGbD,EAAWkE,YAAY,GAAG,QAK5B,KAAInP,EAAEgF,KAAKqS,QAAQ,UAAY,GAK/B,GAAe,YAAXrX,EAAEgF,MAAwC,UAAlBhF,EAAEkW,YAA9B,CAMA,IAAMoB,EAAW7S,KAAKwB,KAAKD,QAAQuR,gBApYd,IAoYmD,EAKpE9S,KAAKoQ,WACPpQ,KAAK8R,iBAEDlU,EAAmBoC,KAAKsP,aAActP,KAAKkN,SA3Y5B,IA4YjBlN,KAAKsQ,WAAWxB,UAAU9O,KAAKkN,QAAS3R,KAG1C0B,EAAe+C,KAAKsP,aAActP,KAAKkN,SACvClN,KAAKoQ,UAAY2C,YAAW,WAC1BC,EAAK1C,WAAWzB,IAAImE,EAAK9F,QAAS3R,GAClCyX,EAAKlB,mBACJe,GAnBJ,MAFC7S,KAAKsQ,WAAWjC,MAAMrO,KAAKkN,QAAS3R,EAuBvC,GAED,CAAA4E,IAAAA,iBAAAC,MAGA0R,WACM9R,KAAKoQ,YACP6C,aAAajT,KAAKoQ,WAClBpQ,KAAKoQ,UAAY,KAEpB,GAED,CAAAjQ,IAAAA,eAAAC,MAQAuS,SAAazP,EAAMtE,GAEjB,IAAMsU,EAAelT,KAAK9C,GAAGgG,GAAQlD,KAAKuP,YAAYrM,GAEtD,OAAIxF,KAAKG,IAAIqV,GAAgB,GAAKtU,EAAW,EACpCsU,EAAetU,EAGjB,CACR,GAED,CAAAuB,IAAAA,eAAAC,MAGA8R,WACMlS,KAAKmQ,MACPgD,qBAAqBnT,KAAKmQ,KAC1BnQ,KAAKmQ,IAAM,KAEd,GAED,CAAAhQ,IAAAA,gCAAAC,MAKAwR,SAA8BrW,EAAGkW,GACHzR,KAAKwB,KAAK4R,aAAa,uBAAuB,EAAM7X,EAAGkW,IAEjFlW,EAAEwW,gBAEL,GAED,CAAA5R,IAAAA,gBAAAC,MAQAyR,SAActW,EAAGkW,GACf,GAAIzR,KAAK2P,qBAAsB,CAC7B,IAAM0D,EAA4C9X,EAE5C+X,EAAetT,KAAKyP,iBAAiB8D,WAAWC,SAAAA,GACpD,OAAOA,EAAejW,KAAO8V,EAAaI,SAC3C,IAEmB,OAAhBhC,GAAwB6B,GAAgB,EAE1CtT,KAAKyP,iBAAiBiE,OAAOJ,EAAc,GAClB,SAAhB7B,IAA4C,IAAlB6B,EAEnCtT,KAAKyP,iBAAiBxT,KAAK+D,KAAK2T,wBAAwBN,EAAc,CAAEjW,EAAG,EAAGC,EAAG,KACxEiW,GAAgB,GAEzBtT,KAAK2T,wBAAwBN,EAAcrT,KAAKyP,iBAAiB6D,IAGnEtT,KAAKwP,iBAAmBxP,KAAKyP,iBAAiBpT,OAI1C2D,KAAKwP,iBAAmB,GAC1BvS,EAAe+C,KAAK9C,GAAI8C,KAAKyP,iBAAiB,IAG5CzP,KAAKwP,iBAAmB,GAC1BvS,EAAe+C,KAAK7C,GAAI6C,KAAKyP,iBAAiB,GAEjD,KAAM,CACL,IAAMmE,EAAwCrY,EAE9CyE,KAAKwP,iBAAmB,EACpBoE,EAAWrT,KAAKqS,QAAQ,UAAY,EAGlCgB,EAAWC,SAAWD,EAAWC,QAAQxX,OAAS,IACpD2D,KAAK2T,wBAAwBC,EAAWC,QAAQ,GAAI7T,KAAK9C,IACzD8C,KAAKwP,mBACDoE,EAAWC,QAAQxX,OAAS,IAC9B2D,KAAK2T,wBAAwBC,EAAWC,QAAQ,GAAI7T,KAAK7C,IACzD6C,KAAKwP,sBAKTxP,KAAK2T,wBAAqDpY,EAAIyE,KAAK9C,IAC/C,OAAhBuU,EAEFzR,KAAKwP,iBAAmB,EAExBxP,KAAKwP,mBAGV,CACF,GAED,CAAArP,IAAAA,oBAAAC,MAGAoS,WACEvV,EAAe+C,KAAK4J,OAAQ5J,KAAK9C,IACjCD,EAAe+C,KAAKqP,OAAQrP,KAAK7C,GAClC,GAED,CAAAgD,IAAAA,qBAAAC,MAGA6R,WACEhV,EAAe+C,KAAKkN,QAASlN,KAAK9C,IAClCD,EAAe+C,KAAKmN,QAASnN,KAAK7C,IAClC6C,KAAKwS,mBACN,GAED,CAAArS,IAAAA,0BAAAC,MACAgS,WACE,GAAIpS,KAAKwB,KAAKgF,WAAWC,YAEvBzG,KAAK6J,SAAW,QACX,CAEL,IAAMiK,EAAOpW,KAAKG,IAAImC,KAAK9C,GAAGE,EAAI4C,KAAKkN,QAAQ9P,GAAKM,KAAKG,IAAImC,KAAK9C,GAAGG,EAAI2C,KAAKkN,QAAQ7P,GAEtF,GAAa,IAATyW,EAAY,CAEd,IAAMC,EAAcD,EAAO,EAAI,IAAM,IAEjCpW,KAAKG,IAAImC,KAAK9C,GAAG6W,GAAe/T,KAAKkN,QAAQ6G,KA9iB3B,KA+iBpB/T,KAAK6J,SAAWkK,EAEnB,CACF,CACF,GAED,CAAA5T,IAAAA,0BAAAC,MASAuT,SAAwBpY,EAAGkC,GAUzB,OATAA,EAAEL,EAAI7B,EAAEyY,MAAQhU,KAAKwB,KAAKyS,OAAO7W,EACjCK,EAAEJ,EAAI9B,EAAE2Y,MAAQlU,KAAKwB,KAAKyS,OAAO5W,EAE7B,cAAe9B,EACjBkC,EAAEF,GAAKhC,EAAEkY,eACiBnW,IAAjB/B,EAAE4Y,aACX1W,EAAEF,GAAKhC,EAAE4Y,YAGJ1W,CACR,GAED,CAAA0C,IAAAA,WAAAC,MAIAuQ,SAASpV,GAEHyE,KAAKwB,KAAKgF,WAAWC,cACvBlL,EAAEwW,iBACFxW,EAAE6Y,kBAEL,OAxkBH,GCHMC,EAAN,WAIEvU,SAAAA,EAAY0B,IAAMzB,EAAAA,EAAAA,GAAAA,KAAAA,GAChBC,KAAKwB,KAAOA,EACZxB,KAAK5C,EAAI,EACT4C,KAAKsU,WAAa,EAElBtU,KAAKuU,mBAAqB,EAE1BvU,KAAKwU,mBAAqB,EAE1BxU,KAAKyU,sBAAwB,EAG7BzU,KAAK0U,YAAc,EACpB,CAwSA,OAtSDxU,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,SAAAC,MAMAyG,SAAO8N,GAAc,WACXnT,EAASxB,KAATwB,KACFoT,EAAgBlX,KAAKC,MACzB6D,EAAKO,aAAa3E,EAAIoE,EAAKO,aAAa3E,EAAIoE,EAAKD,QAAQsT,SAKrDC,EAAqBF,IAAkB5U,KAAKsU,WAE9CQ,IACF9U,KAAKsU,WAAaM,EAClB5U,KAAKkM,OAAOlM,KAAKyK,kBAGnBzK,KAAK0U,YAAYpY,SAAQ,SAACyY,EAAY9S,GAChC6S,GACFvW,EAAawW,EAAWjY,IAAKmF,EAAQ+S,EAAKP,sBACZO,EAAKV,YAGjCK,GAAgBI,EAAWpS,OAC7BoS,EAAWpS,MAAMkE,WAGtB,GAED,CAAA1G,IAAAA,gBAAAC,MAGA6U,WAGEjV,KAAKuU,mBAAqB,EAC1BvU,KAAKwU,mBAAqB,EAG1BxU,KAAKsU,WAAa,EAGlBtU,KAAKyU,sBAAwB,CAC9B,GAED,CAAAtU,IAAAA,gBAAAC,MAIA8U,WACElV,KAAK0U,YAAc,GAInB,IAAK,IAAIS,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMrY,EAAKJ,EAAc,aAAc,MAAOsD,KAAKwB,KAAK+D,WACxDzI,EAAGsY,aAAa,OAAQ,SACxBtY,EAAGsY,aAAa,uBAAwB,SACxCtY,EAAGsY,aAAa,cAAe,QAG/BtY,EAAG0B,MAAM6W,QAAiB,IAANF,EAAW,QAAU,OAEzCnV,KAAK0U,YAAYzY,KAAK,CACpBa,GAAAA,GAGH,CACF,GAED,CAAAqD,IAAAA,cAAAC,MAIAkV,WACE,OAAOtV,KAAKwB,KAAK+T,cAAgB,CAClC,GAED,CAAApV,IAAAA,cAAAC,MAeAsK,SAAYoJ,EAAM0B,EAASC,GAAW,WAC5BjU,EAASxB,KAATwB,KACJkU,EAAWlU,EAAKmU,eAAiB7B,EAC/B8B,EAAYpU,EAAK+T,cAEvB,GAAI/T,EAAKqU,UAAW,CAClBH,EAAWlU,EAAKsU,eAAeJ,GAC/B,IAAMK,GAAYjC,EAAO8B,GAAaA,EAGpC9B,EAFEiC,GAAYH,EAAY,EAEnBG,EAGAA,EAAWH,CAErB,MACKF,EAAW,EACbA,EAAW,EACFA,GAAYE,IACrBF,EAAWE,EAAY,GAEzB9B,EAAO4B,EAAWlU,EAAKmU,eAGzBnU,EAAKmU,eAAiBD,EACtB1V,KAAKuU,oBAAsBT,EAE3BtS,EAAKoG,WAAWoO,iBAEhB,IAAMC,EAAejW,KAAKyK,gBAC1B,GAAK+K,EAGE,CACLhU,EAAKoG,WAAW8D,YAAY,CAC1BwK,cAAc,EACdzM,MAAOzJ,KAAK5C,EACZiN,IAAK4L,EACL3L,SAAUmL,GAAa,EACvB3H,iBAAkB,GAClBvC,aAAc,EACdI,SAAWvO,SAAAA,GACT+Y,EAAKjK,OAAO9O,IAEdmL,WAAY,WACV4N,EAAKC,iBACL5U,EAAK6E,aACN,IAGH,IAAIgQ,EAAW7U,EAAKmU,eAAiBnU,EAAKsD,UAC1C,GAAItD,EAAKqU,UAAW,CAClB,IAAMS,GAAgBD,EAAWT,GAAaA,EAG5CS,EAFEC,GAAgBV,EAAY,EAEnBU,EAGAA,EAAeV,CAE7B,CAIGlY,KAAKG,IAAIwY,GAAY,GACvBrW,KAAKoW,gBAER,MApCCpW,KAAKkM,OAAO+J,GACZjW,KAAKoW,iBAqCP,OAAOnN,QAAQ6K,EAChB,GAED,CAAA3T,IAAAA,gBAAAC,MAKAqK,WACE,OAAOzK,KAAKsU,WAAatU,KAAKuU,kBAC/B,GAED,CAAApU,IAAAA,YAAAC,MAKAqG,WACE,OAAOzG,KAAK5C,IAAM4C,KAAKyK,eACxB,GAED,CAAAtK,IAAAA,iBAAAC,MAGAgW,WAAiB,MACP5U,EAASxB,KAATwB,KACF+U,EAAqBvW,KAAKwU,mBAAqBxU,KAAKuU,mBAE1D,GAAKgC,EAAL,CAIAvW,KAAKwU,mBAAqBxU,KAAKuU,mBAE/B/S,EAAKsD,UAAYtD,EAAKmU,eAEtB,IAEIa,EAFAC,EAAU/Y,KAAKG,IAAI0Y,GAInBE,GAAW,IACbzW,KAAKyU,sBAAwB8B,GAAsBA,EAAqB,GAAK,EAAI,GACjFE,EAAU,GAGZ,IAAK,IAAItB,EAAI,EAAGA,EAAIsB,EAAStB,IACvBoB,EAAqB,GACvBC,EAAaxW,KAAK0U,YAAYgC,WAE5B1W,KAAK0U,YAAY,GAAK8B,EAEtBxW,KAAKyU,uBAELlW,EAAaiY,EAAW1Z,IAAKkD,KAAKyU,qBAAuB,GAAKzU,KAAKsU,YAEnE9S,EAAKmV,WAAWH,EAAahV,EAAKsD,UAAY2R,EAAWtB,EAAI,KAG/DqB,EAAaxW,KAAK0U,YAAYkC,SAE5B5W,KAAK0U,YAAYmC,QAAQL,GAEzBxW,KAAKyU,uBAELlW,EAAaiY,EAAW1Z,GAAIkD,KAAKyU,qBAAuBzU,KAAKsU,YAE7D9S,EAAKmV,WAAWH,EAAahV,EAAKsD,UAAY2R,EAAWtB,EAAI,IAW/DzX,KAAKG,IAAImC,KAAKyU,sBAAwB,KAAOzU,KAAKyG,cACpDzG,KAAKiV,gBACLjV,KAAK6G,UAIPrF,EAAKoG,WAAWC,aAEhB7H,KAAK0U,YAAYpY,SAAQ,SAACyY,EAAYI,GAChCJ,EAAWpS,OAEboS,EAAWpS,MAAMkD,YAAkB,IAANsP,MAIjC3T,EAAK2H,UAAY,QAAjB,EAAiBnJ,KAAK0U,YAAY,UAAjB,eAAqB/R,MACtCnB,EAAK6D,cAAcyR,WAAWP,GAE1B/U,EAAK2H,WACP3H,EAAK2H,UAAU5C,sBAGjB/E,EAAKwB,SAAS,SArEb,CAsEF,GAED,CAAA7C,IAAAA,SAAAC,MAMA8L,SAAO9O,EAAG2Z,GACR,IAAK/W,KAAKwB,KAAKqU,WAAakB,EAAU,CAEpC,IAAIC,GAAwBhX,KAAKsU,WAAatU,KAAKuU,mBAAsBnX,GAAK4C,KAAKsU,WACnF0C,GAAuBhX,KAAKwB,KAAKsD,UACjC,IAAMkH,EAAQtO,KAAKC,MAAMP,EAAI4C,KAAK5C,IAE7B4Z,EAAsB,GAAKhL,EAAQ,GAChCgL,GAAuBhX,KAAKwB,KAAK+T,cAAgB,GAAKvJ,EAAQ,KACpE5O,EAAI4C,KAAK5C,EA3TgB,IA2TX4O,EAEjB,CAEDhM,KAAK5C,EAAIA,EAEL4C,KAAKwB,KAAK+D,WACZhH,EAAayB,KAAKwB,KAAK+D,UAAWnI,GAGpC4C,KAAKwB,KAAKwB,SAAS,iBAAkB,CAAE5F,EAAAA,EAAG2Z,SAAQ,OAAEA,QAAF,IAAEA,GAAAA,GACrD,OAzTH,GCdME,EAAsB,CAC1BC,OAAQ,GACRC,EAAG,GACHC,UAAW,GACXC,QAAS,GACTC,WAAY,GACZC,UAAW,GACXC,IAAK,GASDC,EAAsB,SAACtX,EAAKuX,GAChC,OAAOA,EAAiBvX,EAAM8W,EAAoB9W,EACnD,EAMKwX,EAAN,WAIE7X,SAAAA,EAAY0B,GAAM,YAAAzB,EAAAA,EAAAA,GAAAA,KAAAA,GAChBC,KAAKwB,KAAOA,EAEZxB,KAAK4X,aAAc,EAEnBpW,EAAK+O,GAAG,cAAc,WAChB/O,EAAKD,QAAQsW,YAEVrW,EAAKD,QAAQuW,mBAIhBC,EAAKC,aAGPxW,EAAKgP,OAAOnQ,IACVtD,SACA,UAC2Bgb,EAAKE,WAAWrH,KAAKmH,KAIpDvW,EAAKgP,OAAOnQ,IAAItD,SAAU,UAAsCgb,EAAKG,WAAWtH,KAAKmH,OAGvF,IAAMI,EAAgDpb,SAASqb,cAC/D5W,EAAK+O,GAAG,WAAW,WACb/O,EAAKD,QAAQ8W,aACVF,GACAJ,EAAKH,aACVO,EAAkBG,UAGvB,CA2GA,OAzGDpY,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,aAAAC,MACA4X,YACOhY,KAAK4X,aAAe5X,KAAKwB,KAAK7G,UACjCqF,KAAKwB,KAAK7G,QAAQ2d,QAClBtY,KAAK4X,aAAc,EAEtB,GAED,CAAAzX,IAAAA,aAAAC,MAIA8X,SAAW3c,GACT,IAAQiG,EAASxB,KAATwB,KAER,IAAIA,EAAKwB,SAAS,UAAW,CAAEsL,cAAe/S,IAAKmL,mBX+FhD,SAAwBnL,GAC7B,MAAQ,WAAYA,GAAkB,IAAbA,EAAEmW,QAAiBnW,EAAEgd,SAAWhd,EAAEid,SAAWjd,EAAEkd,QAAUld,EAAEmd,QACrF,CW7FOC,CAAepd,GAAnB,CAQA,IAAIqd,EAEA1V,EACA2V,GAAY,EACVnB,EAAiB,QAASnc,EAEhC,OAAQmc,EAAiBnc,EAAE4E,IAAM5E,EAAEud,SACjC,KAAKrB,EAAoB,SAAUC,GAC7BlW,EAAKD,QAAQwX,SACfH,EAAgB,SAElB,MACF,KAAKnB,EAAoB,IAAKC,GAC5BkB,EAAgB,aAChB,MACF,KAAKnB,EAAoB,YAAaC,GACpCxU,EAAO,IACP,MACF,KAAKuU,EAAoB,UAAWC,GAClCxU,EAAO,IACP,MACF,KAAKuU,EAAoB,aAAcC,GACrCxU,EAAO,IACP2V,GAAY,EACZ,MACF,KAAKpB,EAAoB,YAAaC,GACpCmB,GAAY,EACZ3V,EAAO,IACP,MACF,KAAKuU,EAAoB,MAAOC,GAC9B1X,KAAKgY,aAMT,GAAI9U,EAAM,CAER3H,EAAEwW,iBAEF,IAAQ5I,EAAc3H,EAAd2H,UAEJ3H,EAAKD,QAAQyX,WACD,MAAT9V,GACA1B,EAAK+T,cAAgB,EAC1BqD,EAAgBC,EAAY,OAAS,OAC5B1P,GAAaA,EAAUvG,cAAgBuG,EAAU7E,WAAWZ,MAKrEyF,EAAUnE,IAAI9B,IAAS2V,GAAa,GAAK,GACzC1P,EAAUrC,MAAMqC,EAAUnE,IAAI5H,EAAG+L,EAAUnE,IAAI3H,GAElD,CAEGub,IACFrd,EAAEwW,iBAEFvQ,EAAKoX,KA9DN,CAgEF,GAED,CAAAzY,IAAAA,aAAAC,MAMA6X,SAAW1c,GACT,IAAQ0d,EAAajZ,KAAKwB,KAAlByX,SACJA,GACGlc,WAAaxB,EAAE+E,QACf2Y,IAAa1d,EAAE+E,SACd2Y,EAASvK,SAA8BnT,EAAE+E,SAE/C2Y,EAASX,OAEZ,OAhJH,GCbMY,EAAN,WAMEpZ,SAAAA,EAAYzG,GAAO,cAAA0G,EAAAA,EAAAA,GAAAA,KAAAA,GACjBC,KAAK3G,MAAQA,EACb,IACEiH,EAMEjH,EANFiH,OACAiI,EAKElP,EALFkP,WACA9J,EAIEpF,EAJFoF,UAHI0a,EAOF9f,EAHF+f,SAAAA,OAAQ,IAAG,aAAO,EAJd,EAAAC,EAOFhgB,EAFFuF,SAAAA,OAAQ,IAAG,MALP,EAAA0a,EAOFjgB,EADFmP,OAAAA,OAAM,IAAG,EAhCQ,2BAgCR+Q,EAGXvZ,KAAKoZ,SAAWA,EAGhB,IAAMza,EAAOF,EAAY,YAAc,UACjCH,EAAS,QAAGjF,EAAAA,EAAMsF,UAAT,QAAkB,GAGjCqB,KAAKwZ,QAAUlZ,EAEfN,KAAKyZ,YAAclR,EAEnBvI,KAAK0Z,WAAY,EAGjB1Z,KAAK2Z,iBAAmB3Z,KAAK2Z,iBAAiB/I,KAAK5Q,MASnDA,KAAK4Z,eAAiB7G,YAAW,WAC/BrU,EAAmB4B,EAAQ3B,EAAMC,EAAU4J,GAC3CqR,EAAKD,eAAiB7G,YAAW,WAC/BzS,EAAOX,iBAAiB,gBAAiBka,EAAKF,kBAAkB,GAChErZ,EAAOX,iBAAiB,mBAAoBka,EAAKF,kBAAkB,GAMnEE,EAAKD,eAAiB7G,YAAW,WAC/B8G,EAAKC,oBACN,GAAElb,EAAW,KACd0B,EAAO9B,MAAMG,GAAQL,CACtB,GAAE,MACF,EACJ,CAoCA,OAlCD4B,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,mBAAAC,MAIAuZ,SAAiBpe,GACXA,EAAE+E,SAAWN,KAAKwZ,SACpBxZ,KAAK8Z,oBAER,GAED,CAAA3Z,IAAAA,qBAAAC,MAGA0Z,WACO9Z,KAAK0Z,YACR1Z,KAAK0Z,WAAY,EACjB1Z,KAAKoZ,WACDpZ,KAAKyZ,aACPzZ,KAAKyZ,cAGV,GA/EgB,CAAAtZ,IAAAA,UAAAC,MAkFjBuG,WACM3G,KAAK4Z,gBACP3G,aAAajT,KAAK4Z,gBZuCtBlb,EYrCwBsB,KAAKwZ,SAC3BxZ,KAAKwZ,QAAQO,oBAAoB,gBAAiB/Z,KAAK2Z,kBAAkB,GACzE3Z,KAAKwZ,QAAQO,oBAAoB,mBAAoB/Z,KAAK2Z,kBAAkB,GACvE3Z,KAAK0Z,WACR1Z,KAAK8Z,oBAER,OA5FH,GCdME,EAAN,WAgBEla,SAAAA,EAAYkL,EAAiBO,EAAcuC,IAAkB/N,EAAAA,EAAAA,GAAAA,KAAAA,GAC3DC,KAAKsK,SAA6B,IAAlBU,EAGhBhL,KAAKia,cAAgB1O,GAzBK,IA4B1BvL,KAAKka,kBAAoBpM,GA7BK,GA+B9B9N,KAAKma,iBAAmBna,KAAKka,kBAEzBla,KAAKia,cAAgB,IACvBja,KAAKma,kBAAoBzc,KAAKI,KAAK,EAAIkC,KAAKia,cAAgBja,KAAKia,eAEpE,CAkDA,OAhDD/Z,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,YAAAC,MAMAga,SAAUC,EAAeC,GAMvB,IACIC,EADArH,EAAe,EAGnBoH,GAAa,IAEb,IAAME,EAAoB9c,KAAK,IAALA,KAAK+c,GAAOza,KAAKia,cAAgBja,KAAKka,kBAAoBI,GAEpF,GAA2B,IAAvBta,KAAKia,cAGP/G,GAAgBmH,GAFhBE,EAAQva,KAAKsK,SAAWtK,KAAKka,kBAAoBG,GAETC,GAAaE,EAErDxa,KAAKsK,SAAW4I,GACMlT,KAAKka,kBAAqBK,EAC5BC,OACf,GAAIxa,KAAKia,cAAgB,EAAG,CACjCM,EAAS,EAAIva,KAAKma,kBACLna,KAAKia,cAAgBja,KAAKka,kBAAoBG,EAAgBra,KAAKsK,UAEhF,IAAMoQ,EAAahd,KAAKid,IAAI3a,KAAKma,iBAAmBG,GAC9CM,EAAald,KAAKmd,IAAI7a,KAAKma,iBAAmBG,GAEpDpH,EAAesH,GACKH,EAAgBK,EAAaH,EAAQK,GAEzD5a,KAAKsK,SAAW4I,GACMlT,KAAKka,kBACPla,KAAKia,cACLO,IACExa,KAAKma,iBAAmBE,EAAgBO,EAC1C5a,KAAKma,iBAAmBI,EAAQG,EACrD,CAID,OAAOxH,CACR,OAhFH,GCWM4H,EAAN,WAIEhb,SAAAA,EAAYzG,GAAO,YAAA0G,EAAAA,EAAAA,GAAAA,KAAAA,GACjBC,KAAK3G,MAAQA,EACb2G,KAAK+a,KAAO,EAEZ,IACEtR,EAQEpQ,EARFoQ,MACAY,EAOEhR,EAPFgR,IACAC,EAMEjR,EANFiR,SACAqB,EAKEtS,EALFsS,SACApD,EAIElP,EAJFkP,WALIyS,EASF3hB,EAHF+f,SAAAA,OAAQ,IAAG,aAAO,EANd,EAOJ7N,EAEElS,EAFFkS,aACAuC,EACEzU,EADFyU,iBAGF9N,KAAKoZ,SAAWA,EAEhB,IAAM6B,EAAQ,IAAIjB,EAAY1P,EAAUiB,EAAcuC,GAClDoN,EAAW7I,KAAKtE,MAChBsM,EAAgB5Q,EAAQY,EAsB5BrK,KAAK+a,KAAOtI,uBApBU,SAAhB0I,IACAC,EAAKL,OACPV,EAAgBY,EAAMb,UAAUC,EAAehI,KAAKtE,MAAQmN,GAGxDxd,KAAKG,IAAIwc,GAAiB,GAAK3c,KAAKG,IAAIod,EAAM3Q,UAAY,IAE5DqB,EAAStB,GACL9B,GACFA,IAEF6S,EAAKhC,aAEL8B,EAAW7I,KAAKtE,MAChBpC,EAAS0O,EAAgBhQ,GACzB+Q,EAAKL,KAAOtI,sBAAsB0I,OAMzC,CAQA,OAtDmBjb,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,UAAAC,MAiDpBuG,WACM3G,KAAK+a,MAAQ,GACf5H,qBAAqBnT,KAAK+a,MAE5B/a,KAAK+a,KAAO,CACb,OAtDH,GCGMM,EAAN,WACEvb,SAAAA,KAAcC,EAAAA,EAAAA,GAAAA,KAAAA,GAEZC,KAAKsb,iBAAmB,EACzB,CA4FA,OA1FDpb,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,cAAAC,MAGAsL,SAAYrS,GACV2G,KAAKub,OAAOliB,GAAO,EACpB,GAED,CAAA8G,IAAAA,kBAAAC,MAGAgI,SAAgB/O,GACd2G,KAAKub,OAAOliB,EACb,GAED,CAAA8G,IAAAA,SAAAC,MAMAmb,SAAOliB,EAAOmiB,GAAU,WAChBC,EAAYD,EACd,IAAIV,EAAmDzhB,GACvD,IAAI6f,EAA6C7f,GAKrD,OAHA2G,KAAKsb,iBAAiBrf,KAAKwf,GAC3BA,EAAUrC,SAAW,kBAAMsC,EAAKC,KAAKF,EAArC,EAEOA,CACR,GAED,CAAAtb,IAAAA,OAAAC,MAGAub,SAAKF,GACHA,EAAU9U,UACV,IAAM1E,EAAQjC,KAAKsb,iBAAiB1I,QAAQ6I,GACxCxZ,GAAS,GACXjC,KAAKsb,iBAAiB5H,OAAOzR,EAAO,EAEvC,IAAA9B,IAAAA,UAAAC,MAEDsJ,WACE1J,KAAKsb,iBAAiBhf,SAASmf,SAAAA,GAC7BA,EAAU9U,aAEZ3G,KAAKsb,iBAAmB,EACzB,GAED,CAAAnb,IAAAA,aAAAC,MAGAyH,WACE7H,KAAKsb,iBAAmBtb,KAAKsb,iBAAiBxf,QAAQ2f,SAAAA,GACpD,OAAIA,EAAUpiB,MAAMgP,QAClBoT,EAAU9U,WACH,EAIV,GACF,IAAAxG,IAAAA,iBAAAC,MAED4V,WACEhW,KAAKsb,iBAAmBtb,KAAKsb,iBAAiBxf,QAAQ2f,SAAAA,GACpD,OAAIA,EAAUpiB,MAAM6c,eAClBuF,EAAU9U,WACH,EAIV,GACF,GAWD,CAAAxG,IAAAA,eAAAC,MAGAwb,WACE,OAAO5b,KAAKsb,iBAAiBO,MAAMJ,SAAAA,GACjC,OAAOA,EAAUpiB,MAAMgP,KACxB,GACF,OAhGH,GCdMyT,EAAN,WAIEhc,SAAAA,EAAY0B,IAAMzB,EAAAA,EAAAA,GAAAA,KAAAA,GAChBC,KAAKwB,KAAOA,EACZA,EAAKgP,OAAOnQ,IAAImB,EAAK7G,QAAS,QAAoCqF,KAAK+b,SAASnL,KAAK5Q,MACtF,CAmDA,OAjDDE,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,WAAAC,MAIA2b,SAASxgB,GACPA,EAAEwW,iBACF,IAAQ5I,EAAcnJ,KAAKwB,KAAnB2H,UACF6S,EAAmBzgB,EAAnBygB,OAAQC,EAAW1gB,EAAX0gB,OAEd,GAAK9S,IAIDnJ,KAAKwB,KAAKwB,SAAS,QAAS,CAAEsL,cAAe/S,IAAKmL,iBAItD,GAAInL,EAAEgd,SAAWvY,KAAKwB,KAAKD,QAAQ2a,aAEjC,GAAI/S,EAAUxB,aAAc,CAC1B,IAAIkB,GAAcoT,EACE,IAAhB1gB,EAAE4gB,UACJtT,GAAc,IAEdA,GAActN,EAAE4gB,UAAY,EAAI,KAElCtT,EAAa,KAAH,IAAG,EAAKA,GAElB,IAAMtB,EAAgB4B,EAAUvG,cAAgBiG,EAChDM,EAAU7B,OAAOC,EAAe,CAC9BnK,EAAG7B,EAAE6gB,QACL/e,EAAG9B,EAAE8gB,SAER,OAGGlT,EAAUH,eACQ,IAAhBzN,EAAE4gB,YAEJH,GAAU,GACVC,GAAU,IAGZ9S,EAAUrC,MACRqC,EAAUnE,IAAI5H,EAAI4e,EAClB7S,EAAUnE,IAAI3H,EAAI4e,GAIzB,OA1DH,GCqEC,IAEKK,GAAN,QAKExc,SAAAA,EAAY0B,EAAM4B,GAAM,OAAArD,EAAAA,EAAAA,GAAAA,KAAAA,GACtB,IAAMlG,EAAOuJ,EAAKvJ,MAAQuJ,EAAKzG,UAC3B4f,EAAcnZ,EAAKoZ,KAGvB,IAA2B,IAAvBhb,EAAKD,QAAQ1H,GAAjB,CAO0C,kBAA/B2H,EAAKD,QAAQ1H,EAAO,SAM7B0iB,EAAc/a,EAAKD,QAAQ1H,EAAO,QAGpC2H,EAAKwB,SAAS,kBAAmB,CAAEI,KAAAA,IAEnC,IAAIzG,EAAY,GACZyG,EAAKqZ,UACP9f,GAAa,gBACbA,GAAcyG,EAAKzG,WAAL,wBAAmCyG,EAAKvJ,OAEtD8C,GAAcyG,EAAKzG,WAAL,gBAA2ByG,EAAKvJ,MAGhD,IAAI+C,EAAUwG,EAAKqZ,SAAYrZ,EAAKxG,SAAW,SAAawG,EAAKxG,SAAW,MAGtEjC,EAAU+B,EAAcC,EAF9BC,EAAsDA,EAAQ8f,eAI9D,GAAItZ,EAAKqZ,SAAU,CACD,WAAZ7f,IACgCjC,EAAS4F,KAAO,UAGpD,IAAMoc,EAAUvZ,EAAVuZ,MACEC,EAAcxZ,EAAdwZ,UAGoC,kBAAjCpb,EAAKD,QAAQ1H,EAAO,WAE7B8iB,EAAQnb,EAAKD,QAAQ1H,EAAO,UAG1B8iB,IACFhiB,EAAQgiB,MAAQA,GAGlB,IAAME,EAAWD,GAAaD,EAC1BE,GACFliB,EAAQya,aAAa,aAAcyH,EAEtC,CAEDliB,EAAQmiB,UAtGZ,SAAwBC,GACtB,GAAwB,kBAAbA,EAQT,OAAOA,EAGT,IAAKA,IAAaA,EAASC,YACzB,MAAO,GAGT,IAAMC,EAAUF,EACZG,EAAM,wFAiBV,OAfAA,EAAMA,EAAIhc,MAAM,MAAMic,KAA4BF,EAAQG,MAAQ,IAO9DH,EAAQI,YACVH,GAAO,8CAAgDD,EAAQI,UAAY,OAG7EH,GAAOD,EAAQK,MAEfJ,EAAO,QAGR,CAmEuBK,CAAehB,GAE/BnZ,EAAKoa,QACPpa,EAAKoa,OAAO7iB,EAAS6G,GAGnB4B,EAAKqa,UACP9iB,EAAQ+iB,QAAWniB,SAAAA,GACW,kBAAjB6H,EAAKqa,QAEdjc,EAAK4B,EAAKqa,WACuB,oBAAjBra,EAAKqa,SACrBra,EAAKqa,QAAQliB,EAAGZ,EAAS6G,KAM/B,IAAMmc,EAAWva,EAAKua,UAAY,MAE9BpY,EAAY/D,EAAK7G,QACJ,QAAbgjB,GACGnc,EAAKoc,SACRpc,EAAKoc,OAASlhB,EAAc,oCAAqC,MAAO8E,EAAKiP,aAE/ElL,EAAY/D,EAAKoc,SAIjBjjB,EAAQ6T,UAAUnO,IAAI,uBAEL,YAAbsd,IACFpY,EAAY/D,EAAKiP,aAIZ,QAAT,EAAAlL,SAAWvI,IAAAA,GAAAA,EAAAA,YAAYwE,EAAK4R,aAAa,YAAazY,EAASyI,GAxF9D,CAyFF,ICtKH,SAASya,EAAgBljB,EAAS6G,EAAMsc,GACtCnjB,EAAQ6T,UAAUnO,IAAI,uBAEtB1F,EAAQya,aAAa,gBAAiB,eACtC5T,EAAK+O,GAAG,UAAU,WACX/O,EAAKD,QAAQwc,OAGbpjB,EAASqjB,SAFRF,IAEqBtc,EAAKsD,UAAYtD,EAAK+T,cAAgB,KAGtC/T,EAAKsD,UAAY,MAI/C,CAGM,IAAMmZ,EAAY,CACvBpkB,KAAM,YACN8C,UAAW,4BACXggB,MAAO,WACPuB,MAAO,GACPzB,UAAU,EACVkB,SAAU,UACVnB,KAAM,CACJQ,aAAa,EACbI,KAAM,GACNE,MAAO,4EACPD,UAAW,mBAEbI,QAAS,OACTD,OAAQK,GAIGM,EAAY,CACvBtkB,KAAM,YACN8C,UAAW,4BACXggB,MAAO,OACPuB,MAAO,GACPzB,UAAU,EACVkB,SAAU,UACVnB,KAAM,CACJQ,aAAa,EACbI,KAAM,GACNE,MAAO,uCACPD,UAAW,mBAEbI,QAAS,OACTD,OAAQ,SAAC1gB,EAAI0E,GACXqc,EAAgB/gB,EAAI0E,GAAM,EAC3B,GChEG4c,EAAc,CAClBvkB,KAAM,QACN8iB,MAAO,QACPuB,MAAO,GACPzB,UAAU,EACVD,KAAM,CACJQ,aAAa,EACbM,MAAO,wFACPD,UAAW,mBAEbI,QAAS,SCVLY,EAAa,CACjBxkB,KAAM,OACN8iB,MAAO,OACPuB,MAAO,GACPzB,UAAU,EACVD,KAAM,CACJQ,aAAa,EAEbM,MAAO,uPAGPD,UAAW,kBAEbI,QAAS,cCbEa,GAAmB,CAC9BzkB,KAAM,YACN8jB,SAAU,MACVO,MAAO,EACP1B,KAAM,CACJQ,aAAa,EAEbM,MAAO,kIACPD,UAAW,qBAEbG,OAAQ,SAACe,EAAkB/c,GAEzB,IAAIgd,EAEAC,EAAe,KAabC,EAA0BC,SAAAA,GAPH,IAAChiB,EAAW0D,EAQnCme,IAAcG,IAChBH,EAAYG,EATchiB,EAUL,SAVgB0D,EAUNse,EATjCJ,EAAiB/P,UAAUU,OAAO,oBAAsBvS,EAAW0D,KAa/Due,EAA4B,WAAM,MACtC,GAAI,UAACpd,EAAK2H,iBAAN,QAAC0V,EAAgBzZ,QAAQ0Z,YAM3B,OALAJ,GAAuB,QACnBD,IACFxL,aAAawL,GACbA,EAAe,OAKdA,IAEHA,EAAe1L,YAAW,WAAM,MAC9B2L,EAAuBzV,QAAQ,QAAAzH,EAAAA,EAAK2H,iBAAL,eAAgB/D,QAAQ0Z,cACvDL,EAAe,IAChB,GAAEjd,EAAKD,QAAQwd,kBAIpBvd,EAAK+O,GAAG,SAAUqO,GAElBpd,EAAK+O,GAAG,gBAAiBhV,SAAAA,GACnBiG,EAAK2H,YAAc5N,EAAEoH,OACvBic,GAEH,IAGGpd,EAAKwd,KACPxd,EAAKwd,GAAGJ,0BAA4BA,EAEvC,GCjEUK,GAAmB,CAC9BplB,KAAM,UACNqkB,MAAO,EACPV,OAAQ,SAAC0B,EAAgB1d,GACvBA,EAAK+O,GAAG,UAAU,WAChB2O,EAAeC,UAAa3d,EAAKsD,UAAY,EACftD,EAAKD,QAAQ6d,kBACb5d,EAAK+T,gBAEtC,GCSH,SAAS8J,GAAYviB,EAAIwiB,GACvBxiB,EAAG0R,UAAUU,OAAO,kBAAmBoQ,EACxC,KAEKC,GAAN,WAIEzf,SAAAA,EAAY0B,IAAMzB,EAAAA,EAAAA,GAAAA,KAAAA,GAChBC,KAAKwB,KAAOA,EACZxB,KAAKwf,cAAe,EAEpBxf,KAAKyf,eAAiB,GAEtBzf,KAAK0f,MAAQ,GAEb1f,KAAK4e,0BAA4B,WAAO,EAMxC5e,KAAK2f,2BAAwBriB,CAC9B,CA+FA,OA/FA4C,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,OAAAC,MAEDwf,WAAO,WACGpe,EAASxB,KAATwB,KACRxB,KAAKwf,cAAe,EACpBxf,KAAKyf,eAAiB,CACpBrB,EACAH,EACAE,EACAE,EACAC,GACAW,IAGFzd,EAAKwB,SAAS,cAGdhD,KAAKyf,eAAeI,MAAK,SAACC,EAAGC,GAE3B,OAAQD,EAAE5B,OAAS,IAAM6B,EAAE7B,OAAS,MAGtCle,KAAK0f,MAAQ,GAEb1f,KAAKwf,cAAe,EACpBxf,KAAKyf,eAAenjB,SAAS0jB,SAAAA,GAC3BC,EAAKC,gBAAgBF,MAGvBxe,EAAK+O,GAAG,UAAU,WAAM,MACtB,UAAA/O,EAAK7G,eAAL,SAAc6T,UAAUU,OAAO,kBAA0C,IAAvB1N,EAAK+T,kBAGzD/T,EAAK+O,GAAG,iBAAiB,kBAAM0P,EAAKE,kBAApC,GACD,GAED,CAAAhgB,IAAAA,kBAAAC,MAGA8f,SAAgBE,GACVpgB,KAAKwf,aACPxf,KAAK0f,MAAMzjB,KACT,IAAIqgB,EAAUtc,KAAKwB,KAAM4e,IAG3BpgB,KAAKyf,eAAexjB,KAAKmkB,EAE5B,GAED,CAAAjgB,IAAAA,mBAAAC,MAMA+f,WACE,MAAyCngB,KAAKwB,KAAtCyX,EAAF,EAAEA,SAAU9P,EAAZ,EAAYA,UAAW5H,EAAAA,EAAAA,QAE7B,IAAIvB,KAAKwB,KAAK0D,OAAOmb,WAAcpH,GAAa9P,EAAhD,CAIA,IAAMvG,EAAkBuG,EAAlBvG,cAON,GAJK5C,KAAKwB,KAAK0D,OAAOC,SACpBvC,EAAgBuG,EAAU7E,WAAWT,SAGnCjB,IAAkB5C,KAAK2f,sBAA3B,CAGA3f,KAAK2f,sBAAwB/c,EAE7B,IAAM0d,EAAoBnX,EAAU7E,WAAWT,QAAUsF,EAAU7E,WAAWR,UAG9E,GAAIpG,KAAKG,IAAIyiB,GAAqB,MAASnX,EAAUxB,aAInD,OAFA0X,GAAYpG,GAAU,QACtBA,EAASzK,UAAU7N,OAAO,sBAI5BsY,EAASzK,UAAUnO,IAAI,sBAKvBgf,GAAYpG,GAHerW,IAAkBuG,EAAU7E,WAAWT,QAC9DsF,EAAU7E,WAAWR,UAAYqF,EAAU7E,WAAWT,UAEdjB,GAEX,SAA7BrB,EAAQgf,kBACwB,kBAA7Bhf,EAAQgf,kBACbtH,EAASzK,UAAUnO,IAAI,sBAtBxB,CAXA,CAmCF,OAlHH,GCoLA,IAKMmgB,GAAN,WAKE1gB,SAAAA,EAAYS,EAAMkgB,IAAS1gB,EAAAA,EAAAA,GAAAA,KAAAA,GACzBC,KAAKO,KAAOA,EACZP,KAAK0G,kBAAmB,EACpB+Z,GACF/kB,OAAOglB,OAAO1gB,KAAMygB,EAEvB,CAIA,OAJAvgB,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,iBAAAC,MAED2R,WACE/R,KAAK0G,kBAAmB,CACzB,OAfH,GAsBMia,GAAN,WACE7gB,SAAAA,KAAcC,EAAAA,EAAAA,GAAAA,KAAAA,GAIZC,KAAK4gB,WAAa,CAAC,EAKnB5gB,KAAK6gB,SAAW,CAAC,EAGjB7gB,KAAKwB,UAAOlE,EAGZ0C,KAAKuB,aAAUjE,CAChB,CAkGA,OAhGD4C,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,YAAAC,MAMA0gB,SAAUjnB,EAAMknB,GAAoB,UAAhBC,EAAW,UAAH,6CAAG,IACxBhhB,KAAK6gB,SAAShnB,KACjBmG,KAAK6gB,SAAShnB,GAAQ,IAGxB,UAAAmG,KAAK6gB,SAAShnB,UAAd,SAAqBoC,KAAK,CAAE8kB,GAAAA,EAAIC,SAAAA,IACXnB,QAArB,EAAA7f,KAAK6gB,SAAShnB,UAAOgmB,IAAAA,GAAAA,EAAAA,MAAK,SAACoB,EAAIC,GAAL,OAAYD,EAAGD,SAAWE,EAAGF,QAAvD,IAEA,QAAKxf,EAAAA,KAAAA,YAAL,SAAWsf,UAAUjnB,EAAMknB,EAAIC,EAChC,GAED,CAAA7gB,IAAAA,eAAAC,MAKA+gB,SAAatnB,EAAMknB,GACb/gB,KAAK6gB,SAAShnB,KAEhBmG,KAAK6gB,SAAShnB,GAAQmG,KAAK6gB,SAAShnB,GAAMiC,QAAOA,SAAAA,GAAM,OAAKA,EAAOilB,KAAOA,CAApD,KAGpB/gB,KAAKwB,MACPxB,KAAKwB,KAAK2f,aAAatnB,EAAMknB,EAEhC,GAED,CAAA5gB,IAAAA,eAAAC,MAMAgT,SAAavZ,GAAe,oCAANunB,EAAV,iCAAUA,EAAV,kBAKV,OAJA,UAAAphB,KAAK6gB,SAAShnB,UAAd,SAAqByC,SAASR,SAAAA,GAE5BslB,EAAK,GAAKtlB,EAAOilB,GAAG7kB,MAAMmlB,EAAMD,MAE3BA,EAAK,EACb,GAED,CAAAjhB,IAAAA,KAAAC,MAKAmQ,SAAG1W,EAAMknB,GAAI,QACN/gB,KAAK4gB,WAAW/mB,KACnBmG,KAAK4gB,WAAW/mB,GAAQ,IAE1B,QAAK+mB,EAAAA,KAAAA,WAAW/mB,UAAhB,SAAuBoC,KAAK8kB,GAKjBxQ,QAAX,EAAAvQ,KAAKwB,YAAM+O,IAAAA,GAAAA,EAAAA,GAAG1W,EAAMknB,EACrB,GAED,CAAA5gB,IAAAA,MAAAC,MAKAkhB,SAAIznB,EAAMknB,GAAI,MACR/gB,KAAK4gB,WAAW/mB,KAElBmG,KAAK4gB,WAAW/mB,GAAQmG,KAAK4gB,WAAW/mB,GAAMiC,QAAO0E,SAAAA,GAAQ,OAAKugB,IAAOvgB,CAAjD,KAGf8gB,QAAX,EAAAthB,KAAKwB,YAAM8f,IAAAA,GAAAA,EAAAA,IAAIznB,EAAMknB,EACtB,GAED,CAAA5gB,IAAAA,WAAAC,MAMA4C,SAASnJ,EAAM4mB,GAAS,aACtB,GAAIzgB,KAAKwB,KACP,OAAOxB,KAAKwB,KAAKwB,SAASnJ,EAAM4mB,GAGlC,IAAMvS,EAA0C,IAAIsS,GAAgB3mB,EAAM4mB,GAM1E,OAJA,UAAAzgB,KAAK4gB,WAAW/mB,UAAhB,SAAuByC,SAASkE,SAAAA,GAC9BA,EAAS2O,KAAKoS,EAAMrT,MAGfA,CACR,OAnHH,GCpOMsT,GAAN,WAKE1hB,SAAAA,EAAY2hB,EAAUlc,GAUpB,IAV+BxF,EAAAA,EAAAA,GAAAA,KAAAA,GAI/BC,KAAKrF,QAAU+B,EACb,mCACA+kB,EAAW,MAAQ,MACnBlc,GAGEkc,EAAU,CACZ,IAAMC,EAAyC1hB,KAAKrF,QACpD+mB,EAAMC,SAAW,QACjBD,EAAME,IAAM,GACZF,EAAMG,IAAMJ,EACZC,EAAMtM,aAAa,OAAQ,eAC5B,CAEDpV,KAAKrF,QAAQya,aAAa,cAAe,OAC1C,CA4BA,OA1BDlV,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,mBAAAC,MAIA8G,SAAiBhI,EAAOC,GACjBa,KAAKrF,UAImB,QAAzBqF,KAAKrF,QAAQiC,SAIfmC,EAAeiB,KAAKrF,QAAS,IAAK,QAClCqF,KAAKrF,QAAQ6D,MAAMyH,gBAAkB,MACrCjG,KAAKrF,QAAQ6D,MAAMC,UAAYL,EAAkB,EAAG,EAAGc,EAAQ,MAE/DH,EAAeiB,KAAKrF,QAASuE,EAAOC,GAEvC,IAAAgB,IAAAA,UAAAC,MAEDuG,WAAU,MACJ,QAAJ,EAAI3G,KAAKrF,eAAL,SAAcmnB,YAChB9hB,KAAKrF,QAAQgG,SAEfX,KAAKrF,QAAU,IAChB,OApDH,GCMMonB,GAAN,WAMEjiB,SAAAA,EAAYkC,EAAUggB,EAAU/f,IAAOlC,EAAAA,EAAAA,GAAAA,KAAAA,GACrCC,KAAKgiB,SAAWA,EAChBhiB,KAAKoD,KAAOpB,EACZhC,KAAKiC,MAAQA,EAGbjC,KAAKrF,aAAU2C,EAEf0C,KAAKoH,iBAAc9J,EAEnB0C,KAAK2C,WAAQrF,EAEb0C,KAAKiiB,oBAAsB,EAC3BjiB,KAAKkiB,qBAAuB,EAE5BliB,KAAKd,MAAQsD,OAAOxC,KAAKoD,KAAKpE,IAAMwD,OAAOxC,KAAKoD,KAAKlE,QAAU,EAC/Dc,KAAKb,OAASqD,OAAOxC,KAAKoD,KAAKnE,IAAMuD,OAAOxC,KAAKoD,KAAKjE,SAAW,EAEjEa,KAAKmiB,YAAa,EAClBniB,KAAK4G,UAAW,EAChB5G,KAAKoiB,YAAa,EAElBpiB,KAAKqiB,MAAQjjB,EAETY,KAAKoD,KAAK7C,KACZP,KAAKO,KAAOP,KAAKoD,KAAK7C,KACbP,KAAKoD,KAAKye,IACnB7hB,KAAKO,KAAO,QAEZP,KAAKO,KAAO,OAGdP,KAAKgiB,SAAShf,SAAS,cAAe,CAAEoC,QAASpF,MAClD,CAqdA,OArdAE,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,oBAAAC,MAEDkiB,WAAoB,WACdtiB,KAAKoH,cAAgBpH,KAAKuiB,mBAE5BxP,YAAW,WACLyP,EAAKpb,cACPob,EAAKpb,YAAYT,UACjB6b,EAAKpb,iBAAc9J,KAEpB,IAEN,GAED,CAAA6C,IAAAA,OAAAC,MAMA+F,SAAKsc,EAAQC,GACX,GAAI1iB,KAAK2C,OAAS3C,KAAK2iB,iBACrB,GAAK3iB,KAAKoH,YAYH,CACL,IAAMwb,EAAgB5iB,KAAKoH,YAAYzM,QAEnCioB,IAAkBA,EAAcC,eAClC7iB,KAAK2C,MAAM4C,UAAUud,QAAQF,EAEhC,KAlBsB,CACrB,IAAMG,EAAiB/iB,KAAKgiB,SAAS5O,aACnC,oBAGCpT,KAAKoD,KAAK4f,OAAQhjB,KAAK2C,MAAMsC,eAAgBjF,KAAKoD,KAAK4f,KACxDhjB,MAEFA,KAAKoH,YAAc,IAAIoa,GACrBuB,EACA/iB,KAAK2C,MAAM4C,UAEd,CASCvF,KAAKrF,UAAY+nB,GAIjB1iB,KAAKgiB,SAAShf,SAAS,cAAe,CAAEoC,QAASpF,KAAMyiB,OAAAA,IAAU/b,mBAIjE1G,KAAKijB,kBACPjjB,KAAKrF,QAAU+B,EAAc,YAAa,OAGtCsD,KAAKiiB,qBACPjiB,KAAKkjB,UAAUT,KAGjBziB,KAAKrF,QAAU+B,EAAc,gBAAiB,OAC9CsD,KAAKrF,QAAQmiB,UAAY9c,KAAKoD,KAAKoZ,MAAQ,IAGzCkG,GAAU1iB,KAAK2C,OACjB3C,KAAK2C,MAAMyD,mBAAkB,GAEhC,GAED,CAAAjG,IAAAA,YAAAC,MAKA8iB,SAAUT,GAAQ,eAChB,GAAKziB,KAAKijB,kBACJjjB,KAAKrF,UACNqF,KAAKgiB,SAAShf,SAAS,mBAAoB,CAAEoC,QAASpF,KAAMyiB,OAAAA,IAAU/b,iBAF3E,CAMA,IAAMyc,EAA8CnjB,KAAKrF,QAEzDqF,KAAKojB,oBAEDpjB,KAAKoD,KAAKigB,SACZF,EAAaE,OAASrjB,KAAKoD,KAAKigB,QAGlCF,EAAatB,IAAb,QAAmB,EAAA7hB,KAAKoD,KAAKye,WAA7B,QAAoC,GACpCsB,EAAavB,IAAb,QAAmB,EAAA5hB,KAAKoD,KAAKwe,WAA7B,QAAoC,GAEpC5hB,KAAKqiB,MAAQjjB,EAET+jB,EAAaG,SACftjB,KAAKujB,YAELJ,EAAaK,OAAS,WACpBC,EAAKF,YAGPJ,EAAaO,QAAU,WACrBD,EAAKE,WAvBR,CA0BF,GAED,CAAAxjB,IAAAA,WAAAC,MAKAwjB,SAASjhB,GACP3C,KAAK2C,MAAQA,EACb3C,KAAK4G,UAAW,EAChB5G,KAAKgiB,SAAWrf,EAAMnB,IAGvB,GAED,CAAArB,IAAAA,WAAAC,MAGAmjB,WACEvjB,KAAKqiB,MAAQjjB,EAETY,KAAK2C,OAAS3C,KAAKrF,UACrBqF,KAAKgiB,SAAShf,SAAS,eAAgB,CAAEL,MAAO3C,KAAK2C,MAAOyC,QAASpF,OAGjEA,KAAK2C,MAAMkC,UACR7E,KAAK2C,MAAM8C,gBACVzF,KAAKrF,QAAQmnB,aACnB9hB,KAAKgG,SACLhG,KAAK2C,MAAMyD,mBAAkB,IAG3BpG,KAAKqiB,QAAUjjB,GAAqBY,KAAKqiB,QAAUjjB,GACrDY,KAAKsiB,oBAGV,GAED,CAAAniB,IAAAA,UAAAC,MAGAujB,WACE3jB,KAAKqiB,MAAQjjB,EAETY,KAAK2C,QACP3C,KAAK6jB,eACL7jB,KAAKgiB,SAAShf,SAAS,eAAgB,CAAEL,MAAO3C,KAAK2C,MAAOmhB,SAAS,EAAM1e,QAASpF,OACpFA,KAAKgiB,SAAShf,SAAS,YAAa,CAAEL,MAAO3C,KAAK2C,MAAOyC,QAASpF,OAErE,GAED,CAAAG,IAAAA,YAAAC,MAGA0e,WACE,OAAO9e,KAAKgiB,SAAS5O,aACnB,mBACApT,KAAKqiB,QAAUjjB,EACfY,KAEH,GAED,CAAAG,IAAAA,UAAAC,MAGA0jB,WACE,OAAO9jB,KAAKqiB,QAAUjjB,CACvB,GAED,CAAAe,IAAAA,iBAAAC,MAGA6iB,WACE,MAAqB,UAAdjjB,KAAKO,IACb,GAED,CAAAJ,IAAAA,mBAAAC,MAMA8G,SAAiBhI,EAAOC,GACtB,GAAKa,KAAKrF,UAINqF,KAAKoH,aACPpH,KAAKoH,YAAYF,iBAAiBhI,EAAOC,IAGvCa,KAAKgiB,SAAShf,SAChB,gBACA,CAAEoC,QAASpF,KAAMd,MAAAA,EAAOC,OAAAA,IAAUuH,mBAKpC3H,EAAeiB,KAAKrF,QAASuE,EAAOC,GAEhCa,KAAKijB,mBAAqBjjB,KAAK8jB,YAAW,CAC5C,IAAMC,GAAwB/jB,KAAKiiB,qBAAuB/iB,EAE1Dc,KAAKiiB,oBAAsB/iB,EAC3Bc,KAAKkiB,qBAAuB/iB,EAExB4kB,EACF/jB,KAAKkjB,WAAU,GAEfljB,KAAKojB,oBAGHpjB,KAAK2C,OACP3C,KAAKgiB,SAAShf,SACZ,kBACA,CAAEL,MAAO3C,KAAK2C,MAAOzD,MAAAA,EAAOC,OAAAA,EAAQiG,QAASpF,MAGlD,CACF,GAED,CAAAG,IAAAA,aAAAC,MAGAuH,WACE,OAAO3H,KAAKgiB,SAAS5O,aACnB,oBACApT,KAAKijB,kBAAqBjjB,KAAKqiB,QAAUjjB,EACzCY,KAEH,GAED,CAAAG,IAAAA,oBAAAC,MAGAgjB,WAME,GAAKpjB,KAAKijB,kBAAqBjjB,KAAKrF,SAAYqF,KAAKoD,KAAKigB,OAA1D,CAIA,IAAMW,EAAuChkB,KAAKrF,QAC5CspB,EAAajkB,KAAKgiB,SAAS5O,aAC/B,mBACApT,KAAKiiB,oBACLjiB,QAICgkB,EAAME,QAAQC,iBACZF,EAAaG,SAASJ,EAAME,QAAQC,gBAAiB,OAExDH,EAAMK,MAAQJ,EAAa,KAC3BD,EAAME,QAAQC,gBAAkBG,OAAOL,GAdxC,CAgBF,GAED,CAAA9jB,IAAAA,iBAAAC,MAGAuiB,WACE,OAAO3iB,KAAKgiB,SAAS5O,aACnB,wBACApT,KAAKijB,iBACLjjB,KAEH,GAED,CAAAG,IAAAA,WAAAC,MAGAmkB,WACMvkB,KAAKgiB,SAAShf,SAAS,kBAAmB,CAAEoC,QAASpF,OAAQ0G,kBAIjE1G,KAAKmG,MAAK,EACX,GAED,CAAAhG,IAAAA,kBAAAC,MAGAmiB,WACE,OAAOviB,KAAKgiB,SAAS5O,aACnB,uBACApT,KAAK8e,YACL9e,KAEH,GAED,CAAAG,IAAAA,UAAAC,MAGAuG,WACE3G,KAAK4G,UAAW,EAChB5G,KAAK2C,WAAQrF,EAET0C,KAAKgiB,SAAShf,SAAS,iBAAkB,CAAEoC,QAASpF,OAAQ0G,mBAIhE1G,KAAKW,SAEDX,KAAKoH,cACPpH,KAAKoH,YAAYT,UACjB3G,KAAKoH,iBAAc9J,GAGjB0C,KAAKijB,kBAAoBjjB,KAAKrF,UAChCqF,KAAKrF,QAAQ6oB,OAAS,KACtBxjB,KAAKrF,QAAQ+oB,QAAU,KACvB1jB,KAAKrF,aAAU2C,GAElB,GAED,CAAA6C,IAAAA,eAAAC,MAGAyjB,WACE,GAAI7jB,KAAK2C,MAAO,SACV6hB,EAAa9nB,EAAc,kBAAmB,OAClD8nB,EAAWrF,UAAX,UAAuB,QAAvB,EAAuBnf,KAAKgiB,SAASzgB,eAAd,eAAuBkjB,gBAA9C,QAA0D,GAC1DD,EAA4CxkB,KAAKgiB,SAAS5O,aACxD,sBACAoR,EACAxkB,MAEFA,KAAKrF,QAAU+B,EAAc,0CAA2C,OACxEsD,KAAKrF,QAAQqC,YAAYwnB,GACzBxkB,KAAK2C,MAAM4C,UAAU4Z,UAAY,GACjCnf,KAAK2C,MAAM4C,UAAUvI,YAAYgD,KAAKrF,SACtCqF,KAAK2C,MAAMyD,mBAAkB,GAC7BpG,KAAKsiB,mBACN,CACF,GAED,CAAAniB,IAAAA,SAAAC,MAGA4F,WAAS,WACP,IAAIhG,KAAKmiB,YAAeniB,KAAKrF,QAM7B,GAFAqF,KAAKmiB,YAAa,EAEdniB,KAAKqiB,QAAUjjB,GAKnB,IAAIY,KAAKgiB,SAAShf,SAAS,gBAAiB,CAAEoC,QAASpF,OAAQ0G,iBAA/D,CAIA,IAAMge,EAAkB,WAAY1kB,KAAKrF,QAErCqF,KAAKijB,iBAaHyB,GAAkB1kB,KAAK2C,SAAW3C,KAAK2C,MAAMkC,UAAYxF,MAC3DW,KAAKoiB,YAAa,EAIjBpiB,KAAKrF,QAASgqB,SAASC,OAAM,WAAO,IAAGC,SAAQ,WAC9CC,EAAK1C,YAAa,EAClB0C,EAAKC,kBAGP/kB,KAAK+kB,cAEE/kB,KAAK2C,QAAU3C,KAAKrF,QAAQmnB,YACrC9hB,KAAK2C,MAAM4C,UAAUvI,YAAYgD,KAAKrF,QA9BvC,OANCqF,KAAK6jB,cAsCR,GAED,CAAA1jB,IAAAA,WAAAC,MAKA0F,YACM9F,KAAKgiB,SAAShf,SAAS,kBAAmB,CAAEoC,QAASpF,OAAQ0G,kBAC3D1G,KAAK2C,QAIP3C,KAAKijB,kBAAoBjjB,KAAKoiB,aAAe/iB,IAG/CW,KAAK+kB,cACI/kB,KAAK8jB,WACd9jB,KAAKmG,MAAK,GAAO,GAGfnG,KAAK2C,MAAM6C,eACbxF,KAAK2C,MAAM6C,cAAc4P,aAAa,cAAe,SAExD,GAED,CAAAjV,IAAAA,aAAAC,MAGA2F,WACE/F,KAAKgiB,SAAShf,SAAS,oBAAqB,CAAEoC,QAASpF,OACnDA,KAAK2C,OAAS3C,KAAK2C,MAAM6C,eAC3BxF,KAAK2C,MAAM6C,cAAc4P,aAAa,cAAe,OAExD,GAGD,CAAAjV,IAAAA,SAAAC,MAGAO,WACEX,KAAKmiB,YAAa,EAEdniB,KAAKgiB,SAAShf,SAAS,gBAAiB,CAAEoC,QAASpF,OAAQ0G,mBAI3D1G,KAAKrF,SAAWqF,KAAKrF,QAAQmnB,YAC/B9hB,KAAKrF,QAAQgG,SAGXX,KAAKoH,aAAepH,KAAKoH,YAAYzM,SACvCqF,KAAKoH,YAAYzM,QAAQgG,SAE5B,GAED,CAAAR,IAAAA,cAAAC,MAGA2kB,WACO/kB,KAAKmiB,aAINniB,KAAKgiB,SAAShf,SAAS,qBAAsB,CAAEoC,QAASpF,OAAQ0G,mBAKhE1G,KAAK2C,OAAS3C,KAAKrF,UAAYqF,KAAKrF,QAAQmnB,YAC9C9hB,KAAK2C,MAAM4C,UAAUvI,YAAYgD,KAAKrF,SAGpCqF,KAAKqiB,QAAUjjB,GAAqBY,KAAKqiB,QAAUjjB,GACrDY,KAAKsiB,qBAER,OA5fH,GCaO,SAAS0C,GAAahjB,EAAUggB,EAAU/f,GAC/C,IAEIgjB,EAFE7f,EAAU4c,EAASkD,sBAAsBljB,EAAUC,GAIjDV,EAAYygB,EAAZzgB,QAIR,GAAIA,EAAS,CACX0jB,EAAY,IAAIzhB,EAAUjC,EAASS,GAAW,GAS9C,IAAMqB,EAAcZ,EAAelB,EAN/BygB,EAASxgB,KACIwgB,EAASxgB,KAAKO,aAEdT,EAAgBC,EAASygB,GAGgBhgB,EAAUC,GACpEgjB,EAAUniB,OAAOsC,EAAQlG,MAAOkG,EAAQjG,OAAQkE,EACjD,CAWD,OATA+B,EAAQmf,WAEJU,GACF7f,EAAQ8B,iBACNxJ,KAAKynB,KAAK/f,EAAQlG,MAAQ+lB,EAAUphB,SACpCnG,KAAKynB,KAAK/f,EAAQjG,OAAS8lB,EAAUphB,UAIlCuB,CACR,CAsBA,IAEKggB,GAAN,WAIEtlB,SAAAA,EAAY0B,IAAMzB,EAAAA,EAAAA,GAAAA,KAAAA,GAChBC,KAAKwB,KAAOA,EAEZxB,KAAKqlB,MAAQ3nB,KAAKS,IAChBqD,EAAKD,QAAQ+jB,QAAQ,GAAK9jB,EAAKD,QAAQ+jB,QAAQ,GAAK,EA7E9B,GAiFxBtlB,KAAKulB,aAAe,EACrB,CA2GA,OAzGDrlB,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,aAAAC,MAKA0W,SAAWhD,GACT,IAAQtS,EAASxB,KAATwB,KAER,IAAIA,EAAKwB,SAAS,YAAY0D,iBAA9B,CAIA,IAEIyO,EAFImQ,EAAY9jB,EAAKD,QAAjB+jB,QACFzM,OAAqBvb,IAATwW,GAA6BA,GAAQ,EAIvD,IAAKqB,EAAI,EAAGA,GAAKmQ,EAAQ,GAAInQ,IAC3BnV,KAAKwlB,iBAAiBhkB,EAAKsD,WAAa+T,EAAY1D,GAAMA,IAI5D,IAAKA,EAAI,EAAGA,GAAKmQ,EAAQ,GAAInQ,IAC3BnV,KAAKwlB,iBAAiBhkB,EAAKsD,WAAa+T,GAAc1D,EAAKA,GAb5D,CAeF,GAED,CAAAhV,IAAAA,mBAAAC,MAGAolB,SAAiBC,GACf,IAAMxjB,EAAQjC,KAAKwB,KAAKsU,eAAe2P,GAEnCrgB,EAAUpF,KAAK0lB,kBAAkBzjB,GAChCmD,IAEHA,EA7DC,SAAuBnD,EAAO+f,GACnC,IAAMhgB,EAAWggB,EAAS2D,YAAY1jB,GAEtC,IAAI+f,EAAShf,SAAS,gBAAiB,CAAEf,MAAAA,EAAOD,SAAAA,IAAY0E,iBAI5D,OAAOse,GAAahjB,EAAUggB,EAAU/f,EACzC,CAqDe2jB,CAAc3jB,EAAOjC,KAAKwB,MAEhC4D,GACFpF,KAAK6lB,WAAWzgB,GAGrB,GAED,CAAAjF,IAAAA,oBAAAC,MAIAkF,SAAkB3C,GAChB,IAAIyC,EAAUpF,KAAK0lB,kBAAkB/iB,EAAMV,OAU3C,OATKmD,IAEHA,EAAUpF,KAAKwB,KAAK0jB,sBAAsBviB,EAAMS,KAAMT,EAAMV,OAC5DjC,KAAK6lB,WAAWzgB,IAIlBA,EAAQwe,SAASjhB,GAEVyC,CACR,GAED,CAAAjF,IAAAA,aAAAC,MAGAylB,SAAWzgB,GAKT,GAHApF,KAAK8lB,cAAc1gB,EAAQnD,OAC3BjC,KAAKulB,aAAatpB,KAAKmJ,GAEnBpF,KAAKulB,aAAalpB,OAAS2D,KAAKqlB,MAAO,CAEzC,IAAMU,EAAgB/lB,KAAKulB,aAAahS,WAAWyS,SAAAA,GACjD,OAAQA,EAAK7D,aAAe6D,EAAKpf,QAClC,IACD,IAAuB,IAAnBmf,EACkB/lB,KAAKulB,aAAa7R,OAAOqS,EAAe,GAAG,GACnDpf,SAEf,CACF,GAED,CAAAxG,IAAAA,gBAAAC,MAKA0lB,SAAc7jB,GACZ,IAAM8jB,EAAgB/lB,KAAKulB,aAAahS,WAAUyS,SAAAA,GAAI,OAAIA,EAAK/jB,QAAUA,CAAnD,KACC,IAAnB8jB,GACF/lB,KAAKulB,aAAa7R,OAAOqS,EAAe,EAE3C,GAED,CAAA5lB,IAAAA,oBAAAC,MAIAslB,SAAkBzjB,GAChB,OAAOjC,KAAKulB,aAAaU,MAAK7gB,SAAAA,GAAO,OAAIA,EAAQnD,QAAUA,CAApD,GACR,IAAA9B,IAAAA,UAAAC,MAEDuG,WACE3G,KAAKulB,aAAajpB,SAAQ8I,SAAAA,GAAO,OAAIA,EAAQuB,SAA7C,IACA3G,KAAKulB,aAAe,EACrB,OAxHH,GClEMW,GAAN,aAAAC,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,qCAAApmB,EAAAA,EAAAA,GAAAA,KAAAA,GAAA,wBA0KG,OA1KHG,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,cAAAC,MAMEmV,WAAc,MACR6Q,EAAW,EACTC,EAAU,QAAG,EAAArmB,KAAKuB,eAAR,aAAG+kB,EAAcD,WAE7BA,GAAc,WAAYA,EAE5BD,EAAWC,EAAWhqB,OACbgqB,GAAc,YAAaA,IAE/BA,EAAW3G,QACd2G,EAAW3G,MAAQ1f,KAAKumB,uBAAuBF,EAAWG,UAGxDH,EAAW3G,QACb0G,EAAWC,EAAW3G,MAAMrjB,SAKhC,IAAM6R,EAAQlO,KAAKgD,SAAS,WAAY,CACtCqjB,WAAAA,EACAD,SAAAA,IAEF,OAAOpmB,KAAKoT,aAAa,WAAYlF,EAAMkY,SAAUC,EACtD,GAED,CAAAlmB,IAAAA,wBAAAC,MAKA8kB,SAAsB3gB,EAAWtC,GAC/B,OAAO,IAAI8f,GAAQxd,EAAWvE,KAAMiC,EACrC,GAED,CAAA9B,IAAAA,cAAAC,MAUAulB,SAAY1jB,GAAO,MACXokB,EAAU,QAAG,EAAArmB,KAAKuB,eAAR,aAAGklB,EAAcJ,WAE7BK,EAAiB,CAAC,EAClBC,MAAMC,QAAQP,GAEhBK,EAAiBL,EAAWpkB,GACnBokB,GAAc,YAAaA,IAM/BA,EAAW3G,QACd2G,EAAW3G,MAAQ1f,KAAKumB,uBAAuBF,EAAWG,UAG5DE,EAAiBL,EAAW3G,MAAMzd,IAGpC,IAAID,EAAW0kB,EAEX1kB,aAAoB6kB,UACtB7kB,EAAWhC,KAAK8mB,sBAAsB9kB,IAKxC,IAAMkM,EAAQlO,KAAKgD,SAAS,WAAY,CACtChB,SAAUA,GAAY,CAAC,EACvBC,MAAAA,IAGF,OAAOjC,KAAKoT,aAAa,WAAYlF,EAAMlM,SAAUC,EACtD,GAED,CAAA9B,IAAAA,yBAAAC,MAOAmmB,SAAuBQ,GAAgB,QACrC,OAAI,UAAA/mB,KAAKuB,eAAL,SAAcylB,UAAd,UAA0BhnB,KAAKuB,eAA/B,OAA0B0lB,EAAcC,c5BuFzC,SAA+BC,EAAQC,GAAmC,IAAnBC,EAAS,UAAH,6CAAGtqB,SAEjEuqB,EAAW,GAEf,GAAIH,aAAkBN,QACpBS,EAAW,CAACH,QACP,GAAIA,aAAkBI,UAAYZ,MAAMC,QAAQO,GACrDG,EAAWX,MAAMa,KAAKL,OACjB,CACL,IAAMM,EAA6B,kBAAXN,EAAsBA,EAASC,EACnDK,IACFH,EAAWX,MAAMa,KAAKH,EAAOK,iBAAiBD,IAEjD,CAED,OAAOH,CACR,C4BtGYK,CACL3nB,KAAKuB,QAAQylB,SACbhnB,KAAKuB,QAAQ2lB,cACbH,IACG,GAGA,CAACA,EACT,GAED,CAAA5mB,IAAAA,wBAAAC,MAMA0mB,SAAsBnsB,GAEpB,IAAMqH,EAAW,CACfrH,QAAAA,GAGIitB,EACgB,MAApBjtB,EAAQiC,QACJjC,EACAA,EAAQktB,cAAc,KAG5B,GAAID,EAAQ,CAGV5lB,EAAS6f,IAAM+F,EAAO1D,QAAQ4D,SAAWF,EAAOG,KAE5CH,EAAO1D,QAAQ8D,aACjBhmB,EAASqhB,OAASuE,EAAO1D,QAAQ8D,YAGnChmB,EAAS9C,MAAQ0oB,EAAO1D,QAAQ+D,UAAY7D,SAASwD,EAAO1D,QAAQ+D,UAAW,IAAM,EACrFjmB,EAAS7C,OAASyoB,EAAO1D,QAAQgE,WAAa9D,SAASwD,EAAO1D,QAAQgE,WAAY,IAAM,EAGxFlmB,EAAShD,EAAIgD,EAAS9C,MACtB8C,EAAS/C,EAAI+C,EAAS7C,OAElByoB,EAAO1D,QAAQiE,WACjBnmB,EAASzB,KAAOqnB,EAAO1D,QAAQiE,UAGjC,IAEiB,EAFXC,EAAcztB,EAAQktB,cAAc,OAE1C,GAAIO,EAGFpmB,EAASghB,KAAOoF,EAAYC,YAAcD,EAAYvG,IACtD7f,EAAS4f,IAAT,UAAewG,EAAYE,aAAa,cAAxC,QAAkD,IAGhDV,EAAO1D,QAAQqE,aAAeX,EAAO1D,QAAQsE,WAC/CxmB,EAASymB,cAAe,EAE3B,CAED,OAAOzoB,KAAKoT,aAAa,cAAepR,EAAUrH,EAASitB,EAC5D,GAED,CAAAznB,IAAAA,eAAAC,MAOA4kB,SAAahjB,EAAUC,GACrB,OAAO+iB,GAAahjB,EAAUhC,KAAMiC,EACrC,OA1KH,CAA6B0e,ICGvB+H,GAAc,KAOdC,GAAN,WAIE7oB,SAAAA,EAAY0B,IAAMzB,EAAAA,EAAAA,GAAAA,KAAAA,GAChBC,KAAKwB,KAAOA,EACZxB,KAAK4oB,UAAW,EAChB5oB,KAAKmF,QAAS,EACdnF,KAAKqgB,WAAY,EACjBrgB,KAAK6oB,WAAY,EAKjB7oB,KAAK8oB,eAAYxrB,EAEjB0C,KAAK+oB,eAAgB,EAErB/oB,KAAKgpB,cAAe,EAEpBhpB,KAAKipB,qBAAsB,EAE3BjpB,KAAKkpB,mBAAoB,EAKzBlpB,KAAKmpB,kBAAe7rB,EAKpB0C,KAAKopB,qBAAkB9rB,EAKvB0C,KAAKqpB,qBAAkB/rB,EAKvB0C,KAAKspB,qBAAkBhsB,EAMvB0C,KAAKupB,kBAAejsB,EAGpB0C,KAAKwpB,aAAexpB,KAAKwpB,aAAa5Y,KAAK5Q,MAG3CwB,EAAK+O,GAAG,eAAgBvQ,KAAKwpB,aAC9B,CAyXA,OAzXAtpB,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,OAAAC,MAEDqpB,WACEzpB,KAAKwpB,eACLxpB,KAAKub,QACN,IAAApb,IAAAA,QAAAC,MAEDiL,WAAQ,WACN,KAAIrL,KAAK4oB,UAAY5oB,KAAKqgB,WAAargB,KAAK6oB,WAA5C,CAOA,IAAMlmB,EAAQ3C,KAAKwB,KAAK2H,UAExBnJ,KAAKmF,QAAS,EACdnF,KAAK6oB,WAAY,EACjB7oB,KAAKqgB,WAAY,EACjBrgB,KAAK8oB,UAAY9oB,KAAKwB,KAAKD,QAAQmoB,sBAE/B/mB,GAASA,EAAMC,cAAgBD,EAAMzD,OAASc,KAAKwB,KAAKD,QAAQooB,oBAClE3pB,KAAK8oB,UAAY,GAGnB9oB,KAAK4pB,mBACL7W,YAAW,WACT8W,EAAKtO,QACN,GAAEvb,KAAKgpB,aAAe,GAAK,EAhB3B,CAiBF,GAED,CAAA7oB,IAAAA,eAAAC,MACAopB,WAEE,GADAxpB,KAAKwB,KAAK8f,IAAI,eAAgBthB,KAAKwpB,eAC9BxpB,KAAK6oB,UAAW,CACnB,IAAMlmB,EAAQ3C,KAAKwB,KAAK2H,UACxBnJ,KAAK6oB,WAAY,EACjB7oB,KAAKqgB,WAAY,EACjBrgB,KAAK8oB,UAAY9oB,KAAKwB,KAAKD,QAAQuoB,sBAC/BnnB,GAASA,EAAM2B,WAAWT,QAAUlB,EAAMzD,OAASc,KAAKwB,KAAKD,QAAQooB,oBACvE3pB,KAAK8oB,UAAY,GAEnB9oB,KAAK4pB,kBACN,CACF,GAED,CAAAzpB,IAAAA,mBAAAC,MACAwpB,WACE,IAkCO,EAoBoE,EAtDnEpoB,EAASxB,KAATwB,KACFmB,EAAQ3C,KAAKwB,KAAK2H,UAChB5H,EAAYC,EAAZD,SAE8B,SAAlCA,EAAQwoB,uBACVxoB,EAAQyoB,iBAAkB,EAC1BhqB,KAAKupB,kBAAejsB,GACuB,SAAlCiE,EAAQwoB,uBACjBxoB,EAAQyoB,iBAAkB,EAC1BhqB,KAAK8oB,UAAY,EACjB9oB,KAAKupB,kBAAejsB,GACX0C,KAAK6oB,WAAarnB,EAAKyoB,oBAEhCjqB,KAAKupB,aAAe/nB,EAAKyoB,oBAEzBjqB,KAAKupB,aAAevpB,KAAKwB,KAAK0oB,iBAGhClqB,KAAKmpB,aAAL,OAAoBxmB,QAAAA,IAAAA,OAAAA,EAAAA,EAAOwE,wBAE3B3F,EAAKoG,WAAW8B,UAGhB1J,KAAK+oB,cAAgB9f,QAAQjJ,KAAK8oB,WAAa9oB,KAAK8oB,UAAY,IAChE9oB,KAAKmqB,aAAelhB,QAAQjJ,KAAKupB,gBAAb,OACG5mB,QADH,IACGA,OADH,EACGA,EAAOyC,QAAQud,qBACb3iB,KAAKqgB,YAAc7e,EAAKgF,WAAWC,aACvDzG,KAAKmqB,cAQRnqB,KAAKipB,oBAAL,QAA2B1nB,EAAAA,EAAQyoB,uBAAnC,UAPAhqB,KAAKipB,qBAAsB,EAEvBjpB,KAAK6oB,WAAalmB,IACpBA,EAAM2D,sBACN3D,EAAM4D,wBAQV,GAHAvG,KAAKkpB,mBAAqBlpB,KAAKipB,qBAAuBjpB,KAAKwB,KAAKD,QAAQ0I,UAAYye,GACpF1oB,KAAKopB,gBAAkBppB,KAAKipB,oBAAsBznB,EAAK7G,QAAU6G,EAAK4oB,IAEjEpqB,KAAK+oB,cAWR,OAVA/oB,KAAK8oB,UAAY,EACjB9oB,KAAKmqB,cAAe,EACpBnqB,KAAKkpB,mBAAoB,EACzBlpB,KAAKipB,qBAAsB,OACvBjpB,KAAK6oB,YACHrnB,EAAK7G,UACP6G,EAAK7G,QAAQ6D,MAAM6rB,QAAU/F,OAAOoE,KAEtClnB,EAAK2I,eAAe,KAKpBnK,KAAKmqB,cAAgBnqB,KAAKupB,cAAgBvpB,KAAKupB,aAAae,WAE9DtqB,KAAKgpB,cAAe,EACpBhpB,KAAKqpB,gBAAkBrpB,KAAKwB,KAAK+D,UACjCvF,KAAKspB,gBAAL,UAAuBtpB,KAAKwB,KAAK2H,iBAAjC,aAAuBohB,EAAqB/kB,cAExChE,EAAK+D,YACP/D,EAAK+D,UAAU/G,MAAMgsB,SAAW,SAChChpB,EAAK+D,UAAU/G,MAAMU,MAAQsC,EAAKO,aAAa3E,EAAI,OAGrD4C,KAAKgpB,cAAe,EAGlBhpB,KAAK6oB,WAEH7oB,KAAKipB,qBACHznB,EAAK7G,UACP6G,EAAK7G,QAAQ6D,MAAM6rB,QAAU/F,OAAOoE,KAEtClnB,EAAK2I,eAAe,KAEhBnK,KAAKkpB,mBAAqB1nB,EAAK4oB,KACjC5oB,EAAK4oB,GAAG5rB,MAAM6rB,QAAU/F,OAAOoE,KAE7BlnB,EAAK7G,UACP6G,EAAK7G,QAAQ6D,MAAM6rB,QAAU,MAI7BrqB,KAAKmqB,eACPnqB,KAAKyqB,yBACDzqB,KAAKmpB,eAEPnpB,KAAKmpB,aAAa3qB,MAAMksB,WAAa,YAIrC1qB,KAAKmpB,aAAa3qB,MAAM6rB,QAAU/F,OAAOoE,OAGpC1oB,KAAKqgB,YAGV7e,EAAKgF,WAAWkO,YAAY,KAC9BlT,EAAKgF,WAAWkO,YAAY,GAAG5X,GAAG0B,MAAM6W,QAAU,QAEhD7T,EAAKgF,WAAWkO,YAAY,KAC9BlT,EAAKgF,WAAWkO,YAAY,GAAG5X,GAAG0B,MAAM6W,QAAU,QAGhDrV,KAAKgpB,cACmB,IAAtBxnB,EAAKgF,WAAWpJ,IAElBoE,EAAKgF,WAAWyO,gBAChBzT,EAAKgF,WAAWK,UAIvB,GAED,CAAA1G,IAAAA,SAAAC,MACAmb,WAAS,WACHvb,KAAK6oB,WACF7oB,KAAK+oB,eACL/oB,KAAKmpB,cACyB,QAA9BnpB,KAAKmpB,aAAavsB,QAOvB,IAAI+tB,SAASC,SAAAA,GACX,I7BxGoBC,E6BwGhBC,GAAU,EACVC,GAAa,G7BzGGF,E6B0GyBG,EAAK7B,a7BzGpD,WAAY0B,EACPA,EAAIlG,SAASC,OAAM,WAAO,IAG/BiG,EAAIvH,SACCqH,QAAQC,QAAQC,GAGlB,IAAIF,SAAQ,SAACC,EAASK,GAC3BJ,EAAIrH,OAAS,kBAAMoH,EAAQC,EAA3B,EACAA,EAAInH,QAAUuH,CACf,K6B8FsEpG,SAAQ,WACvEiG,GAAU,EACLC,GACHH,GAAQ,MAGZ7X,YAAW,WACTgY,GAAa,EACTD,GACFF,GAAQ,KAET,IACH7X,WAAW6X,EAAS,IACrB,IAAE/F,SAAQ,kBAAMmG,EAAKE,WAhBtB,IAkBAlrB,KAAKkrB,WAER,GAED,CAAA/qB,IAAAA,YAAAC,MACA8qB,WAAY,QACV,UAAAlrB,KAAKwB,KAAK7G,eAAV,SAAmB6D,MAAM2sB,YAAY,6BAA8BnrB,KAAK8oB,UAAY,MAEpF9oB,KAAKwB,KAAKwB,SACRhD,KAAK6oB,UAAY,wBAA0B,yBAI7C7oB,KAAKwB,KAAKwB,SAEP,eAAiBhD,KAAK6oB,UAAY,KAAO,QAGzBra,QAAdhN,EAAAA,KAAAA,KAAK7G,eAAS6T,IAAAA,GAAAA,EAAAA,UAAUU,OAAO,mBAAoBlP,KAAK6oB,WAEzD7oB,KAAK6oB,WACH7oB,KAAKmpB,eAEPnpB,KAAKmpB,aAAa3qB,MAAM6rB,QAAU,KAEpCrqB,KAAKorB,uBACIprB,KAAKqgB,WACdrgB,KAAKqrB,wBAGFrrB,KAAK+oB,eACR/oB,KAAKsrB,sBAER,GAED,CAAAnrB,IAAAA,uBAAAC,MACAkrB,WACE,IAAQ9pB,EAASxB,KAATwB,KAgBR,GAfAxB,KAAKmF,OAASnF,KAAK6oB,UACnB7oB,KAAK4oB,SAAW5oB,KAAKqgB,UACrBrgB,KAAK6oB,WAAY,EACjB7oB,KAAKqgB,WAAY,EAEjB7e,EAAKwB,SACHhD,KAAKmF,OAAS,sBAAwB,uBAIxC3D,EAAKwB,SAEF,eAAiBhD,KAAKmF,OAAS,QAAU,WAGxCnF,KAAK4oB,SACPpnB,EAAKmF,eACA,GAAI3G,KAAKmF,OAAQ,OAClBnF,KAAKmqB,cAAgB3oB,EAAK+D,YAC5B/D,EAAK+D,UAAU/G,MAAMgsB,SAAW,UAChChpB,EAAK+D,UAAU/G,MAAMU,MAAQ,QAE/B,UAAAsC,EAAK2H,iBAAL,SAAgB5C,qBACjB,CACF,GAED,CAAApG,IAAAA,sBAAAC,MACAgrB,WACE,IAAQ5pB,EAASxB,KAATwB,KACJxB,KAAKmqB,eACHnqB,KAAKgpB,cAAgBhpB,KAAKqpB,iBAAmBrpB,KAAKspB,kBACpDtpB,KAAKurB,WAAWvrB,KAAKqpB,gBAAiB,YAAa,sBACnDrpB,KAAKurB,WAAWvrB,KAAKspB,gBAAiB,YAAa,SAGjD9nB,EAAK2H,YACP3H,EAAK2H,UAAU7C,sBACftG,KAAKurB,WACH/pB,EAAK2H,UAAU5D,UACf,YACA/D,EAAK2H,UAAUb,yBAKjBtI,KAAKkpB,mBAAqB1nB,EAAK4oB,IACjCpqB,KAAKurB,WAAW/pB,EAAK4oB,GAAI,UAAW9F,OAAO9iB,EAAKD,QAAQ0I,YAGtDjK,KAAKipB,qBAAuBznB,EAAK7G,SACnCqF,KAAKurB,WAAW/pB,EAAK7G,QAAS,UAAW,IAE5C,GAED,CAAAwF,IAAAA,wBAAAC,MACAirB,WACE,IAAQ7pB,EAASxB,KAATwB,KAEJxB,KAAKmqB,cACPnqB,KAAKyqB,wBAAuB,GAI1BzqB,KAAKkpB,mBAAqB1nB,EAAKyI,UAAY,KAAQzI,EAAK4oB,IAC1DpqB,KAAKurB,WAAW/pB,EAAK4oB,GAAI,UAAW,KAGlCpqB,KAAKipB,qBAAuBznB,EAAK7G,SACnCqF,KAAKurB,WAAW/pB,EAAK7G,QAAS,UAAW,IAE5C,GAED,CAAAwF,IAAAA,yBAAAC,MAIAqqB,SAAuBjV,GACrB,GAAKxV,KAAKupB,aAAV,CAEA,IAAQ/nB,EAASxB,KAATwB,KACA8oB,EAActqB,KAAKupB,aAAnBe,UACAnhB,EAA4B3H,EAA5B2H,UAAWpH,EAAiBP,EAAjBO,aAEnB,GAAI/B,KAAKgpB,cAAgBsB,GAAatqB,KAAKqpB,iBAAmBrpB,KAAKspB,gBAAiB,CAClF,IAAMkC,GAAoBzpB,EAAa3E,GAAK4C,KAAKupB,aAAansB,EAAIktB,EAAUltB,GAAKktB,EAAUtrB,EACrFysB,GAAoB1pB,EAAa1E,GAAK2C,KAAKupB,aAAalsB,EAAIitB,EAAUjtB,GAAKitB,EAAUrrB,EACrFysB,EAAmB3pB,EAAa3E,EAAIktB,EAAUtrB,EAC9C2sB,EAAmB5pB,EAAa1E,EAAIitB,EAAUrrB,EAGhDuW,GACFxV,KAAKurB,WACHvrB,KAAKqpB,gBACL,YACAjrB,EAAkBotB,EAAkBC,IAGtCzrB,KAAKurB,WACHvrB,KAAKspB,gBACL,YACAlrB,EAAkBstB,EAAkBC,MAGtCptB,EAAayB,KAAKqpB,gBAAiBmC,EAAkBC,GACrDltB,EAAayB,KAAKspB,gBAAiBoC,EAAkBC,GAExD,CAEGxiB,IACFlM,EAAekM,EAAUnE,IAAKslB,GAAatqB,KAAKupB,cAChDpgB,EAAUvG,cAAgB5C,KAAKupB,aAAavqB,EAAImK,EAAUjK,MACtDsW,EACFxV,KAAKurB,WAAWpiB,EAAU5D,UAAW,YAAa4D,EAAUb,uBAE5Da,EAAU5C,sBArCgB,CAwC/B,GAED,CAAApG,IAAAA,aAAAC,MAMAmrB,SAAWjrB,EAAQ3B,EAAML,GAAW,WAClC,GAAK0B,KAAK8oB,UAAV,CAKA,IAAQlhB,EAAe5H,KAAKwB,KAApBoG,WAEFgkB,EAAY,CAChBhtB,SAAUoB,KAAK8oB,UACftgB,OAAQxI,KAAKwB,KAAKD,QAAQiH,OAC1BD,WAAY,WACLX,EAAW0T,iBAAiBjf,QAC/BwvB,EAAKP,wBAGThrB,OAAAA,GAEFsrB,EAAUjtB,GAAQL,EAClBsJ,EAAWQ,gBAAgBwjB,EAf1B,MAFCtrB,EAAO9B,MAAMG,GAAQL,CAkBxB,OAhbH,GC4MMwtB,GAAiB,CACrB1f,gBAAgB,EAChByI,QAAS,GACTkJ,MAAM,EACNzQ,cAAc,EACdxD,qBAAqB,EACrB4f,sBAAuB,IACvBI,sBAAuB,IACvBphB,sBAAuB,IACvBqQ,QAAQ,EACRC,WAAW,EACXnB,WAAW,EACXQ,aAAa,EACbsR,kBAAmB,IACnB1a,yBAAyB,EACzBsR,iBAAkB,gBAClBwL,cAAe,QACfC,UAAW,kBACXlZ,gBAAiB,OACjBsM,kBAAmB,MACnBL,eAAgB,IAChB9U,UAAW,GAEXhI,MAAO,EACPwiB,SAAU,6BACVa,QAAS,CAAC,EAAG,GACb9c,OAAQ,4BAMJyjB,GAAN,aAAA9F,EAAAA,EAAAA,GAAAA,EAAAA,GAAA,iBAIErmB,SAAAA,EAAYyB,GAAS,MA8DnB,OA9DmBxB,EAAAA,EAAAA,GAAAA,KAAAA,IACnBmsB,EAAAA,EAAAA,KAAAA,OAEK3qB,QAAU2qB,EAAKC,gBAAgB5qB,GAAW,CAAC,GAOhD2qB,EAAKjY,OAAS,CAAE7W,EAAG,EAAGC,EAAG,GAMzB6uB,EAAKE,kBAAoB,CAAEhvB,EAAG,EAAGC,EAAG,GAOpC6uB,EAAKnqB,aAAe,CAAE3E,EAAG,EAAGC,EAAG,GAK/B6uB,EAAKjiB,UAAY,EACjBiiB,EAAKpnB,UAAY,EACjBonB,EAAKvW,eAAiB,EACtBuW,EAAK/mB,QAAS,EACd+mB,EAAKG,cAAe,EACpBH,EAAKI,UAAW,EAMhBJ,EAAKK,iBAAmB,CAAC,EAEzBL,EAAKjC,yBAAsB3sB,EAG3B4uB,EAAKtO,YAAStgB,EAEd4uB,EAAKvxB,aAAU2C,EAEf4uB,EAAKjT,cAAW3b,EAEhB4uB,EAAK3mB,eAAYjI,EAEjB4uB,EAAKzb,gBAAanT,EAElB4uB,EAAK/iB,eAAY7L,EAEjB4uB,EAAK1b,OAAS,IAAI3Q,EAClBqsB,EAAKtkB,WAAa,IAAIyT,EACtB6Q,EAAK1lB,WAAa,IAAI6N,GAAJ,WAClB6X,EAAK3iB,SAAW,IAAI6F,GAAJ,WAChB8c,EAAKhnB,OAAS,IAAIyjB,IAAJ,WACduD,EAAKM,SAAW,IAAI7U,GAAJ,WAChBuU,EAAK7mB,cAAgB,IAAI+f,IAAJ,WAArB,CACD,CA6dA,OA3dDllB,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAC,IAAAA,OAAAC,MACAwf,WAAO,WACL,GAAI5f,KAAKmF,QAAUnF,KAAKqsB,aACtB,OAAO,EAGTrsB,KAAKmF,QAAS,EACdnF,KAAKgD,SAAS,QACdhD,KAAKgD,SAAS,cAEdhD,KAAKysB,uBAGL,IAAIC,EAAc,aA8ElB,OA7EI1sB,KAAKuJ,SAASsG,gBAChB6c,GAAe,gBAEb1sB,KAAKuB,QAAQorB,YACfD,GAAe,IAAM1sB,KAAKuB,QAAQorB,WAEhC3sB,KAAKrF,UACPqF,KAAKrF,QAAQgC,WAAa,IAAM+vB,GAGlC1sB,KAAK8E,UAAY9E,KAAKuB,QAAQU,OAAS,EACvCjC,KAAK2V,eAAiB3V,KAAK8E,UAC3B9E,KAAKgD,SAAS,eAGdhD,KAAK4sB,YAAc,IAAI9Q,EAAY9b,OAG/BwC,OAAOqqB,MAAM7sB,KAAK8E,YACf9E,KAAK8E,UAAY,GACjB9E,KAAK8E,WAAa9E,KAAKuV,iBAC5BvV,KAAK8E,UAAY,GAGd9E,KAAKuJ,SAASsG,eAEjB7P,KAAK2R,gBAIP3R,KAAK8sB,aAEL9sB,KAAKiU,OAAO5W,EAAIqC,OAAOqtB,YAEvB/sB,KAAKusB,iBAAmBvsB,KAAK2lB,YAAY3lB,KAAK8E,WAC9C9E,KAAKgD,SAAS,cAAe,CAC3Bf,MAAOjC,KAAK8E,UACZ1B,KAAMpD,KAAKusB,iBACX5pB,WAAOrF,IAIT0C,KAAKiqB,oBAAsBjqB,KAAKkqB,iBAChClqB,KAAKgD,SAAS,iBAEdhD,KAAKuQ,GAAG,uBAAuB,WAC7B,IAAQmE,EAAgBsY,EAAKxmB,WAArBkO,YAGJA,EAAY,KACdA,EAAY,GAAG5X,GAAG0B,MAAM6W,QAAU,QAClC2X,EAAKrW,WAAWjC,EAAY,GAAIsY,EAAKloB,UAAY,IAE/C4P,EAAY,KACdA,EAAY,GAAG5X,GAAG0B,MAAM6W,QAAU,QAClC2X,EAAKrW,WAAWjC,EAAY,GAAIsY,EAAKloB,UAAY,IAGnDkoB,EAAK3mB,cAEL2mB,EAAK3nB,cAAcyR,aAEnBkW,EAAKxc,OAAOnQ,IAAIX,OAAQ,SAAUstB,EAAKC,kBAAkBrc,KAAKoc,IAC9DA,EAAKxc,OAAOnQ,IAAIX,OAAQ,SAAUstB,EAAKE,wBAAwBtc,KAAKoc,IACpEA,EAAKhqB,SAAS,aACf,IAGGhD,KAAKwG,WAAWkO,YAAY,IAC9B1U,KAAK2W,WAAW3W,KAAKwG,WAAWkO,YAAY,GAAI1U,KAAK8E,WAEvD9E,KAAKgD,SAAS,UAEdhD,KAAKkF,OAAOukB,OAEZzpB,KAAKgD,SAAS,cAEP,CACR,GAED,CAAA7C,IAAAA,iBAAAC,MAOA0V,SAAe7T,GACb,IAAM2T,EAAY5V,KAAKuV,cAYvB,OAVIvV,KAAKuB,QAAQwc,OACX9b,EAAQ2T,EAAY,IACtB3T,GAAS2T,GAGP3T,EAAQ,IACVA,GAAS2T,IAIN5X,EAAMiE,EAAO,EAAG2T,EAAY,EACpC,IAAAzV,IAAAA,cAAAC,MAEDiG,WACErG,KAAKwG,WAAWkO,YAAYpY,SAASyY,SAAAA,GAAe,MAClD,UAAAA,EAAWpS,aAAX,SAAkB0D,gBAErB,GAED,CAAAlG,IAAAA,OAAAC,MAIA+sB,SAAKlrB,GACHjC,KAAKwG,WAAWkE,YACd1K,KAAK8V,eAAe7T,GAASjC,KAAK2V,eAErC,GAED,CAAAxV,IAAAA,OAAAC,MAGAgtB,WACEptB,KAAKmtB,KAAKntB,KAAK2V,eAAiB,EACjC,GAED,CAAAxV,IAAAA,OAAAC,MAGAitB,WACErtB,KAAKmtB,KAAKntB,KAAK2V,eAAiB,EACjC,GAED,CAAAxV,IAAAA,SAAAC,MAKAkH,WAAgB,QACd,UAAAtH,KAAKmJ,iBAAL,aAAgB7B,OAAhB,kBACD,GAED,CAAAnH,IAAAA,aAAAC,MAGAqI,WAAa,MACX,QAAKU,EAAAA,KAAAA,iBAAL,SAAgBV,YACjB,GAED,CAAAtI,IAAAA,QAAAC,MAIAiL,WACOrL,KAAKkF,OAAOC,SAAUnF,KAAKqsB,eAIhCrsB,KAAKqsB,cAAe,EAEpBrsB,KAAKgD,SAAS,SAEdhD,KAAKwQ,OAAO5P,YACZZ,KAAKkF,OAAOmG,QACb,GAED,CAAAlL,IAAAA,UAAAC,MAOAuG,WAAU,MACR,IAAK3G,KAAKqsB,aAGR,OAFArsB,KAAKuB,QAAQwoB,sBAAwB,YACrC/pB,KAAKqL,QAIPrL,KAAKgD,SAAS,WAEdhD,KAAK4gB,WAAa,CAAC,EAEf5gB,KAAKyQ,aACPzQ,KAAKyQ,WAAWK,YAAc,KAC9B9Q,KAAKyQ,WAAWM,WAAa,MAG/B,QAAKpW,EAAAA,KAAAA,eAAL,SAAcgG,SAEdX,KAAKwG,WAAWkO,YAAYpY,SAASyY,SAAAA,GAAe,MAClD,UAAAA,EAAWpS,aAAX,SAAkBgE,aAGpB3G,KAAKqF,cAAcsB,UACnB3G,KAAKwQ,OAAO5P,WACb,GAED,CAAAT,IAAAA,sBAAAC,MAKAktB,SAAoBC,GAAY,WAC9BvtB,KAAKqF,cAAcygB,cAAcyH,GACjCvtB,KAAKwG,WAAWkO,YAAYpY,SAAQ,SAACyY,EAAYI,GAAM,QAUtC,EATXqY,GAAiD,QAAzB,EAAD,QAAC,IAAKrkB,iBAAN,aAACskB,EAAgBxrB,aAAS,WAAK,EAAIkT,GAC1DuY,EAAK7X,YACP2X,EAAuBE,EAAK5X,eAAe0X,IAEzCA,IAAyBD,KAE3BG,EAAK/W,WAAW5B,EAAYwY,GAAY,GAG9B,IAANpY,IACFuY,EAAKvkB,UAAY4L,EAAWpS,MACVkD,QAAlB,EAAAkP,EAAWpS,aAAOkD,IAAAA,GAAAA,EAAAA,aAAY,QAKpC7F,KAAKgD,SAAS,SACf,GAGD,CAAA7C,IAAAA,aAAAC,MAOAuW,SAAWgX,EAAQ1rB,EAAO8E,GAKxB,GAJI/G,KAAK6V,YACP5T,EAAQjC,KAAK8V,eAAe7T,IAG1B0rB,EAAOhrB,MAAO,CAChB,GAAIgrB,EAAOhrB,MAAMV,QAAUA,IAAU8E,EAGnC,OAIF4mB,EAAOhrB,MAAMgE,UACbgnB,EAAOhrB,WAAQrF,CAChB,CAGD,GAAK0C,KAAK6V,aAAc5T,EAAQ,GAAKA,GAASjC,KAAKuV,eAAnD,CAIA,IAAMvT,EAAWhC,KAAK2lB,YAAY1jB,GAClC0rB,EAAOhrB,MAAQ,IAAIiC,EAAM5C,EAAUC,EAAOjC,MAGtCiC,IAAUjC,KAAK8E,YACjB9E,KAAKmJ,UAAYwkB,EAAOhrB,OAG1BgrB,EAAOhrB,MAAMqD,OAAO2nB,EAAO7wB,GAV1B,CAWF,GAED,CAAAqD,IAAAA,yBAAAC,MACAwI,WACE,MAAO,CACLxL,EAAG4C,KAAK+B,aAAa3E,EAAI,EACzBC,EAAG2C,KAAK+B,aAAa1E,EAAI,EAE5B,GAED,CAAA8C,IAAAA,aAAAC,MAMA0sB,SAAW/lB,GAIT,IAAI/G,KAAKqsB,aAAT,CASA,IAAM3qB,EAAkBJ,EAAgBtB,KAAKuB,QAASvB,OAEjD+G,GAAShJ,EAAY2D,EAAiB1B,KAAKosB,qBAOhDnvB,EAAe+C,KAAKosB,kBAAmB1qB,GAEvC1B,KAAKgD,SAAS,gBAEd/F,EAAe+C,KAAK+B,aAAc/B,KAAKosB,mBAEvCpsB,KAAKktB,0BAELltB,KAAKgD,SAAS,gBAIdhD,KAAKwG,WAAWK,OAAO7G,KAAKkF,OAAOC,SAE9BnF,KAAKssB,UAAY5sB,OAAOkuB,WAAW,sBAAsBC,SAC5D7tB,KAAK2R,gBAGP3R,KAAKgD,SAAS,UAhCb,CAiCF,GAED,CAAA7C,IAAAA,iBAAAC,MAGA+J,SAAekgB,GACbrqB,KAAKiK,UAAYvM,KAAKS,IAAIksB,EAAS,GAC/BrqB,KAAKoqB,KACPpqB,KAAKoqB,GAAG5rB,MAAM6rB,QAAU/F,OAAOtkB,KAAKiK,UAAYjK,KAAKuB,QAAQ0I,WAEhE,GAED,CAAA9J,IAAAA,gBAAAC,MAGAuR,WACsB,MAAf3R,KAAKssB,WACRtsB,KAAKssB,UAAW,EACF9d,QAAd,EAAAxO,KAAKrF,eAAS6T,IAAAA,GAAAA,EAAAA,UAAUnO,IAAI,mBAE/B,GAED,CAAAF,IAAAA,oBAAAC,MAKA6sB,WAAoB,WAClBjtB,KAAK8sB,aAOD,oBAAoBgB,KAAKpuB,OAAOJ,UAAUyuB,YAC5Chb,YAAW,WACTib,EAAKlB,eACJ,IAEN,GAED,CAAA3sB,IAAAA,0BAAAC,MAOA8sB,WACEltB,KAAKiuB,gBAAgB,EAAGvuB,OAAOqtB,YAChC,GAED,CAAA5sB,IAAAA,kBAAAC,MAIA6tB,SAAgB7wB,EAAGC,GACjB2C,KAAKiU,OAAO7W,EAAIA,EAChB4C,KAAKiU,OAAO5W,EAAIA,EAChB2C,KAAKgD,SAAS,qBACf,GAED,CAAA7C,IAAAA,uBAAAC,MAMAqsB,WAEEzsB,KAAKrF,QAAU+B,EAAc,OAAQ,OACrCsD,KAAKrF,QAAQya,aAAa,WAAY,MACtCpV,KAAKrF,QAAQya,aAAa,OAAQ,UAGlCpV,KAAKiZ,SAAWjZ,KAAKrF,QAIrBqF,KAAKoqB,GAAK1tB,EAAc,WAAY,MAAOsD,KAAKrF,SAChDqF,KAAKyQ,WAAa/T,EAAc,oBAAqB,UAAWsD,KAAKrF,SACrEqF,KAAKuF,UAAY7I,EAAc,kBAAmB,MAAOsD,KAAKyQ,YAG9DzQ,KAAKyQ,WAAW2E,aAAa,uBAAwB,YACrDpV,KAAKuF,UAAU6P,aAAa,YAAa,OACzCpV,KAAKuF,UAAU6P,aAAa,KAAM,eAElCpV,KAAKwG,WAAW0O,gBAEhBlV,KAAKgf,GAAK,IAAIO,GAAGvf,MACjBA,KAAKgf,GAAGY,QAGP5f,KAAKuB,QAAQ1E,YAAcE,SAASmxB,MAAMlxB,YAAYgD,KAAKrF,QAC7D,GAGD,CAAAwF,IAAAA,iBAAAC,MAQA8pB,WACE,OC7rBG,SAAwBjoB,EAAOD,EAAUggB,GAE9C,IAAM9T,EAAQ8T,EAAShf,SAAS,cAAe,CAC7Cf,MAAAA,EACAD,SAAAA,EACAggB,SAAAA,IAGF,GAAI9T,EAAMigB,YAER,OAAOjgB,EAAMigB,YAGf,IAEIA,EAEAC,EAJIzzB,EAAYqH,EAAZrH,QAMR,GAAIA,IAA8C,IAAnCqnB,EAASzgB,QAAQ8sB,cAAyB,CACvD,IAAMA,EAAgBrM,EAASzgB,QAAQ8sB,eAAiB,MACxDD,EAAYzzB,EAAQkzB,QAAQQ,GACxB1zB,EAA6CA,EAAQktB,cAAcwG,EACxE,CAgBD,OAdAD,EAAYpM,EAAS5O,aAAa,UAAWgb,EAAWpsB,EAAUC,MAM9DksB,EAHGnsB,EAASymB,aA1ElB,SAAmC3rB,EAAIwxB,EAAYC,GACjD,IAAMC,EAAgB1xB,EAAG2xB,wBAInBxqB,EAASuqB,EAActvB,MAAQovB,EAC/BpqB,EAASsqB,EAAcrvB,OAASovB,EAChCG,EAAgBzqB,EAASC,EAASD,EAASC,EAE3CyqB,GAAWH,EAActvB,MAAQovB,EAAaI,GAAiB,EAC/DE,GAAWJ,EAAcrvB,OAASovB,EAAcG,GAAiB,EASjEhpB,EAAS,CACbtI,EAAGoxB,EAAcK,KAAOF,EACxBtxB,EAAGmxB,EAAcM,IAAMF,EACvB5vB,EAAGsvB,EAAaI,GAYlB,OAPAhpB,EAAO4kB,UAAY,CACjBtrB,EAAGwvB,EAActvB,MACjBD,EAAGuvB,EAAcrvB,OACjB/B,EAAGuxB,EACHtxB,EAAGuxB,GAGElpB,CACR,CA0CmBqpB,CACZX,EACApsB,EAAS9C,OAAS8C,EAAShD,GAAK,EAChCgD,EAAS7C,QAAU6C,EAAS/C,GAAK,GA/FzC,SAA4BnC,GAC1B,IAAM0xB,EAAgB1xB,EAAG2xB,wBACzB,MAAO,CACLrxB,EAAGoxB,EAAcK,KACjBxxB,EAAGmxB,EAAcM,IACjB9vB,EAAGwvB,EAActvB,MAEpB,CAmFmB8vB,CAAmBZ,IAU9BpM,EAAS5O,aAAa,cAAe+a,EAAansB,EAAUC,EACpE,CDqpBUioB,CACLlqB,KAAK8E,UACL9E,KAAKmJ,UAAYnJ,KAAKmJ,UAAU/F,KAAOpD,KAAKusB,iBAC5CvsB,KAEH,GAED,CAAAG,IAAAA,UAAAC,MAIAyV,WACE,OAAQ7V,KAAKuB,QAAQwc,MAAQ/d,KAAKuV,cAAgB,CACnD,GAED,CAAApV,IAAAA,kBAAAC,MAKA+rB,SAAgB5qB,GAOd,OANI7B,OAAOkuB,WAAW,4CAA4CC,UAChEtsB,EAAQwoB,sBAAwB,OAChCxoB,EAAQmH,sBAAwB,IAI3B,kBACFojB,IACAvqB,EAEN,OAhiBH,CAAyB2kB,qCE1PzB,OARA,SAAmBpG,EAAGC,GACpB,OAAID,IAAMC,EAAU,EAEe,EAA/BD,EAAEmP,wBAAwBlP,GACrB,GAED,CACV,ECJA,OAHA,SAAsBmP,GACpB,OAAOxzB,OAAOyzB,QAAQD,GAAKE,KAAI,SAAAC,GAAA,IAAAC,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAElvB,EAAGmvB,EAAA,GAAElvB,EAAKkvB,EAAA,UAAMlvB,EAAQ,GAAHovB,OAAMrvB,EAAG,KAAAqvB,OAAIpvB,GAAUD,CAAG,IAAEgd,KAAK,IACzF,ECOA,OATA,SAAsBsS,GACpB,OAAOA,EAAKvuB,MAAM,KAAKwuB,QAAO,SAACC,EAAKC,GAClC,IAAAC,EAAqBD,EAAS1uB,MAAM,KAAI4uB,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjC1vB,EAAG2vB,EAAA,GAAE1vB,EAAK0vB,EAAA,GAIjB,OAHI3vB,IACFwvB,EAAIxvB,GAAOC,GAENuvB,CACT,GAAG,CAAC,EACN,ECAA,OANA,SAAiCF,GAC/B,IAAMP,EAAMa,GAAaN,GAGzB,cAFOP,EAAIc,WACJd,EAAIe,IACJC,GAAahB,EACtB,ECJA,OAHA,WACE,OAAOxvB,OAAOlG,SAASi2B,KAAKU,UAAU,EACxC,ECCA,OAHA,WACE,MAAO,GAAPX,OAAU9vB,OAAOlG,SAAS42B,UAAQZ,OAAG9vB,OAAOlG,SAAS62B,OACvD,ECGA,GAJ0C,SAAAZ,GACxC,IAAMa,EAAYP,GAAaN,GAC/B,OAAOxmB,QAAQqnB,EAAUN,MAAQ/mB,QAAQqnB,EAAUL,IACrD,ECEA,OANA,SAAoChuB,EAAOsuB,GACzC,OAAc,OAAVtuB,EACKA,EAEFsuB,EAAWnM,SAASmM,EAAU,IAAM,EAAI,CACjD,ECLaC,GAAU,SAAAC,IAAAtK,EAAAA,EAAAA,GAAAqK,EAAAC,GAAA,IAAAC,GAAAC,EAAAA,EAAAA,GAAAH,GACrB,SAAAA,IAAsB,IAAA1vB,EAAV8vB,EAAGx0B,UAAAC,OAAA,QAAAiB,IAAAlB,UAAA,GAAAA,UAAA,GAAG,GAOqC,OAPnC2D,EAAAA,EAAAA,GAAA,KAAAywB,IAClB1vB,EAAA4vB,EAAAvhB,KAAA,OACK0hB,QAAU,SAAHrB,OACVoB,EAAG,uKAIgD9vB,CACvD,CAAC,OAAAZ,EAAAA,EAAAA,GAAAswB,EAAA,CAToB,EASpBM,UAAAA,GAT6Bl3B,QCChC,GAD8B,SAAAm3B,GAAK,OAAIA,EAAM,GAAGC,mBAAmBnK,OAAO,ECQ1E,GANwB,SAAAkK,GACtB,GAAIE,GAAsBF,GACxB,OAAOA,EAET,MAAM,IAAIP,EACZ,ECNaU,IAAUC,EAAAA,GAAAA,eAAc,CACnCxwB,OAAQ,WAAO,EACfywB,IAAK,WAAO,EACZC,YAAa,WAAO,EACpB5H,KAAM,WAAO,EACb6H,gBAAiB,kBAAM,CAAK,ICFTC,IAAsBrxB,EAAAA,EAAAA,IACzC,SAAAqxB,EAAY/vB,IAAMzB,EAAAA,EAAAA,GAAA,KAAAwxB,GAChBvxB,KAAKwB,KAAOA,EACZxB,KAAKuQ,GAAK/O,EAAK+O,GAAGK,KAAKpP,GACvBxB,KAAKshB,IAAM9f,EAAK8f,IAAI1Q,KAAKpP,GACzBxB,KAAKgD,SAAWxB,EAAKwB,SAAS4N,KAAKpP,EACrC,ICVEgwB,GAAgC,SAAUC,EAAGl2B,GAC/C,IAAIE,EAAI,CAAC,EACT,IAAK,IAAIgC,KAAKg0B,EAAO/1B,OAAOg2B,UAAUC,eAAexiB,KAAKsiB,EAAGh0B,IAAMlC,EAAEqX,QAAQnV,GAAK,IAAGhC,EAAEgC,GAAKg0B,EAAEh0B,IAC9F,GAAS,MAALg0B,GAAqD,oBAAjC/1B,OAAOE,sBAA2C,KAAIuZ,EAAI,EAAb,IAAgB1X,EAAI/B,OAAOE,sBAAsB61B,GAAItc,EAAI1X,EAAEpB,OAAQ8Y,IAClI5Z,EAAEqX,QAAQnV,EAAE0X,IAAM,GAAKzZ,OAAOg2B,UAAUE,qBAAqBziB,KAAKsiB,EAAGh0B,EAAE0X,MAAK1Z,EAAEgC,EAAE0X,IAAMsc,EAAEh0B,EAAE0X,IADuB,CAGvH,OAAO1Z,CACT,EAuBI+F,GAAO,KAIEqwB,GAAU,SAAHxC,GAUd,IATJrI,EAAQqI,EAARrI,SACAzlB,EAAO8tB,EAAP9tB,QACAuwB,EAAOzC,EAAPyC,QACAC,EAAU1C,EAAV0C,WACIC,EAAU3C,EAAd9xB,GACA00B,EAAY5C,EAAZ4C,aACAC,EAAM7C,EAAN6C,OACAC,EAAW9C,EAAX8C,YACAC,EAAkB/C,EAAlB+C,mBAEAC,GAA0CC,EAAAA,GAAAA,UAAS,MAAKC,GAAAhD,EAAAA,EAAAA,GAAA8C,EAAA,GAAjDG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChC7S,GAAQgT,EAAAA,GAAAA,QAAO,IAAIC,KAKnBC,GAAmBF,EAAAA,GAAAA,QAAO,MAC1BjJ,GAAOoJ,EAAAA,GAAAA,cAAY,SAACC,EAAWvC,EAAUwC,EAAWx3B,GAGxD,IAAIiG,GAAJ,CAGA,IAAM2tB,EAAUxI,MAAMa,KAAK9H,EAAMsR,SACjC,GAAyB,kBAAd+B,SAAkDz1B,IAAvB6xB,EAAQ4D,KAA6B9B,GAAsB9B,EAAQ4D,KACvG,MAAM,IAAIvC,GAAW,2BAADhB,OAA4BuD,IAElD,IAAAC,EAGI7D,EAAQC,IAAI6D,IAAiBpT,MAAK,SAAAyP,EAAA4D,GAAA,IAC3BpT,GAD2ByP,EAAAA,EAAAA,GAAAD,EAAA,GAC1B,GAAV0B,QAESjR,GAFFwP,EAAAA,EAAAA,GAAA2D,EAAA,GAEG,GAAVlC,QAAO,OACFmC,GAAUrT,EAAGC,EAAE,IAAE2P,QAAO,SAACC,EAAKoB,EAAO5b,GAC1C,IAAAie,GAAA7D,EAAAA,EAAAA,GAAkBwB,EAAK,GAAhBsC,EAAGD,EAAA,GAAEE,EAAEF,EAAA,GAEVl0B,EAQEo0B,EARFp0B,MACAC,EAOEm0B,EAPFn0B,OACAo0B,EAMED,EANFC,SACAC,EAKEF,EALFE,eACApF,EAIEkF,EAJFlF,UACA5F,EAGE8K,EAHF9K,QACApjB,EAEEkuB,EAFFluB,QACI6qB,EACFqD,EADF/1B,GAEFk2B,EAAOjC,GAAO8B,EAAI,CAAC,QAAS,SAAU,WAAY,iBAAkB,YAAa,UAAW,UAAW,OAkBzG,OAjBIR,IAAcO,QAAe/1B,IAAR2yB,GAAqB3L,OAAO2L,KAASM,KAC5DZ,EAAI1tB,MAAQkT,GAEdwa,EAAI+D,OAAOz3B,KAAKP,OAAOglB,OAAOhlB,OAAOglB,OAAOhlB,OAAOglB,OAAO,CACxD1hB,EAAGwD,OAAOtD,GACVD,EAAGuD,OAAOrD,GACV0iB,IAAK0R,EACLlQ,OAAQmQ,EACRxQ,KAAMoL,EACNzzB,QAAS04B,EAAIrC,QACbvI,aAAcD,EACdpjB,QAAAA,QACa9H,IAAZ8H,EAAwB,CACzB7E,KAAM,QACJ,CAAC,QAAYjD,IAAR2yB,EAAoB,CAC3BA,IAAAA,GACE,CAAC,GAAIwD,IACF9D,CACT,GAAG,CACD+D,OAAQ,GACRzxB,MAAO8wB,GAAa,OAvCpBW,EAAMV,EAANU,OACAzxB,EAAK+wB,EAAL/wB,MAwCI0xB,EAAep4B,QAAmB+B,IAAd/B,EAAE6gB,cAAuC9e,IAAd/B,EAAE8gB,QAAwB,CAC7Ejf,EAAG7B,EAAE6gB,QACL/e,EAAG9B,EAAE8gB,SACH,KACE2F,EAAW,IAAIiK,GAAWvwB,OAAOglB,OAAO,CAC5C2F,WAAYqN,EACZzxB,MAAO2xB,GAA2B3xB,EAAOsuB,GACzCzY,kBAAmB6b,GAClBpyB,GAAW,CAAC,IACfC,GAAOwgB,EACPA,EAASzR,GAAG,mBAAmB,SAAAsjB,GAEzB,IADKC,EAAYD,EAArBzuB,QAEI0uB,EAAa1wB,KAAKgC,QACpBqtB,GAAiBsB,EAAAA,GAAAA,cAAaD,EAAa1wB,KAAKgC,QAAS0uB,EAAan5B,UAEtE83B,EAAiB,KAErB,IACAzQ,EAASzR,GAAG,SAAS,WACnBkiB,EAAiB,KACnB,IACIL,GACFpQ,EAASzR,GAAG,cAAc,WACxB,IAAI+iB,EACmB,QAAtBA,EAAKtR,EAAShD,UAAuB,IAAPsU,GAAyBA,EAAGpT,gBAAgB,CACzErmB,KAAM,kBACN+iB,UAAW,WACXsB,MAAO,EACPzB,UAAU,EACV7f,QAAS,IACT+gB,SAAU,MACVnB,KAAM,CACJQ,aAAa,EACbM,MAAO,+GACPD,UAAW,sBAGbG,OAAkC,SAAC1gB,EAAIk3B,GACrCl3B,EAAGsY,aAAa,WAAY,IAC5BtY,EAAGsY,aAAa,SAAU,UAC1BtY,EAAGsY,aAAa,MAAO,YACvB4M,EAASzR,GAAG,UAAU,WACpB,IAAI+iB,GACoC,QAAjCA,EAAKU,EAAa7qB,iBAA8B,IAAPmqB,OAAgB,EAASA,EAAGlwB,KAAKye,OAG1D/kB,EACRirB,KAAOiM,EAAa7qB,UAAU/F,KAAKye,IACpD,GACF,GAEJ,IAEEsQ,GACFnQ,EAASzR,GAAG,cAAc,WACxB,IAAI+iB,EACmB,QAAtBA,EAAKtR,EAAShD,UAAuB,IAAPsU,GAAyBA,EAAGpT,gBAAgB,CACzErmB,KAAM,kBACNqkB,MAAO,EACPzB,UAAU,EACVkB,SAAU,OAEVH,OAAkC,SAAC1gB,EAAIk3B,GAErCl3B,EAAG0B,MAAMy1B,SAAW,WACpBn3B,EAAG0B,MAAM01B,OAAS,OAClBp3B,EAAG0B,MAAMqwB,KAAO,IAChB/xB,EAAG0B,MAAM21B,MAAQ,IACjBr3B,EAAG0B,MAAM4D,QAAU,SACnBtF,EAAG0B,MAAM41B,MAAQ,yBACjBt3B,EAAG0B,MAAM61B,UAAY,SACrBv3B,EAAG0B,MAAM81B,SAAW,OACpBx3B,EAAG0B,MAAM+1B,WAAa,MACtBz3B,EAAG0B,MAAMg2B,WAAa,+CAEtBxS,EAASzR,GAAG,UAAU,WACpB,GAAKyjB,EAAa7qB,UAAlB,CAGA,IAAAsrB,EAGIT,EAAa7qB,UAAU/F,KAFzBsxB,EAAOD,EAAPC,QACA9S,EAAG6S,EAAH7S,IAGF9kB,EAAGggB,UAAY4X,GAAW9S,GAAO,EANjC,CAOF,GACF,GAEJ,IAEE+E,MAAMC,QAAQmL,IAChBA,EAAWz1B,SAAQ,SAAAq4B,GACjB3S,EAASzR,GAAG,cAAc,WACxB,IAAI+iB,EACmB,QAAtBA,EAAKtR,EAAShD,UAAuB,IAAPsU,GAAyBA,EAAGpT,gBAAgByU,EAC7E,GACF,IAEqB,oBAAZ7C,GACTA,EAAQ,IAAIP,GAAuBvP,IAET,oBAAjBiQ,GACTA,EAAajQ,GAEf,IAAM4S,EAAkB,WACtB,MAAO,CACLpO,QAAS,CACPwL,WAAAA,GAGN,EACAhQ,EAASzR,GAAG,cAAc,WACxB,IAAI+iB,EACJ,QAAmBh2B,IAAf00B,EAMJ,GAH8B6C,GAAkCC,OAWhE,IAJiC7rB,QAAwC,QAA/BqqB,EAAK5zB,OAAOq1B,QAAQ1S,aAA0B,IAAPiR,OAAgB,EAASA,EAAG9M,SAI7G,CAIA,IAAMwO,EAAUC,KACVC,EAAcJ,KACdK,EAAuBC,GAAwBF,GAC/CG,EAAwB,GAAH7F,OAAMwF,GAAOxF,OAAG2F,EAAuB,IAAH3F,OAAO2F,GAAyB,IACzFG,EAAqB,GAAH9F,OAAMwF,EAAO,KAAAxF,OAAI0F,GAGzCx1B,OAAOq1B,QAAQQ,aAAa71B,OAAOq1B,QAAQ1S,MAAOtlB,SAAS4f,MAAO0Y,GAElE31B,OAAOq1B,QAAQS,UAAUZ,IAAmB73B,SAAS4f,MAAO2Y,EAX5D,OATE51B,OAAOq1B,QAAQS,UAAUZ,IAAmB73B,SAAS4f,MAqBzD,IACAqF,EAASzR,GAAG,UAAU,WACpB,IAAI+iB,EACJ,QAAmBh2B,IAAf00B,EAAJ,CAGA,IAAM/B,GAAqC,QAA7BqD,EAAKtR,EAAS7Y,iBAA8B,IAAPmqB,OAAgB,EAASA,EAAGlwB,KAAK6sB,MAAQjO,EAASld,UAAY,EAC3GkwB,EAAUC,KACVQ,EAAWL,GAAwBN,MACnCY,EAAgBxF,GAAa,CACjCF,IAAKgC,EACL/B,IAAAA,IAEIqF,EAAqB,GAAH9F,OAAMwF,EAAO,KAAAxF,OAAIiG,EAAQ,KAAAjG,OAAIkG,GAErDh2B,OAAOq1B,QAAQQ,aAAaX,IAAmB73B,SAAS4f,MAAO2Y,EAV/D,CAWF,IACA,IAAMK,EAAgC,gBACjBr4B,IAAf00B,GAGS,OAATxwB,IACFA,GAAK6J,OAET,EACA3L,OAAOC,iBAAiB,WAAYg2B,GACpC3T,EAASzR,GAAG,WAAW,gBACFjT,IAAf00B,IACFtyB,OAAOqa,oBAAoB,WAAY4b,GAGnCd,GAAkCC,OACpCp1B,OAAOq1B,QAAQa,QAGnBp0B,GAAO,IACT,IACAwgB,EAASpC,OACa,oBAAXsS,GACTA,EAAOlQ,EApOT,CAsOF,GAAG,CAACzgB,EAASuwB,EAASC,EAAYC,EAAYC,EAAcC,EAAQC,EAAaC,KACjFyD,EAAAA,GAAAA,YAAU,WACR,OAAO,WACDr0B,IACFA,GAAK6J,OAET,CACF,GAAG,IACH,IAAMyqB,GAA4BjD,EAAAA,GAAAA,cAAY,WAC5C,QAAmBv1B,IAAf00B,GAGS,OAATxwB,GAAJ,CAGA,IAAMiuB,EAAOqF,KACb,KAAIrF,EAAKpzB,OAAS,GAAlB,CAGA,IAAM05B,EAAShG,GAAaN,GAE1BQ,EAEE8F,EAFF9F,IACAD,EACE+F,EADF/F,IAEGC,GAAQD,IAGc,IAAvBtQ,EAAMsR,QAAQ5T,KAKd6S,GAAOD,IAAQ1L,OAAO0N,IACxBvI,EAAK,KAAMwG,GAJX2C,EAAiB5B,QAAUf,EAX7B,CAJA,CAqBF,GAAG,CAACxG,EAAMuI,KACV6D,EAAAA,GAAAA,YAAU,WAIR,OAHAC,IAEAp2B,OAAOC,iBAAiB,WAAYm2B,GAC7B,WACLp2B,OAAOqa,oBAAoB,WAAY+b,EACzC,CACF,GAAG,CAACA,IACJ,IAAMn1B,GAASkyB,EAAAA,GAAAA,cAAY,SAAAQ,GACzB3T,EAAMsR,QAAQgF,OAAO3C,EACvB,GAAG,IACGjC,GAAMyB,EAAAA,GAAAA,cAAY,SAACQ,EAAKjwB,GAE5B,GADAsc,EAAMsR,QAAQI,IAAIiC,EAAKjwB,GACU,OAA7BwvB,EAAiB5B,QAArB,CAGA,IACEzzB,EACE6F,EADF7F,GAEF,GAAIA,IAAOq1B,EAAiB5B,QAI1B,OAFAvH,EAAK4J,QACLT,EAAiB5B,QAAU,MAG7B,IAAKzzB,EAAI,CAEP,IAAM0E,EAAQmiB,SAASwO,EAAiB5B,QAAS,IAAM,EACjDiF,EAAYtP,MAAMa,KAAK9H,EAAMsR,QAAQr1B,QAAQsG,GAC/Cg0B,IACFxM,EAAKwM,GACLrD,EAAiB5B,QAAU,KAE/B,CAlBA,CAmBF,GAAG,CAACvH,IACE6H,GAAkBuB,EAAAA,GAAAA,cAAY,SAAAQ,GAClC,OAAO3T,EAAMsR,QAAQkF,IAAI7C,EAC3B,GAAG,IACG8C,GAAStD,EAAAA,GAAAA,cAAY,SAAA5wB,GACzBwnB,EAAK,KAAM,KAAMxnB,EACnB,GAAG,CAACwnB,IACE2M,GAAeC,EAAAA,GAAAA,UAAQ,iBAAO,CAClC11B,OAAAA,EACAywB,IAAAA,EACAC,YAAa5H,EACbA,KAAM0M,EACN7E,gBAAAA,EACD,GAAG,CAAC3wB,EAAQywB,EAAK3H,EAAM0M,EAAQ7E,IAChC,OAAOgF,GAAAA,cAAoBpF,GAAAA,SAAkB,CAC3C9wB,MAAOg2B,GACNpP,EAAUwL,EACf,EACAX,GAAQ0E,UAAY,CAClBvP,SAAU3rB,GAAAA,IACVkG,QAASlG,GAAAA,OACTy2B,QAASz2B,GAAAA,KACT02B,WAAY12B,GAAAA,MACZkC,GAAIlC,GAAAA,UAAoB,CAACA,GAAAA,OAAkBA,GAAAA,SAC3C42B,aAAc52B,GAAAA,KACd62B,OAAQ72B,GAAAA,KACR82B,YAAa92B,GAAAA,KACb+2B,mBAAoB/2B,GAAAA,qBChYlBm2B,GAAgC,SAAUC,EAAGl2B,GAC/C,IAAIE,EAAI,CAAC,EACT,IAAK,IAAIgC,KAAKg0B,EAAO/1B,OAAOg2B,UAAUC,eAAexiB,KAAKsiB,EAAGh0B,IAAMlC,EAAEqX,QAAQnV,GAAK,IAAGhC,EAAEgC,GAAKg0B,EAAEh0B,IAC9F,GAAS,MAALg0B,GAAqD,oBAAjC/1B,OAAOE,sBAA2C,KAAIuZ,EAAI,EAAb,IAAgB1X,EAAI/B,OAAOE,sBAAsB61B,GAAItc,EAAI1X,EAAEpB,OAAQ8Y,IAClI5Z,EAAEqX,QAAQnV,EAAE0X,IAAM,GAAKzZ,OAAOg2B,UAAUE,qBAAqBziB,KAAKsiB,EAAGh0B,EAAE0X,MAAK1Z,EAAEgC,EAAE0X,IAAMsc,EAAEh0B,EAAE0X,IADuB,CAGvH,OAAO1Z,CACT,EAUa+6B,GAAO,SAAAlD,GACd,IACAtM,EACEsM,EADFtM,SAEFyP,EAAYjF,GAAO8B,EAAI,CAAC,aACpBD,GAAMX,EAAAA,GAAAA,QAAO,MACnBgE,GCPiCC,EAAAA,GAAAA,YAAWzF,IDQ1CvwB,EAAM+1B,EAAN/1B,OACAywB,EAAGsF,EAAHtF,IACAC,EAAWqF,EAAXrF,YACAC,EAAeoF,EAAfpF,gBAEIsF,GAAc/D,EAAAA,GAAAA,cAAY,SAAA/3B,GAC9Bu4B,EAAIrC,QAAUl2B,EACds2B,EAAIiC,EAAKoD,EACX,GAAG,CAACrF,GAAG5B,QAAAqH,EAAAA,GAAAA,GAAKn7B,OAAOo7B,OAAOL,MACpBhN,GAAOoJ,EAAAA,GAAAA,cAAY,SAAA3kB,GACvB,IAAKojB,EAAgB+B,GACnB,MAAM,IAAI7C,GAEZa,EAAYgC,EAAK,KAAM,KAAMnlB,EAC/B,GAAG,CAACmjB,EAAaC,IACXyF,GAAkBV,EAAAA,GAAAA,UAAQ,iBAAO,CACrChD,IAAKuD,EACLnN,KAAAA,EACD,GAAG,CAACmN,EAAanN,IAQlB,OAPAoM,EAAAA,GAAAA,YAAU,WACR,OAAO,WACe,OAAhBxC,EAAIrC,SACNrwB,EAAO0yB,EAEX,CACF,GAAG,CAAC1yB,IACGqmB,EAAS+P,EAClB,EACAP,GAAKD,UAAY,CACfvP,SAAU3rB,GAAAA,KAAAA,WACVk4B,SAAUl4B,GAAAA,OACVm4B,eAAgBn4B,GAAAA,OAChB+yB,UAAW/yB,GAAAA,OACX6D,MAAO7D,GAAAA,UAAoB,CAACA,GAAAA,OAAkBA,GAAAA,SAC9C8D,OAAQ9D,GAAAA,UAAoB,CAACA,GAAAA,OAAkBA,GAAAA,SAC/CumB,IAAKvmB,GAAAA,OACLq5B,QAASr5B,GAAAA,OACT+J,QAAS/J,GAAAA,QACTmhB,KAAMnhB,GAAAA,OACNkC,GAAIlC,GAAAA,UAAoB,CAACA,GAAAA,OAAkBA,GAAAA,SAC3CmtB,QAASntB,GAAAA","sources":["../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","js/util/util.js","js/util/dom-events.js","js/util/viewport-size.js","js/slide/pan-bounds.js","js/slide/zoom-level.js","js/slide/slide.js","js/gestures/drag-handler.js","js/gestures/zoom-handler.js","js/gestures/tap-handler.js","js/gestures/gestures.js","js/main-scroll.js","js/keyboard.js","js/util/css-animation.js","js/util/spring-easer.js","js/util/spring-animation.js","js/util/animations.js","js/scroll-wheel.js","js/ui/ui-element.js","js/ui/button-arrow.js","js/ui/button-close.js","js/ui/button-zoom.js","js/ui/loading-indicator.js","js/ui/counter-indicator.js","js/ui/ui.js","js/core/eventable.js","js/slide/placeholder.js","js/slide/content.js","js/slide/loader.js","js/core/base.js","js/opener.js","js/photoswipe.js","js/slide/get-thumb-bounds.js","../node_modules/react-photoswipe-gallery/dist/helpers/sort-nodes.js","../node_modules/react-photoswipe-gallery/dist/helpers/object-to-hash.js","../node_modules/react-photoswipe-gallery/dist/helpers/hash-to-object.js","../node_modules/react-photoswipe-gallery/dist/helpers/get-hash-without-gid-and-pid.js","../node_modules/react-photoswipe-gallery/dist/helpers/get-hash-value.js","../node_modules/react-photoswipe-gallery/dist/helpers/get-base-url.js","../node_modules/react-photoswipe-gallery/dist/helpers/hash-includes-navigation-query-params.js","../node_modules/react-photoswipe-gallery/dist/helpers/get-initial-active-slide-index.js","../node_modules/react-photoswipe-gallery/dist/no-ref-error.js","../node_modules/react-photoswipe-gallery/dist/helpers/entry-item-ref-is-element.js","../node_modules/react-photoswipe-gallery/dist/helpers/ensure-ref-passed.js","../node_modules/react-photoswipe-gallery/dist/context.js","../node_modules/react-photoswipe-gallery/dist/lightbox-stub.js","../node_modules/react-photoswipe-gallery/dist/gallery.js","../node_modules/react-photoswipe-gallery/dist/item.js","../node_modules/react-photoswipe-gallery/dist/hooks.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  /* @ts-ignore */\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document | undefined | null} target\r\n * @prop {string} type\r\n * @prop {EventListenerOrEventListenerObject} listener\r\n * @prop {boolean} [passive]\r\n */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @private\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   * @param {boolean} [unbind] Whether the event should be added or removed\r\n   * @param {boolean} [skipPool] Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\r\n    const types = type.split(' ');\r\n    types.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DOMEvents;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","import { clamp } from '../util/util.js';\r\nimport { parsePaddingOption } from '../util/viewport-size.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {Record<Axis, number>} Point */\r\n/** @typedef {'x' | 'y'} Axis */\r\n\r\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\nclass PanBounds {\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n    this.currZoomLevel = 1;\r\n    this.center = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.max = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.min = /** @type {Point} */ { x: 0, y: 0 };\r\n  }\r\n\r\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By default, it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   * @returns {number}\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\r\n\r\nexport default PanBounds;\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @typedef {_SlideData & Record<string, any>} SlideData\r\n * @typedef {Object} _SlideData\r\n * @prop {HTMLElement} [element] thumbnail element\r\n * @prop {string} [src] image URL\r\n * @prop {string} [srcset] image srcset\r\n * @prop {number} [w] image width (deprecated)\r\n * @prop {number} [h] image height (deprecated)\r\n * @prop {number} [width] image width\r\n * @prop {number} [height] image height\r\n * @prop {string} [msrc] placeholder image URL that's displayed before large image is loaded\r\n * @prop {string} [alt] image alt text\r\n * @prop {boolean} [thumbCropped] whether thumbnail is cropped client-side or not\r\n * @prop {string} [html] html content of a slide\r\n * @prop {'image' | 'html' | string} [type] slide type\r\n */\r\n\r\nimport {\r\n  createElement,\r\n  setTransform,\r\n  equalizePoints,\r\n  roundPoint,\r\n  toTransformString,\r\n  clamp,\r\n} from '../util/util.js';\r\n\r\nimport PanBounds from './pan-bounds.js';\r\nimport ZoomLevel from './zoom-level.js';\r\nimport { getPanAreaSize } from '../util/viewport-size.js';\r\n\r\n/**\r\n * Renders and allows to control a single slide\r\n */\r\nclass Slide {\r\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    /** @type {Point} */\r\n    this.panAreaSize = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.pan = { x: 0, y: 0 };\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap', 'div');\r\n    /** @type {HTMLElement | null} */\r\n    this.holderElement = null;\r\n\r\n    this.currZoomLevel = 1;\r\n    /** @type {number} */\r\n    this.width = this.content.width;\r\n    /** @type {number} */\r\n    this.height = this.content.height;\r\n    this.heavyAppended = false;\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    this.container.style.transformOrigin = '0 0';\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.load();\r\n    this.updateContentSize();\r\n    this.appendHeavy();\r\n\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load(false);\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\r\n      // allow filtering\r\n      this.calculateSize();\r\n    }\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.container.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\r\n  getPlaceholderElement() {\r\n    return this.content.placeholder?.element;\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {Point} [centerPoint]\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} [centerPoint]\r\n   */\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {Point} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\r\n   * @returns {number}\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    if (!prevZoomLevel) {\r\n      prevZoomLevel = this.zoomLevels.initial;\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   * @returns {boolean}\r\n   */\r\n  isPannable() {\r\n    return Boolean(this.width) && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   * @returns {boolean}\r\n   */\r\n  isZoomable() {\r\n    return Boolean(this.width) && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   * @private\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  /** @returns {string} */\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in the highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n","import {\r\n  equalizePoints, roundPoint, clamp\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n * @returns {number}\r\n */\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\n/**\r\n * Handles single pointer dragging\r\n */\r\nclass DragHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    /** @type {Point} */\r\n    this.startPan = { x: 0, y: 0 };\r\n  }\r\n\r\n  start() {\r\n    if (this.pswp.currSlide) {\r\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    }\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && this.pswp.options.closeOnVerticalDrag\r\n        && (currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit)\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!this.pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        this.pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        if (currSlide) {\r\n          roundPoint(currSlide.pan);\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { velocity } = this.gestures;\r\n    const { mainScroll, currSlide } = this.pswp;\r\n    let indexDiff = 0;\r\n\r\n    this.pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is visible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / this.pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched,\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if ((currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max)\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _finishPanGestureForAxis(axis) {\r\n    const { velocity } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (this.pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Increasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        this.pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = this.pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    this.pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          this.pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @returns {boolean}\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = this.pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta || !currSlide) {\r\n      return false;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (this.pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   * @returns {number}\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - (this.pswp.currSlide?.bounds.center.y ?? 0)) / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number} [customFriction] (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragHandler;\r\n","import {\r\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startPan = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startZoomPoint = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._zoomPoint = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._wasOverFitZoomLevel = false;\r\n    /** @private */\r\n    this._startZoomLevel = 1;\r\n  }\r\n\r\n  start() {\r\n    const { currSlide } = this.gestures.pswp;\r\n    if (currSlide) {\r\n      this._startZoomLevel = currSlide.currZoomLevel;\r\n      equalizePoints(this._startPan, currSlide.pan);\r\n    }\r\n\r\n    this.gestures.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial)\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   * @returns {number}\r\n   */\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean} [ignoreGesture]\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide?.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === 0) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    /** @type {number} */\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({ x: 0, y: 0 }, currSlide.pan);\r\n    let destinationPan = equalizePoints({ x: 0, y: 0 }, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ZoomHandler;\r\n","/**\r\n * @template {string} T\r\n * @template {string} P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\r\n\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n * @returns {boolean}\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\r\n}\r\n\r\n/**\r\n * Tap, double-tap handler.\r\n */\r\nclass TapHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  click(point, originalEvent) {\r\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\r\n    const optionValue = pswp.options[actionFullName];\r\n\r\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide?.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide?.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element?.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TapHandler;\r\n","import {\r\n  equalizePoints, pointsEqual, getDistanceBetween\r\n} from '../util/util.js';\r\n\r\nimport DragHandler from './drag-handler.js';\r\nimport ZoomHandler from './zoom-handler.js';\r\nimport TapHandler from './tap-handler.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\nclass Gestures {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {'x' | 'y' | null} */\r\n    this.dragAxis = null;\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    /** @type {Point} */\r\n    this.p1 = { x: 0, y: 0 }; // the first pressed pointer\r\n    /** @type {Point} */\r\n    this.p2 = { x: 0, y: 0 }; // the second pressed pointer\r\n    /** @type {Point} */\r\n    this.prevP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.prevP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._lastStartP1 = { x: 0, y: 0 };\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._intervalP1 = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @type {Point[]}\r\n     * @private\r\n     */\r\n    this._ongoingPointers = [];\r\n    /** @private */\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    /** @private */\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @private */\r\n    this._intervalTime = 0;\r\n    /** @private */\r\n    this._velocityCalculated = false;\r\n    this.isMultitouch = false;\r\n    this.isDragging = false;\r\n    this.isZooming = false;\r\n    /** @type {number | null} */\r\n    this.raf = null;\r\n    /** @type {NodeJS.Timeout | null}\r\n     * @private\r\n     */\r\n    this._tapTimer = null;\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(\r\n        pswp.scrollWrap,\r\n        'click',\r\n        /** @type EventListener */(this._onClick.bind(this))\r\n      );\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        if (pswp.scrollWrap) {\r\n          pswp.scrollWrap.ontouchmove = () => {};\r\n          pswp.scrollWrap.ontouchend = () => {};\r\n        }\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(\r\n      pswp.scrollWrap,\r\n      pref + down,\r\n      /** @type EventListener */(this.onPointerDown.bind(this))\r\n    );\r\n    events.add(window, pref + 'move', /** @type EventListener */(this.onPointerMove.bind(this)));\r\n    events.add(window, pref + up, /** @type EventListener */(this.onPointerUp.bind(this)));\r\n    if (cancelEvent) {\r\n      events.add(\r\n        pswp.scrollWrap,\r\n        cancelEvent,\r\n        /** @type EventListener */(this.onPointerUp.bind(this))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse';\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e, 'down');\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerMove(e) {\r\n    this._preventPointerEventBehaviour(e, 'move');\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @private\r\n   * @param {boolean} [force]\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   * @returns {number}\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _preventPointerEventBehaviour(e, pointerType) {\r\n    const preventPointerEvent = this.pswp.applyFilters('preventPointerEvent', true, e, pointerType);\r\n    if (preventPointerEvent) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      const pointerEvent = /** @type {PointerEvent} */ (e);\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPointer) => {\r\n        return ongoingPointer.id === pointerEvent.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, { x: 0, y: 0 }));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      const touchEvent = /** @type {TouchEvent} */ (e);\r\n\r\n      this._numActivePoints = 0;\r\n      if (touchEvent.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\r\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (touchEvent.touches.length > 1) {\r\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** update points that were used during previous rAF tick\r\n   * @private\r\n   */\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  /** update points at the start of gesture\r\n   * @private\r\n   */\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  /** @private */\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   * @returns {Point}\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    if ('pointerId' in e) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gestures;\r\n","import {\r\n  setTransform,\r\n  createElement,\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/slide.js').default} Slide */\r\n\r\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n    this.slideWidth = 0;\r\n    /** @private */\r\n    this._currPositionIndex = 0;\r\n    /** @private */\r\n    this._prevPositionIndex = 0;\r\n    /** @private */\r\n    this._containerShiftIndex = -1;\r\n\r\n    /** @type {ItemHolder[]} */\r\n    this.itemHolders = [];\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean} [resizeSlides] Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', 'div', this.pswp.container);\r\n      el.setAttribute('role', 'group');\r\n      el.setAttribute('aria-roledescription', 'slide');\r\n      el.setAttribute('aria-hidden', 'true');\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   * @returns {boolean}\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean} [animate]\r\n   * @param {number} [velocityX]\r\n   * @returns {boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    return Boolean(diff);\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   * @returns {number}\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   * @returns {boolean}\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    /** @type {ItemHolder | undefined} */\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        if (tempHolder) {\r\n          this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n          this._containerShiftIndex++;\r\n\r\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n        }\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        if (tempHolder) {\r\n          this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n          this._containerShiftIndex--;\r\n\r\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1]?.slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    if (pswp.currSlide) {\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean} [dragging]\r\n   */\r\n  moveTo(x, dragging) {\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      let newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      const delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n\r\n    if (this.pswp.container) {\r\n      setTransform(this.pswp.container, x);\r\n    }\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging: dragging ?? false });\r\n  }\r\n}\r\n\r\nexport default MainScroll;\r\n","import { specialKeyUsed } from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\r\n\r\nconst KeyboardKeyCodesMap = {\r\n  Escape: 27,\r\n  z: 90,\r\n  ArrowLeft: 37,\r\n  ArrowUp: 38,\r\n  ArrowRight: 39,\r\n  ArrowDown: 40,\r\n  Tab: 9,\r\n};\r\n\r\n/**\r\n * @template {keyof KeyboardKeyCodesMap} T\r\n * @param {T} key\r\n * @param {boolean} isKeySupported\r\n * @returns {T | number | undefined}\r\n */\r\nconst getKeyboardEventKey = (key, isKeySupported) => {\r\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\r\n};\r\n\r\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Helps trap focus within photoswipe.\r\n */\r\nclass Keyboard {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    /** @private */\r\n    this._wasFocused = false;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      if (pswp.options.trapFocus) {\r\n        // Dialog was likely opened by keyboard if initial point is not defined\r\n        if (!pswp.options.initialPointerPos) {\r\n          // focus causes layout,\r\n          // which causes lag during the animation,\r\n          // that's why we delay it until the opener transition ends\r\n          this._focusRoot();\r\n        }\r\n\r\n        pswp.events.add(\r\n          document,\r\n          'focusin',\r\n          /** @type EventListener */(this._onFocusIn.bind(this))\r\n        );\r\n      }\r\n\r\n      pswp.events.add(document, 'keydown', /** @type EventListener */(this._onKeyDown.bind(this)));\r\n    });\r\n\r\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  _focusRoot() {\r\n    if (!this._wasFocused && this.pswp.element) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    /** @type {Methods<PhotoSwipe> | undefined} */\r\n    let keydownAction;\r\n    /** @type {'x' | 'y' | undefined} */\r\n    let axis;\r\n    let isForward = false;\r\n    const isKeySupported = 'key' in e;\r\n\r\n    switch (isKeySupported ? e.key : e.keyCode) {\r\n      case getKeyboardEventKey('Escape', isKeySupported):\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case getKeyboardEventKey('z', isKeySupported):\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\r\n        axis = 'x';\r\n        break;\r\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('Tab', isKeySupported):\r\n        this._focusRoot();\r\n        break;\r\n      default:\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      // @ts-ignore\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @private\r\n   * @param {FocusEvent} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (template\r\n        && document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(/** @type {Node} */ (e.target))) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n","import { setTransitionStyle, removeTransitionStyle } from './util.js';\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/** @typedef {Object} DefaultCssAnimationProps\r\n *\r\n * @prop {HTMLElement} target\r\n * @prop {number} [duration]\r\n * @prop {string} [easing]\r\n * @prop {string} [transform]\r\n * @prop {string} [opacity]\r\n * */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\r\n\r\n/**\r\n * Runs CSS transition.\r\n */\r\nclass CSSAnimation {\r\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      onFinish = () => {},\r\n      duration = 333,\r\n      easing = DEFAULT_EASING,\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop] ?? '';\r\n\r\n    /** @private */\r\n    this._target = target;\r\n    /** @private */\r\n    this._onComplete = onComplete;\r\n    /** @private */\r\n    this._finished = false;\r\n\r\n    /** @private */\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transition won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    /** @private */\r\n    this._helperTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._helperTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n\r\n        // Safari occasionally does not emit transitionend event\r\n        // if element property was modified during the transition,\r\n        // which may be caused by resize or third party component,\r\n        // using timeout as a safety fallback\r\n        this._helperTimeout = setTimeout(() => {\r\n          this._finalizeAnimation();\r\n        }, duration + 500);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._helperTimeout) {\r\n      clearTimeout(this._helperTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default CSSAnimation;\r\n","const DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\n/**\r\n * Spring easing helper\r\n */\r\nclass SpringEaser {\r\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} [dampingRatio]\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} [naturalFrequency]\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    this._dampedFrequency = this._naturalFrequency;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\r\n\r\nexport default SpringEaser;\r\n","import SpringEaser from './spring-easer.js';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/**\r\n * @typedef {Object} DefaultSpringAnimationProps\r\n *\r\n * @prop {number} start\r\n * @prop {number} end\r\n * @prop {number} velocity\r\n * @prop {number} [dampingRatio]\r\n * @prop {number} [naturalFrequency]\r\n * @prop {(end: number) => void} onUpdate\r\n */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\r\n\r\nclass SpringAnimation {\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    this._raf = 0;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish = () => {},\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = 0;\r\n  }\r\n}\r\n\r\nexport default SpringAnimation;\r\n","import CSSAnimation from './css-animation.js';\r\nimport SpringAnimation from './spring-animation.js';\r\n\r\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\r\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\r\n\r\n/** @typedef {Object} SharedAnimationProps\r\n * @prop {string} [name]\r\n * @prop {boolean} [isPan]\r\n * @prop {boolean} [isMainScroll]\r\n * @prop {VoidFunction} [onComplete]\r\n * @prop {VoidFunction} [onFinish]\r\n */\r\n\r\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\r\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\r\n\r\n/**\r\n * Manages animations\r\n */\r\nclass Animations {\r\n  constructor() {\r\n    /** @type {Animation[]} */\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  /**\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {AnimationProps} props\r\n   * @param {boolean} [isSpring]\r\n   * @returns {Animation}\r\n   */\r\n  _start(props, isSpring) {\r\n    const animation = isSpring\r\n      ? new SpringAnimation(/** @type SpringAnimationProps */ (props))\r\n      : new CSSAnimation(/** @type CssAnimationProps */ (props));\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  /**\r\n   * @param {Animation} animation\r\n   */\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Animations;\r\n","/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', /** @type EventListener */(this._onWheel.bind(this)));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollWheel;\r\n","import { createElement } from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean} [isCustomSVG]\r\n * @prop {string} inner\r\n * @prop {string} [outlineID]\r\n * @prop {number | string} [size]\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string} [className]\r\n * @prop {UIElementMarkup} [html]\r\n * @prop {boolean} [isButton]\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string} [title]\r\n * @prop {string} [ariaLabel]\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number} [order]\r\n */\r\n\r\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\r\n\r\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\r\n\r\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n * @returns {string}\r\n */\r\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  // replace all %d with size\r\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\r\n    /** @type {HTMLElement} */\r\n    const element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      if (tagName === 'button') {\r\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\r\n      }\r\n\r\n      let { title } = data;\r\n      const { ariaLabel } = data;\r\n\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        // @ts-expect-error lookup only by `data.name` maybe?\r\n        title = pswp.options[name + 'Title'];\r\n      }\r\n\r\n      if (title) {\r\n        element.title = title;\r\n      }\r\n\r\n      const ariaText = ariaLabel || title;\r\n      if (ariaText) {\r\n        element.setAttribute('aria-label', ariaText);\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          // @ts-ignore\r\n          pswp[data.onClick]();\r\n        } else if (typeof data.onClick === 'function') {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    /** @type {HTMLElement | undefined} root element by default */\r\n    let container = pswp.element;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      }\r\n    }\r\n\r\n    container?.appendChild(pswp.applyFilters('uiElement', element, data));\r\n  }\r\n}\r\n\r\nexport default UIElement;\r\n","/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean} [isNextButton]\r\n */\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  // TODO: this should point to a unique id for this instance\r\n  element.setAttribute('aria-controls', 'pswp__items');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\r\n\r\nexport default closeButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\r\n\r\nexport default zoomButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    /** @type {boolean | undefined} */\r\n    let isVisible;\r\n    /** @type {NodeJS.Timeout | null} */\r\n    let delayTimeout = null;\r\n\r\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} visible\r\n     */\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide?.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(Boolean(pswp.currSlide?.content.isLoading()));\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    if (pswp.ui) {\r\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n    }\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\r\n","import UIElement from './ui-element.js';\r\nimport { arrowPrev, arrowNext } from './button-arrow.js';\r\nimport closeButton from './button-close.js';\r\nimport zoomButton from './button-zoom.js';\r\nimport { loadingIndicator } from './loading-indicator.js';\r\nimport { counterIndicator } from './counter-indicator.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n\r\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default, it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\r\n}\r\n\r\nclass UI {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isRegistered = false;\r\n    /** @type {UIElementData[]} */\r\n    this.uiElementsData = [];\r\n    /** @type {(UIElement | UIElementData)[]} */\r\n    this.items = [];\r\n    /** @type {() => void} */\r\n    this.updatePreloaderVisibility = () => {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\r\n    this._lastUpdatedZoomLevel = undefined;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element?.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   *\r\n   * @private\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n\r\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\r\n      return;\r\n    }\r\n\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n\r\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\r\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\r\n\r\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\r\n\r\nexport default UI;\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  setTransform,\r\n  equalizePoints,\r\n  decodeImage,\r\n  toTransformString\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\r\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\nclass Opener {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this.isOpen = false;\r\n    this.isClosing = false;\r\n    this.isOpening = false;\r\n    /**\r\n     * @private\r\n     * @type {number | false | undefined}\r\n     */\r\n    this._duration = undefined;\r\n    /** @private */\r\n    this._useAnimation = false;\r\n    /** @private */\r\n    this._croppedZoom = false;\r\n    /** @private */\r\n    this._animateRootOpacity = false;\r\n    /** @private */\r\n    this._animateBgOpacity = false;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\r\n     */\r\n    this._placeholder = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._opacityElement = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._cropContainer1 = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLElement | null | undefined }\r\n     */\r\n    this._cropContainer2 = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Bounds | undefined}\r\n     */\r\n    this._thumbBounds = undefined;\r\n\r\n\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n  }\r\n\r\n  /** @private */\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = undefined;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = undefined;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide?.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && slide?.content.usePlaceholder()\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening && slide) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity ?? false;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide?.holderElement;\r\n\r\n      if (pswp.container) {\r\n        pswp.container.style.overflow = 'hidden';\r\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n      }\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity && pswp.bg) {\r\n          pswp.bg.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = '1';\r\n        }\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.style.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = String(MIN_OPACITY);\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      if (pswp.mainScroll.itemHolders[0]) {\r\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      }\r\n      if (pswp.mainScroll.itemHolders[2]) {\r\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n      }\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve(true);\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve(true);\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _initiate() {\r\n    this.pswp.element?.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch(\r\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\r\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\r\n    );\r\n\r\n    this.pswp.element?.classList.toggle('pswp--ui-visible', this.isOpening);\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = '1';\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch(\r\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\r\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\r\n    );\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom && pswp.container) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide?.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      if (pswp.currSlide) {\r\n        pswp.currSlide.zoomAndPanToInitial();\r\n        this._animateTo(\r\n          pswp.currSlide.container,\r\n          'transform',\r\n          pswp.currSlide.getCurrentTransform()\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this._animateBgOpacity && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '1');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    // do not animate opacity if it's already at 0\r\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', '0');\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '0');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} [animate]\r\n   */\r\n  _setClosedStateZoomPan(animate) {\r\n    if (!this._thumbBounds) return;\r\n\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    if (currSlide) {\r\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n      if (animate) {\r\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n      } else {\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    /** @type {AnimationProps} */\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\r\n\r\nexport default Opener;\r\n","import {\r\n  createElement,\r\n  equalizePoints,\r\n  pointsEqual,\r\n  clamp,\r\n} from './util/util.js';\r\n\r\nimport DOMEvents from './util/dom-events.js';\r\nimport Slide from './slide/slide.js';\r\nimport Gestures from './gestures/gestures.js';\r\nimport MainScroll from './main-scroll.js';\r\n\r\nimport Keyboard from './keyboard.js';\r\nimport Animations from './util/animations.js';\r\nimport ScrollWheel from './scroll-wheel.js';\r\nimport UI from './ui/ui.js';\r\nimport { getViewportSize } from './util/viewport-size.js';\r\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\r\nimport PhotoSwipeBase from './core/base.js';\r\nimport Opener from './opener.js';\r\nimport ContentLoader from './slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\r\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\r\n\r\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\r\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\r\n/** @typedef {SlideData[]} DataSourceArray */\r\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\r\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\r\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\r\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\r\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\r\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\r\n\r\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\r\n\r\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\r\n/**\r\n * @typedef {Object} PreparedPhotoSwipeOptions\r\n *\r\n * @prop {DataSource} [dataSource]\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean} [wheelToZoom]\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding} [padding]\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} hideAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} showAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} zoomAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean} trapFocus\r\n * Trap focus within PhotoSwipe element while it's open.\r\n *\r\n * @prop {boolean} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} imageClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} bgClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} tapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} doubleTapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string} [mainClass]\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement} [appendToEl]\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string} [closeTitle]\r\n * Translating\r\n *\r\n * @prop {string} [zoomTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowNextTitle]\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean} [arrowPrev]\r\n * @prop {boolean} [arrowNext]\r\n * @prop {boolean} [zoom]\r\n * @prop {boolean} [close]\r\n * @prop {boolean} [counter]\r\n *\r\n * @prop {string} [arrowPrevSVG]\r\n * @prop {string} [arrowNextSVG]\r\n * @prop {string} [zoomSVG]\r\n * @prop {string} [closeSVG]\r\n * @prop {string} [counterSVG]\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * @prop {string} [arrowNextTitle]\r\n * @prop {string} [zoomTitle]\r\n * @prop {string} [closeTitle]\r\n * @prop {string} [counterTitle]\r\n *\r\n * @prop {ZoomLevelOption} [initialZoomLevel]\r\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\r\n * @prop {ZoomLevelOption} [maxZoomLevel]\r\n *\r\n * @prop {boolean} [mouseMovePan]\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean} [showHideOpacity]\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean} [preloadFirstSlide]\r\n * @prop {ElementProvider} [gallery]\r\n * @prop {string} [gallerySelector]\r\n * @prop {ElementProvider} [children]\r\n * @prop {string} [childSelector]\r\n * @prop {string | false} [thumbSelector]\r\n */\r\n\r\n/** @type {PreparedPhotoSwipeOptions} */\r\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  trapFocus: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\n/**\r\n * PhotoSwipe Core\r\n */\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = this._prepareOptions(options || {});\r\n\r\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.offset = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * @type {Point}\r\n     * @private\r\n     */\r\n    this._prevViewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.viewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * background (backdrop) opacity\r\n     */\r\n    this.bgOpacity = 1;\r\n    this.currIndex = 0;\r\n    this.potentialIndex = 0;\r\n    this.isOpen = false;\r\n    this.isDestroying = false;\r\n    this.hasMouse = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SlideData}\r\n     */\r\n    this._initialItemData = {};\r\n    /** @type {Bounds | undefined} */\r\n    this._initialThumbBounds = undefined;\r\n\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.topBar = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.template = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.container = undefined;\r\n    /** @type {HTMLElement | undefined} */\r\n    this.scrollWrap = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.currSlide = undefined;\r\n\r\n    this.events = new DOMEvents();\r\n    this.animations = new Animations();\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  /** @returns {boolean} */\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return false;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    if (this.element) {\r\n      this.element.className += ' ' + rootClasses;\r\n    }\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', {\r\n      index: this.currIndex,\r\n      data: this._initialItemData,\r\n      slide: undefined\r\n    });\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      const { itemHolders } = this.mainScroll;\r\n\r\n      // Add content to the previous and next slide\r\n      if (itemHolders[0]) {\r\n        itemHolders[0].el.style.display = 'block';\r\n        this.setContent(itemHolders[0], this.currIndex - 1);\r\n      }\r\n      if (itemHolders[2]) {\r\n        itemHolders[2].el.style.display = 'block';\r\n        this.setContent(itemHolders[2], this.currIndex + 1);\r\n      }\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    if (this.mainScroll.itemHolders[1]) {\r\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    }\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   * @returns {number}\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    return clamp(index, 0, numSlides - 1);\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.appendHeavy();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide?.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide?.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this._listeners = {};\r\n\r\n    if (this.scrollWrap) {\r\n      this.scrollWrap.ontouchmove = null;\r\n      this.scrollWrap.ontouchend = null;\r\n    }\r\n\r\n    this.element?.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.destroy();\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = (this.currSlide?.index ?? 0) - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide?.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean} [force] If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = undefined;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  /** @returns {Point} */\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  /**\r\n   * @param {number} opacity\r\n   */\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    if (this.bg) {\r\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element?.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp', 'div');\r\n    this.element.setAttribute('tabindex', '-1');\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', 'div', this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\r\n    this.container = createElement('pswp__container', 'div', this.scrollWrap);\r\n\r\n    // aria pattern: carousel\r\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\r\n    this.container.setAttribute('aria-live', 'off');\r\n    this.container.setAttribute('id', 'pswp__items');\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   *\r\n   * @returns {Bounds | undefined}\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continuous loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PhotoSwipeOptions} options\r\n   * @returns {PreparedPhotoSwipeOptions}\r\n   */\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    /** @type {PreparedPhotoSwipeOptions} */\r\n    return {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n\r\nexport default PhotoSwipe;\r\n","/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns Bounds\r\n */\r\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n * @returns Bounds\r\n */\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\r\nexport function getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  // @ts-expect-error\r\n  if (event.thumbBounds) {\r\n    // @ts-expect-error\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  /** @type {Bounds | undefined} */\r\n  let thumbBounds;\r\n  /** @type {HTMLElement | null | undefined} */\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : /** @type {HTMLElement | null} */ (element.querySelector(thumbSelector));\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.width || itemData.w || 0,\r\n        itemData.height || itemData.h || 0\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\r\n","function sortNodes(a, b) {\n  if (a === b) return 0;\n  // eslint-disable-next-line no-bitwise\n  if (a.compareDocumentPosition(b) & 2) {\n    return 1;\n  }\n  return -1;\n}\nexport default sortNodes;","function objectToHash(obj) {\n  return Object.entries(obj).map(([key, value]) => value ? `${key}=${value}` : key).join('&');\n}\nexport default objectToHash;","function hashToObject(hash) {\n  return hash.split('&').reduce((acc, keyValue) => {\n    const [key, value] = keyValue.split('=');\n    if (key) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\nexport default hashToObject;","import hashToObject from \"./hash-to-object.js\";\nimport objectToHash from \"./object-to-hash.js\";\nfunction getHashWithoutGidAndPid(hash) {\n  const obj = hashToObject(hash);\n  delete obj.gid;\n  delete obj.pid;\n  return objectToHash(obj);\n}\nexport default getHashWithoutGidAndPid;","function getHashValue() {\n  return window.location.hash.substring(1);\n}\nexport default getHashValue;","function getBaseUrl() {\n  return `${window.location.pathname}${window.location.search}`;\n}\nexport default getBaseUrl;","import hashToObject from \"./hash-to-object.js\";\nconst hashIncludesNavigationQueryParams = hash => {\n  const hashParts = hashToObject(hash);\n  return Boolean(hashParts.gid) && Boolean(hashParts.pid);\n};\nexport default hashIncludesNavigationQueryParams;","function getInitialActiveSlideIndex(index, targetId) {\n  if (index !== null) {\n    return index;\n  }\n  return targetId ? parseInt(targetId, 10) - 1 : 0;\n}\nexport default getInitialActiveSlideIndex;","export class NoRefError extends Error {\n  constructor(msg = '') {\n    super();\n    this.message = `\n    ${msg}\n    No valid \\`ref\\` provided.\n    You should use \\`ref\\` from render prop of Item component.\n    Example:\n    <Item>{({ ref }) => <div ref={ref}></div>}</Item>\\n`;\n  }\n}","const entryItemRefIsElement = entry => entry[0].current instanceof Element;\nexport default entryItemRefIsElement;","import { NoRefError } from \"../no-ref-error.js\";\nimport entryItemRefIsElement from \"./entry-item-ref-is-element.js\";\nconst ensureRefPassed = entry => {\n  if (entryItemRefIsElement(entry)) {\n    return entry;\n  }\n  throw new NoRefError();\n};\nexport default ensureRefPassed;","import { createContext } from 'react';\nexport const Context = createContext({\n  remove: () => {},\n  set: () => {},\n  handleClick: () => {},\n  open: () => {},\n  isRefRegistered: () => false\n});","/**\n * The purpose of this class is to emulate the behavior of the PhotoSwipeLightbox\n * to provide the ability to use plugins\n */\nexport default class PhotoSwipeLightboxStub {\n  constructor(pswp) {\n    this.pswp = pswp;\n    this.on = pswp.on.bind(pswp);\n    this.off = pswp.off.bind(pswp);\n    this.dispatch = pswp.dispatch.bind(pswp);\n  }\n}","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport PhotoSwipe from 'photoswipe';\nimport React, { useRef, useCallback, useEffect, useMemo, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport sortNodes from \"./helpers/sort-nodes.js\";\nimport objectToHash from \"./helpers/object-to-hash.js\";\nimport hashToObject from \"./helpers/hash-to-object.js\";\nimport getHashWithoutGidAndPid from \"./helpers/get-hash-without-gid-and-pid.js\";\nimport getHashValue from \"./helpers/get-hash-value.js\";\nimport getBaseUrl from \"./helpers/get-base-url.js\";\nimport hashIncludesNavigationQueryParams from \"./helpers/hash-includes-navigation-query-params.js\";\nimport getInitialActiveSlideIndex from \"./helpers/get-initial-active-slide-index.js\";\nimport ensureRefPassed from \"./helpers/ensure-ref-passed.js\";\nimport entryItemRefIsElement from \"./helpers/entry-item-ref-is-element.js\";\nimport { Context } from \"./context.js\";\nimport PhotoSwipeLightboxStub from \"./lightbox-stub.js\";\nimport { NoRefError } from \"./no-ref-error.js\";\n/**\n * This variable stores the PhotoSwipe instance object\n * It aims to check whether does the PhotoSwipe opened at the moment\n * (analog of window.pswp in 'photoswipe/lightbox')\n */\nlet pswp = null;\n/**\n * Gallery component providing photoswipe context\n */\nexport const Gallery = ({\n  children,\n  options,\n  plugins,\n  uiElements,\n  id: galleryUID,\n  onBeforeOpen,\n  onOpen,\n  withCaption,\n  withDownloadButton\n}) => {\n  const [contentPortal, setContentPortal] = useState(null);\n  const items = useRef(new Map());\n  /**\n   * Store PID from hash if there are no items yet,\n   * but we need to open photoswipe if items appear in the next render\n   */\n  const openWhenReadyPid = useRef(null);\n  const open = useCallback((targetRef, targetId, itemIndex, e) => {\n    // only one photoswipe instance could be opened at once\n    // so if photoswipe is already open, function should do nothing\n    if (pswp) {\n      return;\n    }\n    const entries = Array.from(items.current);\n    if (typeof itemIndex === 'number' && (entries[itemIndex] === undefined || !entryItemRefIsElement(entries[itemIndex]))) {\n      throw new NoRefError(`Failed to open at index ${itemIndex}`);\n    }\n    const {\n      slides,\n      index\n    } = entries.map(ensureRefPassed).sort(([{\n      current: a\n    }], [{\n      current: b\n    }]) => sortNodes(a, b)).reduce((acc, entry, i) => {\n      const [ref, _a] = entry,\n        {\n          width,\n          height,\n          original,\n          originalSrcset,\n          thumbnail,\n          cropped,\n          content,\n          id: pid\n        } = _a,\n        rest = __rest(_a, [\"width\", \"height\", \"original\", \"originalSrcset\", \"thumbnail\", \"cropped\", \"content\", \"id\"]);\n      if (targetRef === ref || pid !== undefined && String(pid) === targetId) {\n        acc.index = i;\n      }\n      acc.slides.push(Object.assign(Object.assign(Object.assign({\n        w: Number(width),\n        h: Number(height),\n        src: original,\n        srcset: originalSrcset,\n        msrc: thumbnail,\n        element: ref.current,\n        thumbCropped: cropped,\n        content\n      }, content !== undefined ? {\n        type: 'html'\n      } : {}), pid !== undefined ? {\n        pid\n      } : {}), rest));\n      return acc;\n    }, {\n      slides: [],\n      index: itemIndex || null\n    });\n    const initialPoint = e && e.clientX !== undefined && e.clientY !== undefined ? {\n      x: e.clientX,\n      y: e.clientY\n    } : null;\n    const instance = new PhotoSwipe(Object.assign({\n      dataSource: slides,\n      index: getInitialActiveSlideIndex(index, targetId),\n      initialPointerPos: initialPoint\n    }, options || {}));\n    pswp = instance;\n    instance.on('contentActivate', ({\n      content: slideContent\n    }) => {\n      if (slideContent.data.content) {\n        setContentPortal(createPortal(slideContent.data.content, slideContent.element));\n      } else {\n        setContentPortal(null);\n      }\n    });\n    instance.on('close', () => {\n      setContentPortal(null);\n    });\n    if (withDownloadButton) {\n      instance.on('uiRegister', () => {\n        var _a;\n        (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement({\n          name: 'download-button',\n          ariaLabel: 'Download',\n          order: 8,\n          isButton: true,\n          tagName: 'a',\n          appendTo: 'bar',\n          html: {\n            isCustomSVG: true,\n            inner: '<path d=\"M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1ZM23 23H9v2h14Z\" id=\"pswp__icn-download\"/>',\n            outlineID: 'pswp__icn-download'\n          },\n          // can't test onInit callback correctly\n          onInit: /* istanbul ignore next */(el, pswpInstance) => {\n            el.setAttribute('download', '');\n            el.setAttribute('target', '_blank');\n            el.setAttribute('rel', 'noopener');\n            instance.on('change', () => {\n              var _a;\n              if (!((_a = pswpInstance.currSlide) === null || _a === void 0 ? void 0 : _a.data.src)) {\n                return;\n              }\n              const downloadButton = el;\n              downloadButton.href = pswpInstance.currSlide.data.src;\n            });\n          }\n        });\n      });\n    }\n    if (withCaption) {\n      instance.on('uiRegister', () => {\n        var _a;\n        (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement({\n          name: 'default-caption',\n          order: 9,\n          isButton: false,\n          appendTo: 'root',\n          // can't test onInit callback correctly\n          onInit: /* istanbul ignore next */(el, pswpInstance) => {\n            /* eslint-disable no-param-reassign */\n            el.style.position = 'absolute';\n            el.style.bottom = '15px';\n            el.style.left = '0';\n            el.style.right = '0';\n            el.style.padding = '0 20px';\n            el.style.color = 'var(--pswp-icon-color)';\n            el.style.textAlign = 'center';\n            el.style.fontSize = '14px';\n            el.style.lineHeight = '1.5';\n            el.style.textShadow = '1px 1px 3px var(--pswp-icon-color-secondary)';\n            /* eslint-enable no-param-reassign */\n            instance.on('change', () => {\n              if (!pswpInstance.currSlide) {\n                return;\n              }\n              const {\n                caption,\n                alt\n              } = pswpInstance.currSlide.data;\n              // eslint-disable-next-line no-param-reassign\n              el.innerHTML = caption || alt || '';\n            });\n          }\n        });\n      });\n    }\n    if (Array.isArray(uiElements)) {\n      uiElements.forEach(uiElement => {\n        instance.on('uiRegister', () => {\n          var _a;\n          (_a = instance.ui) === null || _a === void 0 ? void 0 : _a.registerElement(uiElement);\n        });\n      });\n    }\n    if (typeof plugins === 'function') {\n      plugins(new PhotoSwipeLightboxStub(instance));\n    }\n    if (typeof onBeforeOpen === 'function') {\n      onBeforeOpen(instance);\n    }\n    const getHistoryState = () => {\n      return {\n        gallery: {\n          galleryUID\n        }\n      };\n    };\n    instance.on('beforeOpen', () => {\n      var _a;\n      if (galleryUID === undefined) {\n        return;\n      }\n      const hashIncludesGidAndPid = hashIncludesNavigationQueryParams(getHashValue());\n      // was openned by react-photoswipe-gallery's open() method call (click on thumbnail, for example)\n      // we need to create new history record to store hash navigation state\n      if (!hashIncludesGidAndPid) {\n        window.history.pushState(getHistoryState(), document.title);\n        return;\n      }\n      const hasGalleryStateInHistory = Boolean((_a = window.history.state) === null || _a === void 0 ? void 0 : _a.gallery);\n      // was openned by history.forward()\n      // we do not need to create new history record for hash navigation\n      // because we already have one\n      if (hasGalleryStateInHistory) {\n        return;\n      }\n      // was openned by link with gid and pid\n      const baseUrl = getBaseUrl();\n      const currentHash = getHashValue();\n      const hashWithoutGidAndPid = getHashWithoutGidAndPid(currentHash);\n      const urlWithoutOpenedSlide = `${baseUrl}${hashWithoutGidAndPid ? `#${hashWithoutGidAndPid}` : ''}`;\n      const urlWithOpenedSlide = `${baseUrl}#${currentHash}`;\n      // firstly, we need to modify current history record - set url without gid and pid\n      // we will return to this state after photoswipe closing\n      window.history.replaceState(window.history.state, document.title, urlWithoutOpenedSlide);\n      // then we need to create new history record to store hash navigation state\n      window.history.pushState(getHistoryState(), document.title, urlWithOpenedSlide);\n    });\n    instance.on('change', () => {\n      var _a;\n      if (galleryUID === undefined) {\n        return;\n      }\n      const pid = ((_a = instance.currSlide) === null || _a === void 0 ? void 0 : _a.data.pid) || instance.currIndex + 1;\n      const baseUrl = getBaseUrl();\n      const baseHash = getHashWithoutGidAndPid(getHashValue());\n      const gidAndPidHash = objectToHash({\n        gid: galleryUID,\n        pid\n      });\n      const urlWithOpenedSlide = `${baseUrl}#${baseHash}&${gidAndPidHash}`;\n      // updates in current history record hash value with actual pid\n      window.history.replaceState(getHistoryState(), document.title, urlWithOpenedSlide);\n    });\n    const closeGalleryOnHistoryPopState = () => {\n      if (galleryUID === undefined) {\n        return;\n      }\n      if (pswp !== null) {\n        pswp.close();\n      }\n    };\n    window.addEventListener('popstate', closeGalleryOnHistoryPopState);\n    instance.on('destroy', () => {\n      if (galleryUID !== undefined) {\n        window.removeEventListener('popstate', closeGalleryOnHistoryPopState);\n        // if hash includes gid and pid => this destroy was called with ordinary instance.close() call\n        // if not => destroy was called by history.back (browser's back button) => history has been already returned to previous state\n        if (hashIncludesNavigationQueryParams(getHashValue())) {\n          window.history.back();\n        }\n      }\n      pswp = null;\n    });\n    instance.init();\n    if (typeof onOpen === 'function') {\n      onOpen(instance);\n    }\n  }, [options, plugins, uiElements, galleryUID, onBeforeOpen, onOpen, withCaption, withDownloadButton]);\n  useEffect(() => {\n    return () => {\n      if (pswp) {\n        pswp.close();\n      }\n    };\n  }, []);\n  const openGalleryBasedOnUrlHash = useCallback(() => {\n    if (galleryUID === undefined) {\n      return;\n    }\n    if (pswp !== null) {\n      return;\n    }\n    const hash = getHashValue();\n    if (hash.length < 5) {\n      return;\n    }\n    const params = hashToObject(hash);\n    const {\n      pid,\n      gid\n    } = params;\n    if (!pid || !gid) {\n      return;\n    }\n    if (items.current.size === 0) {\n      // no items currently, save PID from hash for future use\n      openWhenReadyPid.current = pid;\n      return;\n    }\n    if (pid && gid === String(galleryUID)) {\n      open(null, pid);\n    }\n  }, [open, galleryUID]);\n  useEffect(() => {\n    openGalleryBasedOnUrlHash();\n    // needed for case when gallery was firstly opened, then was closed and user clicked on browser's forward button\n    window.addEventListener('popstate', openGalleryBasedOnUrlHash);\n    return () => {\n      window.removeEventListener('popstate', openGalleryBasedOnUrlHash);\n    };\n  }, [openGalleryBasedOnUrlHash]);\n  const remove = useCallback(ref => {\n    items.current.delete(ref);\n  }, []);\n  const set = useCallback((ref, data) => {\n    items.current.set(ref, data);\n    if (openWhenReadyPid.current === null) {\n      return;\n    }\n    const {\n      id\n    } = data;\n    if (id === openWhenReadyPid.current) {\n      // user provided `id` prop of Item component\n      open(ref);\n      openWhenReadyPid.current = null;\n      return;\n    }\n    if (!id) {\n      // in this case we using index of item as PID\n      const index = parseInt(openWhenReadyPid.current, 10) - 1;\n      const refToOpen = Array.from(items.current.keys())[index];\n      if (refToOpen) {\n        open(refToOpen);\n        openWhenReadyPid.current = null;\n      }\n    }\n  }, [open]);\n  const isRefRegistered = useCallback(ref => {\n    return items.current.has(ref);\n  }, []);\n  const openAt = useCallback(index => {\n    open(null, null, index);\n  }, [open]);\n  const contextValue = useMemo(() => ({\n    remove,\n    set,\n    handleClick: open,\n    open: openAt,\n    isRefRegistered\n  }), [remove, set, open, openAt, isRefRegistered]);\n  return React.createElement(Context.Provider, {\n    value: contextValue\n  }, children, contentPortal);\n};\nGallery.propTypes = {\n  children: PropTypes.any,\n  options: PropTypes.object,\n  plugins: PropTypes.func,\n  uiElements: PropTypes.array,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onBeforeOpen: PropTypes.func,\n  onOpen: PropTypes.func,\n  withCaption: PropTypes.bool,\n  withDownloadButton: PropTypes.bool\n};","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useRef, useEffect, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useApiContext } from \"./hooks.js\";\nimport { NoRefError } from \"./no-ref-error.js\";\n/**\n * Gallery item\n *\n * Should be a children of Gallery component\n */\nexport const Item = _a => {\n  var {\n      children\n    } = _a,\n    restProps = __rest(_a, [\"children\"]);\n  const ref = useRef(null);\n  const {\n    remove,\n    set,\n    handleClick,\n    isRefRegistered\n  } = useApiContext();\n  const refCallback = useCallback(node => {\n    ref.current = node;\n    set(ref, restProps);\n  }, [set, ...Object.values(restProps)]);\n  const open = useCallback(event => {\n    if (!isRefRegistered(ref)) {\n      throw new NoRefError();\n    }\n    handleClick(ref, null, null, event);\n  }, [handleClick, isRefRegistered]);\n  const childrenFnProps = useMemo(() => ({\n    ref: refCallback,\n    open\n  }), [refCallback, open]);\n  useEffect(() => {\n    return () => {\n      if (ref.current === null) {\n        remove(ref);\n      }\n    };\n  }, [remove]);\n  return children(childrenFnProps);\n};\nItem.propTypes = {\n  children: PropTypes.func.isRequired,\n  original: PropTypes.string,\n  originalSrcset: PropTypes.string,\n  thumbnail: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  alt: PropTypes.string,\n  caption: PropTypes.string,\n  content: PropTypes.element,\n  html: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  cropped: PropTypes.bool\n};","import { useContext } from 'react';\nimport { Context } from \"./context.js\";\n/**\n * A hook that gives you access to provided methods for more advanced usage\n */\nexport const useGallery = () => {\n  const {\n    open\n  } = useContext(Context);\n  return {\n    /**\n     * Function that opens the gallery at the provided index\n     */\n    open\n  };\n};\nexport const useApiContext = () => useContext(Context);"],"names":["ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","createElement","className","tagName","appendToEl","el","document","appendChild","equalizePoints","p1","p2","x","y","undefined","id","roundPoint","p","Math","round","getDistanceBetween","abs","sqrt","pointsEqual","clamp","val","min","max","toTransformString","scale","propValue","setTransform","style","transform","setTransitionStyle","prop","duration","ease","transition","setWidthHeight","w","h","width","height","LOAD_STATE","isSafari","navigator","vendor","match","supportsPassive","window","addEventListener","get","DOMEvents","constructor","_classCallCheck","this","_pool","_createClass","key","value","add","target","type","listener","passive","_toggleListener","remove","removeAll","poolItem","_this","unbind","skipPool","methodName","split","eType","_this2","eventOptions","getViewportSize","options","pswp","getViewportSizeFn","newViewportSize","documentElement","clientWidth","innerHeight","parsePaddingOption","viewportSize","itemData","index","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","Number","getPanAreaSize","PanBounds","slide","currZoomLevel","center","update","_updateAxis","dispatch","reset","axis","elSize","data","panAreaSize","correctPan","panOffset","ZoomLevel","elementSize","fit","fill","vFill","initial","secondary","maxWidth","maxHeight","hRatio","vRatio","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","Slide","isActive","currIndex","currentResolution","pan","isFirstSlide","opener","isOpen","content","contentLoader","getContentBySlide","container","holderElement","heavyAppended","bounds","prevDisplayedWidth","prevDisplayedHeight","setIsActive","activate","deactivate","append","transformOrigin","calculateSize","load","updateContentSize","appendHeavy","zoomAndPanToInitial","applyCurrentZoomPan","mainScroll","isShifted","defaultPrevented","destroy","hasSlide","resize","panTo","force","scaleMultiplier","sizeChanged","setDisplayedSize","getPlaceholderElement","placeholder","_this$content$placeho","zoomTo","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","isZoomable","animations","stopAllPan","prevZoomLevel","setZoomLevel","calculateZoomToPanOffset","finishTransition","_this3","_setResolution","startTransition","isPan","getCurrentTransform","onComplete","easing","toggleZoom","zoomAnimationDuration","point","getViewportCenterPoint","zoomFactor","panX","panY","isPannable","Boolean","_applyZoomTransform","currSlide","zoom","newResolution","DragHandler","gestures","startPan","start","stopAll","change","prevP1","dragAxis","closeOnVerticalDrag","isMultitouch","_setPanWithFriction","bgOpacity","_getVerticalDragRatio","applyBgOpacity","_panOrMoveMainScroll","end","velocity","indexDiff","currentSlideVisibilityRatio","getCurrSlideX","moveIndexBy","correctZoomPan","_finishPanGestureForAxis","panPos","restoreBgOpacity","projectedPosition","initialVelocity","decelerationRate","project","vDragRatio","projectedVDragRatio","close","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","startSpring","onUpdate","pos","_this4","animationProgressRatio","floor","delta","newMainScrollX","moveTo","newPan","allowPanToNext","currSlideMainScrollX","mainScrollShiftDiff","isLeftToRight","isRightToLeft","potentialPan","customFriction","getZoomPointsCenter","ZoomHandler","_startPan","_startZoomPoint","_zoomPoint","_wasOverFitZoomLevel","_startZoomLevel","startP1","startP2","minZoomLevel","maxZoomLevel","pinchToClose","_calculatePanForZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","naturalFrequency","now","newZoomLevel","didTapOnMainContent","event","closest","TapHandler","click","originalEvent","targetClassList","classList","isImageClick","contains","isBackgroundClick","_doClickOrTapAction","tap","doubleTap","actionName","actionFullName","clickToCloseNonZoomable","toggle","call","Gestures","prevP2","_lastStartP1","_intervalP1","_numActivePoints","_ongoingPointers","_touchEventEnabled","_pointerEventEnabled","PointerEvent","supportsTouch","maxTouchPoints","_intervalTime","_velocityCalculated","isDragging","isZooming","raf","_tapTimer","drag","tapHandler","on","events","scrollWrap","_this5","_onClick","bind","_bindEvents","ontouchmove","ontouchend","pref","down","up","cancel","cancelEvent","onPointerDown","onPointerMove","onPointerUp","isMousePointer","pointerType","button","mouseDetected","_preventPointerEventBehaviour","_updatePoints","_clearTapTimer","preventDefault","_finishDrag","_updateStartPoints","_rafStopLoop","_rafRenderLoop","_calculateDragDirection","Date","_updateVelocity","_finishTap","_updatePrevPoints","requestAnimationFrame","time","_getVelocity","indexOf","tapDelay","doubleTapAction","setTimeout","_this6","clearTimeout","displacement","cancelAnimationFrame","applyFilters","pointerEvent","pointerIndex","findIndex","ongoingPointer","pointerId","splice","_convertEventPosToPoint","touchEvent","touches","diff","axisToCheck","pageX","offset","pageY","identifier","stopPropagation","MainScroll","slideWidth","_currPositionIndex","_prevPositionIndex","_containerShiftIndex","itemHolders","resizeSlides","newSlideWidth","spacing","slideWidthChanged","itemHolder","_this7","resetPosition","appendHolders","i","setAttribute","display","canBeSwiped","getNumItems","animate","velocityX","newIndex","potentialIndex","numSlides","canLoop","getLoopedIndex","distance","stopMainScroll","destinationX","isMainScroll","_this8","updateCurrItem","currDiff","currDistance","positionDifference","tempHolder","diffAbs","shift","setContent","pop","unshift","updateLazy","dragging","newSlideIndexOffset","KeyboardKeyCodesMap","Escape","z","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Tab","getKeyboardEventKey","isKeySupported","Keyboard","_wasFocused","trapFocus","initialPointerPos","_this9","_focusRoot","_onFocusIn","_onKeyDown","lastActiveElement","activeElement","returnFocus","focus","ctrlKey","metaKey","altKey","shiftKey","specialKeyUsed","keydownAction","isForward","keyCode","escKey","arrowKeys","template","CSSAnimation","_props$onFinish","onFinish","_props$duration","_props$easing","DEFAULT_EASING","_target","_onComplete","_finished","_onTransitionEnd","_helperTimeout","_this10","_finalizeAnimation","removeEventListener","SpringEaser","_dampingRatio","_naturalFrequency","_dampedFrequency","easeFrame","deltaPosition","deltaTime","coeff","naturalDumpingPow","E","dumpedFCos","cos","dumpedFSin","sin","SpringAnimation","_raf","_props$onFinish2","easer","prevTime","animationLoop","_this11","Animations","activeAnimations","_start","isSpring","animation","_this12","stop","isPanRunning","some","ScrollWheel","_onWheel","deltaX","deltaY","wheelToZoom","deltaMode","clientX","clientY","UIElement","elementHTML","html","isButton","toLowerCase","title","ariaLabel","ariaText","innerHTML","htmlData","isCustomSVG","svgData","out","join","size","outlineID","inner","addElementHTML","onInit","onClick","onclick","appendTo","topBar","initArrowButton","isNextButton","loop","disabled","arrowPrev","order","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","setIndicatorVisibility","visible","updatePreloaderVisibility","_pswp$currSlide","isLoading","preloaderDelay","ui","counterIndicator","counterElement","innerText","indexIndicatorSep","setZoomedIn","isZoomedIn","UI","isRegistered","uiElementsData","items","_lastUpdatedZoomLevel","init","sort","a","b","uiElementData","_this13","registerElement","_onZoomPanUpdate","elementData","isClosing","currZoomLevelDiff","imageClickAction","PhotoSwipeEvent","details","assign","Eventable","_listeners","_filters","addFilter","fn","priority","f1","f2","removeFilter","args","_this14","off","_this15","Placeholder","imageSrc","imgEl","decoding","alt","src","parentNode","Content","instance","displayedImageWidth","displayedImageHeight","isAttached","isDecoding","state","removePlaceholder","keepPlaceholder","_this16","isLazy","reload","usePlaceholder","placeholderEl","parentElement","prepend","placeholderSrc","msrc","isImageContent","loadImage","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onload","_this17","onerror","onError","setSlide","displayError","isError","isInitialSizeUpdate","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","errorMsgEl","errorMsg","supportsDecode","decode","catch","finally","_this18","appendImage","lazyLoadData","zoomLevel","createContentFromData","ceil","ContentLoader","limit","preload","_cachedItems","loadSlideByIndex","initialIndex","getContentByIndex","getItemData","lazyLoadSlide","addToCache","removeByIndex","indexToRemove","item","find","PhotoSwipeBase","_inherits","numItems","dataSource","_this$options","_getGalleryDOMElements","gallery","_this$options2","dataSourceItem","Array","isArray","Element","_domElementToItemData","galleryElement","children","_this$options4","childSelector","option","legacySelector","parent","elements","NodeList","from","selector","querySelectorAll","getElementsFromOption","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","MIN_OPACITY","Opener","isClosed","isOpening","_duration","_useAnimation","_croppedZoom","_animateRootOpacity","_animateBgOpacity","_placeholder","_opacityElement","_cropContainer1","_cropContainer2","_thumbBounds","_prepareOpen","open","hideAnimationDuration","maxWidthToAnimate","_applyStartProps","_this19","showAnimationDuration","showHideAnimationType","showHideOpacity","_initialThumbBounds","getThumbBounds","_animateZoom","bg","opacity","innerRect","_this$pswp$currSlide","overflow","_setClosedStateZoomPan","willChange","Promise","resolve","img","decoded","isDelaying","_this20","reject","_initiate","setProperty","_animateToOpenState","_animateToClosedState","_onAnimationComplete","_animateTo","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","animProps","_this21","defaultOptions","bgClickAction","tapAction","PhotoSwipe","_this22","_prepareOptions","_prevViewportSize","isDestroying","hasMouse","_initialItemData","keyboard","_createMainStructure","rootClasses","mainClass","scrollWheel","isNaN","updateSize","pageYOffset","_this23","_handlePageResize","_updatePageScrollOffset","goTo","next","prev","refreshSlideContent","slideIndex","potentialHolderIndex","_this$currSlide3","_this24","holder","matchMedia","matches","test","userAgent","_this25","setScrollOffset","body","thumbBounds","thumbnail","thumbSelector","imageWidth","imageHeight","thumbAreaRect","getBoundingClientRect","fillZoomLevel","offsetX","offsetY","left","top","getCroppedBoundsByElement","getBoundsByElement","compareDocumentPosition","obj","entries","map","_ref","_ref2","_slicedToArray","concat","hash","reduce","acc","keyValue","_keyValue$split","_keyValue$split2","hashToObject","gid","pid","objectToHash","substring","pathname","search","hashParts","targetId","NoRefError","_Error","_super","_createSuper","msg","message","_wrapNativeSuper","entry","current","entryItemRefIsElement","Context","createContext","set","handleClick","isRefRegistered","PhotoSwipeLightboxStub","__rest","s","prototype","hasOwnProperty","propertyIsEnumerable","Gallery","plugins","uiElements","galleryUID","onBeforeOpen","onOpen","withCaption","withDownloadButton","_useState","useState","_useState2","contentPortal","setContentPortal","useRef","Map","openWhenReadyPid","useCallback","targetRef","itemIndex","_entries$map$sort$red","ensureRefPassed","_ref3","sortNodes","_entry","ref","_a","original","originalSrcset","rest","slides","initialPoint","getInitialActiveSlideIndex","_ref6","slideContent","createPortal","pswpInstance","position","bottom","right","color","textAlign","fontSize","lineHeight","textShadow","_pswpInstance$currSli","caption","uiElement","getHistoryState","hashIncludesNavigationQueryParams","getHashValue","history","baseUrl","getBaseUrl","currentHash","hashWithoutGidAndPid","getHashWithoutGidAndPid","urlWithoutOpenedSlide","urlWithOpenedSlide","replaceState","pushState","baseHash","gidAndPidHash","closeGalleryOnHistoryPopState","back","useEffect","openGalleryBasedOnUrlHash","params","delete","refToOpen","has","openAt","contextValue","useMemo","React","propTypes","Item","restProps","_useApiContext","useContext","refCallback","_toConsumableArray","values","childrenFnProps"],"sourceRoot":""}